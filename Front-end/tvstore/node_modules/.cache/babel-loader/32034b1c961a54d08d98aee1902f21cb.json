{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Initialize = _interopRequireDefault(require(\"./Initialize\"));\n\nvar Parser = /*#__PURE__*/function (_Component) {\n  (0, _inheritsLoose2.default)(Parser, _Component);\n\n  function Parser() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {});\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleReady\", function (api) {\n      _this.setState({\n        api: api\n      }, _this.handleParse);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleContainer\", function (container) {\n      _this.setState({\n        container: container\n      }, _this.handleParse);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleParse\", function () {\n      var _this$state = _this.state,\n          api = _this$state.api,\n          container = _this$state.container;\n\n      if (!api || !container) {\n        return;\n      }\n\n      api.parse(container);\n    });\n    return _this;\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        children = _this$props.children;\n    return _react.default.createElement(\"div\", {\n      className: className,\n      ref: this.handleContainer\n    }, _react.default.createElement(_Initialize.default, {\n      onReady: this.handleReady\n    }, children({\n      handleParse: this.handleParse\n    })));\n  };\n\n  return Parser;\n}(_react.Component);\n\nexports.default = Parser;\n(0, _defineProperty2.default)(Parser, \"defaultProps\", {\n  className: undefined\n});","map":{"version":3,"sources":["../src/Parser.jsx"],"names":["Parser","Component","className","undefined","api","container","render","children","handleContainer","handleReady","handleParse"],"mappings":";;;;;;;;;;;;;;;AACA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;IAYqBA,M;;;;;;;;;;;wFAKJ,E;8FAED,UAAA,GAAA,EAAuB;AACnC,MAAA,KAAA,CAAA,QAAA,CAAc;AACZI,QAAAA,GAAG,EAAHA;AADY,OAAd,EAEG,KAAA,CAFH,WAAA;;kGAKgB,UAAA,SAAA,EAA2B;AAC3C,MAAA,KAAA,CAAA,QAAA,CAAc;AACZC,QAAAA,SAAS,EAATA;AADY,OAAd,EAEG,KAAA,CAFH,WAAA;;8FAKY,YAAY;AAAA,UAAA,WAAA,GACG,KAAA,CADH,KAAA;AAAA,UAChBD,GADgB,GAAA,WAAA,CAAA,GAAA;AAAA,UACXC,SADW,GAAA,WAAA,CAAA,SAAA;;AAExB,UAAI,CAAA,GAAA,IAAQ,CAAZ,SAAA,EAAwB;AACtB;AACD;;AAEDD,MAAAA,GAAG,CAAHA,KAAAA,CAAAA,SAAAA;;;;;;;SAGFE,M,GAAAA,SAAAA,MAAAA,GAAS;AAAA,QAAA,WAAA,GACyB,KADzB,KAAA;AAAA,QACCJ,SADD,GAAA,WAAA,CAAA,SAAA;AAAA,QACYK,QADZ,GAAA,WAAA,CAAA,QAAA;AAGP,WACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAd,SAAA;AAA2B,MAAA,GAAG,EAAE,KAAKC;AAArC,KAAA,EACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAD,OAAA,EAAA;AAAY,MAAA,OAAO,EAAE,KAAKC;AAA1B,KAAA,EACGF,QAAQ,CAAC;AACRG,MAAAA,WAAW,EAAE,KAAKA;AADV,KAAD,CADX,CADF,CADF;;;;EA/BgCT,MAAAA,CAAAA,S;;;8BAAfD,M,kBACG;AACpBE,EAAAA,SAAS,EAAEC;AADS,C","sourcesContent":["// @flow\nimport React, { Component, type Node } from 'react';\nimport Initialize from './Initialize';\n\ntype Props = {\n  className?: string,\n  children: Function,\n};\n\ntype State = {\n  api?: Object,\n  container?: Node,\n};\n\nexport default class Parser extends Component<Props, State> {\n  static defaultProps = {\n    className: undefined,\n  };\n\n  state: State = {};\n\n  handleReady = (api: Object): void => {\n    this.setState({\n      api,\n    }, this.handleParse);\n  }\n\n  handleContainer = (container: Node): void => {\n    this.setState({\n      container,\n    }, this.handleParse);\n  }\n\n  handleParse = (): void => {\n    const { api, container } = this.state;\n    if (!api || !container) {\n      return;\n    }\n\n    api.parse(container);\n  }\n\n  render() {\n    const { className, children } = this.props;\n\n    return (\n      <div className={className} ref={this.handleContainer}>\n        <Initialize onReady={this.handleReady}>\n          {children({\n            handleParse: this.handleParse,\n          })}\n        </Initialize>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}