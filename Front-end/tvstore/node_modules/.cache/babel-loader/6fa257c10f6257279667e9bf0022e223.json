{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = exports.Method = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _LoginStatus = _interopRequireDefault(require(\"./constants/LoginStatus\"));\n\nvar Method = {\n  GET: 'get',\n  POST: 'post',\n  DELETE: 'delete'\n};\nexports.Method = Method;\n\nvar Facebook = /*#__PURE__*/function () {\n  function Facebook(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.options = (0, _extends2.default)({\n      domain: 'connect.facebook.net',\n      version: 'v3.2',\n      cookie: false,\n      status: false,\n      xfbml: false,\n      language: 'en_US',\n      frictionlessRequests: false,\n      debug: false,\n      chatSupport: false\n    }, options);\n\n    if (!this.options.appId) {\n      throw new Error('You need to set appId');\n    }\n\n    if (!this.options.wait) {\n      this.init();\n    }\n  }\n\n  var _proto = Facebook.prototype;\n\n  _proto.getAppId = function getAppId() {\n    return this.options.appId;\n  };\n\n  _proto.init = function init() {\n    var _this = this;\n\n    return _regenerator.default.async(function init$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!this.loadingPromise) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", this.loadingPromise);\n\n          case 2:\n            this.loadingPromise = new Promise(function (resolve) {\n              var _this$options = _this.options,\n                  domain = _this$options.domain,\n                  language = _this$options.language,\n                  debug = _this$options.debug,\n                  chatSupport = _this$options.chatSupport,\n                  restOptions = (0, _objectWithoutPropertiesLoose2.default)(_this$options, [\"domain\", \"language\", \"debug\", \"chatSupport\"]);\n\n              window.fbAsyncInit = function () {\n                window.FB.init({\n                  appId: restOptions.appId,\n                  version: restOptions.version,\n                  cookie: restOptions.cookie,\n                  status: restOptions.status,\n                  xfbml: restOptions.xfbml,\n                  frictionlessRequests: _this.frictionlessRequests\n                });\n                resolve(window.FB);\n              };\n\n              if (window.document.getElementById('facebook-jssdk')) {\n                return resolve(window.FB);\n              }\n\n              var js = window.document.createElement('script');\n              js.id = 'facebook-jssdk';\n              js.async = true;\n              js.defer = true;\n              js.src = \"https://\" + domain + \"/\" + language + \"/sdk\" + (chatSupport ? '/xfbml.customerchat' : '') + (debug ? '/debug' : '') + \".js\";\n              window.document.body.appendChild(js);\n            });\n            return _context.abrupt(\"return\", this.loadingPromise);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.process = function process(method, before, after) {\n    var fb;\n    return _regenerator.default.async(function process$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (before === void 0) {\n              before = [];\n            }\n\n            if (after === void 0) {\n              after = [];\n            }\n\n            _context2.next = 4;\n            return _regenerator.default.awrap(this.init());\n\n          case 4:\n            fb = _context2.sent;\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fb[method].apply(fb, before.concat([function (response) {\n                if (!response) {\n                  if (method === 'ui') return;\n                  reject(new Error('Response is undefined'));\n                } else if (response.error) {\n                  var _response$error = response.error,\n                      code = _response$error.code,\n                      type = _response$error.type,\n                      message = _response$error.message;\n                  var error = new Error(message);\n                  error.code = code;\n                  error.type = type;\n                  reject(error);\n                } else {\n                  resolve(response);\n                }\n              }], after));\n            }));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.ui = function ui(options) {\n    return _regenerator.default.async(function ui$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", this.process('ui', [options]));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.api = function api(path, method, params) {\n    return _regenerator.default.async(function api$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (method === void 0) {\n              method = Method.GET;\n            }\n\n            if (params === void 0) {\n              params = {};\n            }\n\n            return _context4.abrupt(\"return\", this.process('api', [path, method, params]));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.login = function login(opts) {\n    return _regenerator.default.async(function login$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (opts === void 0) {\n              opts = null;\n            }\n\n            return _context5.abrupt(\"return\", this.process('login', [], [opts]));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.logout = function logout() {\n    return _regenerator.default.async(function logout$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", this.process('logout'));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getLoginStatus = function getLoginStatus() {\n    return _regenerator.default.async(function getLoginStatus$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", this.process('getLoginStatus'));\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getAuthResponse = function getAuthResponse() {\n    return _regenerator.default.async(function getAuthResponse$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", this.process('getAuthResponse'));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getTokenDetail = function getTokenDetail(loginResponse) {\n    var response;\n    return _regenerator.default.async(function getTokenDetail$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            if (!(loginResponse.status === _LoginStatus.default.CONNECTED && loginResponse.authResponse)) {\n              _context9.next = 2;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", loginResponse.authResponse);\n\n          case 2:\n            _context9.next = 4;\n            return _regenerator.default.awrap(this.getLoginStatus());\n\n          case 4:\n            response = _context9.sent;\n\n            if (!(response.status === _LoginStatus.default.CONNECTED && response.authResponse)) {\n              _context9.next = 7;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", response.authResponse);\n\n          case 7:\n            throw new Error('Token is undefined');\n\n          case 8:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getProfile = function getProfile(params) {\n    return _regenerator.default.async(function getProfile$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            return _context10.abrupt(\"return\", this.api('/me', Method.GET, params));\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getTokenDetailWithProfile = function getTokenDetailWithProfile(params, response) {\n    var tokenDetail, profile;\n    return _regenerator.default.async(function getTokenDetailWithProfile$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return _regenerator.default.awrap(this.getTokenDetail(response));\n\n          case 2:\n            tokenDetail = _context11.sent;\n            _context11.next = 5;\n            return _regenerator.default.awrap(this.getProfile(params));\n\n          case 5:\n            profile = _context11.sent;\n            return _context11.abrupt(\"return\", {\n              profile: profile,\n              tokenDetail: tokenDetail\n            });\n\n          case 7:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getToken = function getToken() {\n    var authResponse;\n    return _regenerator.default.async(function getToken$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return _regenerator.default.awrap(this.getTokenDetail());\n\n          case 2:\n            authResponse = _context12.sent;\n            return _context12.abrupt(\"return\", authResponse.accessToken);\n\n          case 4:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getUserId = function getUserId() {\n    var authResponse;\n    return _regenerator.default.async(function getUserId$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return _regenerator.default.awrap(this.getTokenDetail());\n\n          case 2:\n            authResponse = _context13.sent;\n            return _context13.abrupt(\"return\", authResponse.userID);\n\n          case 4:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.sendInvite = function sendInvite(to, options) {\n    return _regenerator.default.async(function sendInvite$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            return _context14.abrupt(\"return\", this.ui((0, _extends2.default)({\n              to: to,\n              method: 'apprequests'\n            }, options)));\n\n          case 1:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.postAction = function postAction(ogNamespace, ogAction, ogObject, ogObjectUrl, noFeedStory) {\n    var url;\n    return _regenerator.default.async(function postAction$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            url = \"/me/\" + ogNamespace + \":\" + ogAction + \"?\" + ogObject + \"=\" + encodeURIComponent(ogObjectUrl);\n\n            if (noFeedStory === true) {\n              url += '&no_feed_story=true';\n            }\n\n            return _context15.abrupt(\"return\", this.api(url, Method.POST));\n\n          case 3:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getPermissions = function getPermissions() {\n    var response;\n    return _regenerator.default.async(function getPermissions$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _context16.next = 2;\n            return _regenerator.default.awrap(this.api('/me/permissions'));\n\n          case 2:\n            response = _context16.sent;\n            return _context16.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.hasPermissions = function hasPermissions(permissions) {\n    var usersPermissions, findedPermissions;\n    return _regenerator.default.async(function hasPermissions$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _context17.next = 2;\n            return _regenerator.default.awrap(this.getPermissions());\n\n          case 2:\n            usersPermissions = _context17.sent;\n            findedPermissions = permissions.filter(function (p) {\n              var currentPermission = usersPermissions.find(function (row) {\n                var permission = row.permission,\n                    status = row.status;\n                return status === 'granted' && permission === p;\n              });\n              return !!currentPermission;\n            });\n            return _context17.abrupt(\"return\", findedPermissions.length === permissions.length);\n\n          case 5:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.subscribe = function subscribe(eventName, callback) {\n    var fb;\n    return _regenerator.default.async(function subscribe$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return _regenerator.default.awrap(this.init());\n\n          case 2:\n            fb = _context18.sent;\n            fb.Event.subscribe(eventName, callback);\n\n          case 4:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.unsubscribe = function unsubscribe(eventName, callback) {\n    var fb;\n    return _regenerator.default.async(function unsubscribe$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return _regenerator.default.awrap(this.init());\n\n          case 2:\n            fb = _context19.sent;\n            fb.Event.unsubscribe(eventName, callback);\n\n          case 4:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.parse = function parse(parentNode) {\n    var fb;\n    return _regenerator.default.async(function parse$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _context20.next = 2;\n            return _regenerator.default.awrap(this.init());\n\n          case 2:\n            fb = _context20.sent;\n\n            if (typeof parentNode === 'undefined') {\n              fb.XFBML.parse();\n            } else {\n              fb.XFBML.parse(parentNode);\n            }\n\n          case 4:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.getRequests = function getRequests() {\n    return _regenerator.default.async(function getRequests$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            return _context21.abrupt(\"return\", this.api('/me/apprequests'));\n\n          case 1:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.removeRequest = function removeRequest(requestID) {\n    return _regenerator.default.async(function removeRequest$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            return _context22.abrupt(\"return\", this.api(requestID, Method.DELETE));\n\n          case 1:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.setAutoGrow = function setAutoGrow() {\n    var fb;\n    return _regenerator.default.async(function setAutoGrow$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            _context23.next = 2;\n            return _regenerator.default.awrap(this.init());\n\n          case 2:\n            fb = _context23.sent;\n            fb.Canvas.setAutoGrow();\n\n          case 4:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.paySimple = function paySimple(product, quantity) {\n    return _regenerator.default.async(function paySimple$(_context24) {\n      while (1) {\n        switch (_context24.prev = _context24.next) {\n          case 0:\n            if (quantity === void 0) {\n              quantity = 1;\n            }\n\n            return _context24.abrupt(\"return\", this.ui({\n              method: 'pay',\n              action: 'purchaseitem',\n              product: product,\n              quantity: quantity\n            }));\n\n          case 2:\n          case \"end\":\n            return _context24.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  _proto.pay = function pay(product, options) {\n    return _regenerator.default.async(function pay$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            return _context25.abrupt(\"return\", this.ui((0, _extends2.default)({\n              method: 'pay',\n              action: 'purchaseitem',\n              product: product\n            }, options)));\n\n          case 1:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, null, this);\n  };\n\n  return Facebook;\n}();\n/*\n  sendToFriends: function(options, callback) {\n    if(!options) {\n      options = {};\n    }\n\n    options.method = 'send';\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendMessage: function(message, name, caption, description, url, imgUrl, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        method: 'stream.publish',\n        message: message,\n        attachment: {\n          name: name,\n          caption: caption,\n          description: description,\n          href: url,\n          media:[{\n            type: 'image',\n            src:  imgUrl,\n            href: url\n          }]\n        },\n        action_links: [{\n          text: 'Code',\n          href: url\n        }],\n        user_prompt_message: message\n      },\n      function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendInviteForm: function(options, callback) {\n    if(typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method = options.method || 'apprequests';\n\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  checkPageLike: function(pageID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      fbApi.getUserID(function(err, userID) {\n        if(err) {\n          return callback(err);\n        }\n\n        var fqlQuery = `SELECT uid FROM page_fan WHERE page_id = ${pageID} and uid = ${userID}`;\n        var query = FB.Data.query(fqlQuery);\n\n        query.wait(function(rows) {\n          if (rows.length === 1 && rows[0].uid === userID) {\n            callback(null, true, query);\n          }\n          else {\n            callback(null, false, query);\n          }\n        });\n      });\n    });\n  },\n\n  sendMessageToFriend: function (friendID, link, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        to: friendID,\n        method: 'send',\n        link: link\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  _prepareUsers: function(data) {\n    var users=[];\n\n    for(var index in data) {\n      var userData=data[index];\n\n      var user = {\n        provider_uid: 'facebook'+'_'+userData.uid,\n        provider: 'facebook',\n        id: userData.uid,\n        name: userData.name,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        status: (userData.status!==null) ? userData.status : null,\n        image: '//graph.facebook.com/'+userData.uid+'/picture?'\n      };\n\n      users.push(user);\n    }\n\n    return users;\n  },\n\n  getUserList: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('fql', {\n        q: `\n          SELECT uid, name, first_name, last_name, online_presence, status\n          FROM user\n          WHERE uid IN\n            ( SELECT uid2 FROM friend WHERE uid1 = me()) ORDER BY name\n        `,\n      }, function (response)\n      {\n        var users = fbApi._prepareUsers(response.data);\n        callback(null, users, response);\n      });\n    });\n  },\n\n  postFeed: function(options, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method='feed';\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  createAlbum: function(name, description, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', 'post', {\n        name: name,\n        description: description\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  addImageToAlbum: function(albumID, imageURL, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', 'post', {\n        message: message,\n        url: imageURL\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbums: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumPhotos: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumCoverPicture: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/picture', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'publish_stream'\n  postPhoto: function(photoUrl, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/photos', 'post', {\n        message: message,\n        url: photoUrl\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  getPageInfo: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.Canvas.getPageInfo(function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  }\n*/\n\n\nexports.default = Facebook;","map":{"version":3,"sources":["../src/Facebook.js"],"names":["Method","GET","POST","DELETE","Facebook","options","domain","version","cookie","status","xfbml","language","frictionlessRequests","debug","chatSupport","getAppId","init","restOptions","window","appId","resolve","js","process","before","after","fb","method","reject","response","code","type","message","error","ui","api","params","login","opts","logout","getLoginStatus","getAuthResponse","getTokenDetail","loginResponse","LoginStatus","getProfile","getTokenDetailWithProfile","tokenDetail","profile","getToken","authResponse","getUserId","sendInvite","to","postAction","url","encodeURIComponent","noFeedStory","getPermissions","hasPermissions","usersPermissions","findedPermissions","currentPermission","permission","row","permissions","subscribe","unsubscribe","parse","getRequests","removeRequest","setAutoGrow","paySimple","quantity","action","product","pay"],"mappings":"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","sourcesContent":["// @flow\nimport LoginStatus from './constants/LoginStatus';\n\nexport const Method = {\n  GET: 'get',\n  POST: 'post',\n  DELETE: 'delete',\n};\n\nexport default class Facebook {\n  constructor(options = {}) {\n    this.options = {\n      domain: 'connect.facebook.net',\n      version: 'v3.2',\n      cookie: false,\n      status: false,\n      xfbml: false,\n      language: 'en_US',\n      frictionlessRequests: false,\n      debug: false,\n      chatSupport: false,\n      ...options,\n    };\n\n    if (!this.options.appId) {\n      throw new Error('You need to set appId');\n    }\n\n    if (!this.options.wait) {\n      this.init();\n    }\n  }\n\n  getAppId(): string {\n    return this.options.appId;\n  }\n\n  async init() {\n    if (this.loadingPromise) {\n      return this.loadingPromise;\n    }\n\n    this.loadingPromise = new Promise((resolve) => {\n      const {\n        domain,\n        language,\n        debug,\n        chatSupport,\n        ...restOptions\n      } = this.options;\n\n      window.fbAsyncInit = () => {\n        window.FB.init({\n          appId: restOptions.appId,\n          version: restOptions.version,\n          cookie: restOptions.cookie,\n          status: restOptions.status,\n          xfbml: restOptions.xfbml,\n          frictionlessRequests: this.frictionlessRequests,\n        });\n\n        resolve(window.FB);\n      };\n\n      if (window.document.getElementById('facebook-jssdk')) {\n        return resolve(window.FB);\n      }\n\n      const js = window.document.createElement('script');\n      js.id = 'facebook-jssdk';\n      js.async = true;\n      js.defer = true;\n      js.src = `https://${domain}/${language}/sdk${chatSupport ? '/xfbml.customerchat' : ''}${debug ? '/debug' : ''}.js`;\n\n      window.document.body.appendChild(js);\n    });\n\n    return this.loadingPromise;\n  }\n\n  async process(method, before = [], after = []) {\n    const fb = await this.init();\n\n    return new Promise((resolve, reject) => {\n      fb[method](...before, (response) => {\n        if (!response) {\n          if (method === 'ui') return;\n          reject(new Error('Response is undefined'));\n        } else if (response.error) {\n          const { code, type, message } = response.error;\n\n          const error = new Error(message);\n          error.code = code;\n          error.type = type;\n\n          reject(error);\n        } else {\n          resolve(response);\n        }\n      }, ...after);\n    });\n  }\n\n  async ui(options) {\n    return this.process('ui', [options]);\n  }\n\n  async api(path, method = Method.GET, params = {}) {\n    return this.process('api', [path, method, params]);\n  }\n\n  async login(opts = null) {\n    return this.process('login', [], [opts]);\n  }\n\n  async logout() {\n    return this.process('logout');\n  }\n\n  async getLoginStatus() {\n    return this.process('getLoginStatus');\n  }\n\n  async getAuthResponse() {\n    return this.process('getAuthResponse');\n  }\n\n  async getTokenDetail(loginResponse) {\n    if (loginResponse.status === LoginStatus.CONNECTED && loginResponse.authResponse) {\n      return loginResponse.authResponse;\n    }\n\n    const response = await this.getLoginStatus();\n\n    if (response.status === LoginStatus.CONNECTED && response.authResponse) {\n      return response.authResponse;\n    }\n\n    throw new Error('Token is undefined');\n  }\n\n  async getProfile(params) {\n    return this.api('/me', Method.GET, params);\n  }\n\n  async getTokenDetailWithProfile(params, response) {\n    const tokenDetail = await this.getTokenDetail(response);\n    const profile = await this.getProfile(params);\n\n    return {\n      profile,\n      tokenDetail,\n    };\n  }\n\n  async getToken() {\n    const authResponse = await this.getTokenDetail();\n    return authResponse.accessToken;\n  }\n\n  async getUserId() {\n    const authResponse = await this.getTokenDetail();\n    return authResponse.userID;\n  }\n\n  async sendInvite(to, options) {\n    return this.ui({\n      to,\n      method: 'apprequests',\n      ...options,\n    });\n  }\n\n\n  async postAction(ogNamespace, ogAction, ogObject, ogObjectUrl, noFeedStory) {\n    let url = `/me/${ogNamespace}:${ogAction}?${ogObject}=${encodeURIComponent(ogObjectUrl)}`;\n\n    if (noFeedStory === true) {\n      url += '&no_feed_story=true';\n    }\n\n    return this.api(url, Method.POST);\n  }\n\n  async getPermissions() {\n    const response = await this.api('/me/permissions');\n    return response.data;\n  }\n\n  async hasPermissions(permissions) {\n    const usersPermissions = await this.getPermissions();\n\n    const findedPermissions = permissions.filter((p) => {\n      const currentPermission = usersPermissions.find((row) => {\n        const { permission, status } = row;\n        return status === 'granted' && permission === p;\n      });\n\n      return !!currentPermission;\n    });\n\n    return findedPermissions.length === permissions.length;\n  }\n\n  async subscribe(eventName, callback) {\n    const fb = await this.init();\n    fb.Event.subscribe(eventName, callback);\n  }\n\n  async unsubscribe(eventName, callback) {\n    const fb = await this.init();\n    fb.Event.unsubscribe(eventName, callback);\n  }\n\n  async parse(parentNode) {\n    const fb = await this.init();\n\n    if (typeof parentNode === 'undefined') {\n      fb.XFBML.parse();\n    } else {\n      fb.XFBML.parse(parentNode);\n    }\n  }\n\n  async getRequests() {\n    return this.api('/me/apprequests');\n  }\n\n  async removeRequest(requestID) {\n    return this.api(requestID, Method.DELETE);\n  }\n\n  async setAutoGrow() {\n    const fb = await this.init();\n    fb.Canvas.setAutoGrow();\n  }\n\n  async paySimple(product, quantity = 1) {\n    return this.ui({\n      method: 'pay',\n      action: 'purchaseitem',\n      product,\n      quantity,\n    });\n  }\n\n  async pay(product, options) {\n    return this.ui({\n      method: 'pay',\n      action: 'purchaseitem',\n      product,\n      ...options,\n    });\n  }\n}\n\n/*\n  sendToFriends: function(options, callback) {\n    if(!options) {\n      options = {};\n    }\n\n    options.method = 'send';\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendMessage: function(message, name, caption, description, url, imgUrl, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        method: 'stream.publish',\n        message: message,\n        attachment: {\n          name: name,\n          caption: caption,\n          description: description,\n          href: url,\n          media:[{\n            type: 'image',\n            src:  imgUrl,\n            href: url\n          }]\n        },\n        action_links: [{\n          text: 'Code',\n          href: url\n        }],\n        user_prompt_message: message\n      },\n      function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendInviteForm: function(options, callback) {\n    if(typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method = options.method || 'apprequests';\n\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  checkPageLike: function(pageID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      fbApi.getUserID(function(err, userID) {\n        if(err) {\n          return callback(err);\n        }\n\n        var fqlQuery = `SELECT uid FROM page_fan WHERE page_id = ${pageID} and uid = ${userID}`;\n        var query = FB.Data.query(fqlQuery);\n\n        query.wait(function(rows) {\n          if (rows.length === 1 && rows[0].uid === userID) {\n            callback(null, true, query);\n          }\n          else {\n            callback(null, false, query);\n          }\n        });\n      });\n    });\n  },\n\n  sendMessageToFriend: function (friendID, link, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        to: friendID,\n        method: 'send',\n        link: link\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  _prepareUsers: function(data) {\n    var users=[];\n\n    for(var index in data) {\n      var userData=data[index];\n\n      var user = {\n        provider_uid: 'facebook'+'_'+userData.uid,\n        provider: 'facebook',\n        id: userData.uid,\n        name: userData.name,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        status: (userData.status!==null) ? userData.status : null,\n        image: '//graph.facebook.com/'+userData.uid+'/picture?'\n      };\n\n      users.push(user);\n    }\n\n    return users;\n  },\n\n  getUserList: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('fql', {\n        q: `\n          SELECT uid, name, first_name, last_name, online_presence, status\n          FROM user\n          WHERE uid IN\n            ( SELECT uid2 FROM friend WHERE uid1 = me()) ORDER BY name\n        `,\n      }, function (response)\n      {\n        var users = fbApi._prepareUsers(response.data);\n        callback(null, users, response);\n      });\n    });\n  },\n\n  postFeed: function(options, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method='feed';\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  createAlbum: function(name, description, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', 'post', {\n        name: name,\n        description: description\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  addImageToAlbum: function(albumID, imageURL, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', 'post', {\n        message: message,\n        url: imageURL\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbums: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumPhotos: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumCoverPicture: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/picture', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'publish_stream'\n  postPhoto: function(photoUrl, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/photos', 'post', {\n        message: message,\n        url: photoUrl\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  getPageInfo: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.Canvas.getPageInfo(function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  }\n*/\n"]},"metadata":{},"sourceType":"script"}