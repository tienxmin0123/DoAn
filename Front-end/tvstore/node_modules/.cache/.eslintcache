[{"C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\index.js":"1","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\App.js":"3","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\ProductDetail\\ProductDetail.js":"4","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Register\\Register.js":"5","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\TypeProduct\\TypeProduct.js":"6","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Login\\Login.js":"7","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Cart\\Cart.js":"8","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Search\\Search.js":"9","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\ProductPortfolio\\Product_Portfolio.js":"10","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Promotion\\Promotion.js":"11","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\PaymentGuide\\PaymentGuide.js":"12","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Home\\Home.js":"13","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\PaymentMoMo\\PaymentResult.js":"14","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\BuildConfig\\BuildConfig.js":"15","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\User_Infomartion\\User_infomartion.js":"16","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\NoMatch\\NoMatch.js":"17","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\Ordered\\Ordered.js":"18","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\InformationOrder\\InformationOrder.js":"19","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\allOrder\\Order.js":"20","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\SendMailResetPassword\\SendMailResetPassword.js":"21","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\ResetPassword\\ResetPassword.js":"22","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\CompleteOrder\\CompleteOrder.js":"23","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\OrderCanceled\\OrderCanceled.js":"24","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\UpdatePassword\\UpdatePassword.js":"25","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\UpdateUser\\UpdateUser.js":"26","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\ActiveUser\\ActiveUser.js":"27","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Footer\\Footer.js":"28","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Pagination\\Paginate.js":"29","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Header\\Header.js":"30","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Comment\\Comment.js":"31","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Paypal\\Paypal.js":"32","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Body\\Body.js":"33","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\ModalNews\\ModalNews.js":"34","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Banner\\Banner.js":"35","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Product\\ProductsAccordingToCriteria\\ProductsAccordingToCriteria.js":"36","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Product\\ProductBestSellingByBrand\\ProductBestSellingByBrand.js":"37"},{"size":630,"mtime":1637089898924,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1634548918008,"results":"40","hashOfConfig":"39"},{"size":5753,"mtime":1637064892750,"results":"41","hashOfConfig":"39"},{"size":18942,"mtime":1637089898896,"results":"42","hashOfConfig":"39"},{"size":16865,"mtime":1637089898904,"results":"43","hashOfConfig":"39"},{"size":7462,"mtime":1636387097851,"results":"44","hashOfConfig":"39"},{"size":7745,"mtime":1653296564740,"results":"45","hashOfConfig":"39"},{"size":29239,"mtime":1653447877662,"results":"46","hashOfConfig":"39"},{"size":4745,"mtime":1653296610218,"results":"47","hashOfConfig":"39"},{"size":3725,"mtime":1653296623626,"results":"48","hashOfConfig":"39"},{"size":2961,"mtime":1636299214998,"results":"49","hashOfConfig":"39"},{"size":10505,"mtime":1653296648493,"results":"50","hashOfConfig":"39"},{"size":602,"mtime":1634548917962,"results":"51","hashOfConfig":"39"},{"size":6362,"mtime":1636313032079,"results":"52","hashOfConfig":"39"},{"size":53463,"mtime":1637089898881,"results":"53","hashOfConfig":"39"},{"size":1842,"mtime":1636313032111,"results":"54","hashOfConfig":"39"},{"size":659,"mtime":1634548917977,"results":"55","hashOfConfig":"39"},{"size":4263,"mtime":1634548917962,"results":"56","hashOfConfig":"39"},{"size":4168,"mtime":1636736984994,"results":"57","hashOfConfig":"39"},{"size":4196,"mtime":1652759397770,"results":"58","hashOfConfig":"39"},{"size":3454,"mtime":1637089898863,"results":"59","hashOfConfig":"39"},{"size":4953,"mtime":1637089898861,"results":"60","hashOfConfig":"39"},{"size":4168,"mtime":1634548917946,"results":"61","hashOfConfig":"39"},{"size":4187,"mtime":1634548917946,"results":"62","hashOfConfig":"39"},{"size":6482,"mtime":1637089898876,"results":"63","hashOfConfig":"39"},{"size":7752,"mtime":1637089898879,"results":"64","hashOfConfig":"39"},{"size":2865,"mtime":1634548917946,"results":"65","hashOfConfig":"39"},{"size":2096,"mtime":1652752197783,"results":"66","hashOfConfig":"39"},{"size":549,"mtime":1636394439454,"results":"67","hashOfConfig":"39"},{"size":12862,"mtime":1652752233122,"results":"68","hashOfConfig":"39"},{"size":1169,"mtime":1634548917930,"results":"69","hashOfConfig":"39"},{"size":1566,"mtime":1634548917930,"results":"70","hashOfConfig":"39"},{"size":1156,"mtime":1636299214992,"results":"71","hashOfConfig":"39"},{"size":763,"mtime":1634548917930,"results":"72","hashOfConfig":"39"},{"size":5741,"mtime":1637110631202,"results":"73","hashOfConfig":"39"},{"size":3601,"mtime":1634548917946,"results":"74","hashOfConfig":"39"},{"size":3151,"mtime":1637092146172,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11q6jzt",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":1,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},"C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\index.js",[],"C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\App.js",["180","181","182"],"import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProductDetail from \"./Pages/ProductDetail/ProductDetail\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport TypeProduct from \"./Pages/TypeProduct/TypeProduct\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Register from \"./Pages/Register/Register\";\r\nimport NoMatch from \"./Pages/NoMatch/NoMatch\";\r\nimport Home from \"./Pages/Home/Home\";\r\nimport Cart from \"./Pages/Cart/Cart\";\r\nimport Order from \"./Pages/Account/allOrder/Order\";\r\nimport Ordered from \"./Pages/Account/Ordered/Ordered\";\r\nimport InformationOrder from \"./Pages/Account/InformationOrder/InformationOrder\";\r\nimport BuildConfig from \"./Pages/BuildConfig/BuildConfig\";\r\nimport SendMailResetPassword from \"./Pages/Account/SendMailResetPassword/SendMailResetPassword\";\r\nimport ResetPassword from \"./Pages/Account/ResetPassword/ResetPassword\";\r\nimport Search from \"./Pages/Search/Search\";\r\nimport PaymentResult from \"./Pages/PaymentMoMo/PaymentResult\";\r\nimport CompleteOrder from \"./Pages/Account/CompleteOrder/CompleteOrder\";\r\nimport OrderCancel from \"./Pages/Account/OrderCanceled/OrderCanceled\";\r\nimport UpdateUser from \"./Pages/Account/UpdateUser/UpdateUser\";\r\nimport UpdatePassword from \"./Pages/Account/UpdatePassword/UpdatePassword\";\r\nimport ActiveUser from \"./Pages/Account/ActiveUser/ActiveUser\";\r\nimport PaymentGuide from \"./Pages/PaymentGuide/PaymentGuide\";\r\nimport Promotion from \"./Pages/Promotion/Promotion\";\r\nimport Product_Portfolio from \"./Pages/ProductPortfolio/Product_Portfolio\";\r\nimport User_infomartion from \"./Pages/User_Infomartion/User_infomartion\";\r\nconst cartFromLocalStorage = JSON.parse(\r\n  localStorage.getItem(\"cartItems\") || \"[]\"\r\n);\r\nfunction App() {\r\n  const [products, SetProduct] = useState([]);\r\n  const [cartItems, setCartItems] = useState(cartFromLocalStorage);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/top-products-hot\")\r\n      .then(\r\n        (response) => {\r\n          console.log(\"res:\", response.data);\r\n          SetProduct(response.data);\r\n          setLoading(false);\r\n        },\r\n        () => {}\r\n      )\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n  \r\n  const onAdd = (product) => {\r\n    // setCartItems([...cartItems,product]);\r\n    // console.log(product.id);\r\n    const exist = cartItems.find((x) => x.id === product.id);\r\n    if (exist) {\r\n      setCartItems(\r\n        \r\n        cartItems.map((x) =>\r\n          x.id === product.id? { ...exist, qty: exist.qty + 1 } : x\r\n        )\r\n      );\r\n    } else {\r\n      setCartItems([...cartItems, { ...product, qty: 1 }]);\r\n    }\r\n  };\r\n  const onRemove = (product) => {\r\n    const exist = cartItems.find((x) => x.id === product.id);\r\n    if (exist.qty === 1) {\r\n      setCartItems(cartItems.filter((x) => x.id !== product.id));\r\n    } else {\r\n      setCartItems(\r\n        cartItems.map((x) =>\r\n          x.id === product.id ? { ...exist, qty: exist.qty - 1 } : x\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const onRemoveAll = (product) => {\r\n      setCartItems(cartItems.filter((x) => x.id !== product.id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home products={products} loading={loading} />\r\n          </Route>\r\n          <Route path=\"/Login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/Register\">\r\n            <Register />\r\n          </Route>\r\n          <Route path=\"/ProductDetail/:id\">\r\n            <ProductDetail onAdd={onAdd} />\r\n          </Route>\r\n          <Route path=\"/collections/:id\">\r\n            <TypeProduct />\r\n          </Route>\r\n          <Route path=\"/cart\">\r\n            <Cart cartItems={cartItems} onAdd={onAdd} onRemove={onRemove} onRemoveAll={onRemoveAll}/>\r\n          </Route>\r\n          <Route path=\"/account-order\">\r\n            <Order />\r\n          </Route>\r\n          <Route path=\"/account-ordered\">\r\n            <Ordered />\r\n          </Route>\r\n          <Route path=\"/account-completeOrder\">\r\n            <CompleteOrder />\r\n          </Route>\r\n          <Route path=\"/account/order/:id\">\r\n            <InformationOrder />\r\n          </Route>\r\n          <Route path=\"/resultOrder/\">\r\n            <PaymentResult/>\r\n          </Route>\r\n          <Route path=\"/account-orderCanceled\">\r\n            <OrderCancel/>\r\n          </Route>\r\n          <Route path=\"/updateUser/\">\r\n            <UpdateUser/>\r\n          </Route>\r\n          <Route path=\"/updatePassword/\">\r\n            <UpdatePassword/>\r\n          </Route>\r\n          <Route path=\"/acount/resetPassword\">\r\n            <SendMailResetPassword />\r\n          </Route>\r\n          <Route path=\"/buildPC\">\r\n            <BuildConfig />\r\n          </Route>\r\n          <Route path=\"/account/configPassword/:token\">\r\n            <ResetPassword />\r\n          </Route>\r\n          <Route path=\"/account/activeUser\">\r\n            <ActiveUser />\r\n          </Route>\r\n          <Route path=\"/search\">\r\n            <Search />\r\n          </Route>\r\n          <Route path=\"/PaymentGuide\">\r\n            <PaymentGuide />\r\n          </Route>\r\n          <Route path=\"/Promotion-information\">\r\n            <Promotion />\r\n          </Route>\r\n          <Route path=\"/Product-Portffolio\">\r\n            <Product_Portfolio />\r\n          </Route>\r\n          <Route path=\"/checkouts\">\r\n            <User_infomartion/>\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <NoMatch />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\ProductDetail\\ProductDetail.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../Component/Header/Header\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nimport \"./ProductDetail.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/navigation/navigation.min.css\";\r\nimport \"swiper/components/thumbs/thumbs.min.css\";\r\nimport SwiperCore, { Navigation, Thumbs } from \"swiper/core\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport {\r\n  Divider,\r\n  Avatar,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport Comment from \"../../Component/Comment/Comment\";\r\n\r\nSwiperCore.use([Navigation, Thumbs]);\r\nconst userLogin = JSON.parse(localStorage.getItem(\"userLogin\") || \"[]\");\r\n\r\nfunction ProductDetail(props) {\r\n  const [selectedImage, SetSelectedImage] = useState([0]);\r\n  const [Product, SetProducts] = useState([]);\r\n  const [suggestProduct, setSuggestProduct] = useState([]);\r\n  const [thumbsSwiper, setThumbsSwiper] = useState(null);\r\n  const [comment, setComment] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n  const { onAdd } = props;\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/GetProductByID/${id}`)\r\n      .then((response) => {\r\n        if (response.data == \"\") {\r\n          return null;\r\n        } else {\r\n          console.log(response.data);\r\n          SetProducts(response.data);\r\n        }\r\n      });\r\n\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/GetImageProductByID/${id}`)\r\n      .then((res) => {\r\n        SetSelectedImage(res.data);\r\n      });\r\n\r\n    axios.get(`http://127.0.0.1:8000/api/suggestProduct/1`).then((response) => {\r\n      setSuggestProduct(response.data);\r\n    });\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getComments/${id}`)\r\n      .then((response) => {\r\n        setComment(response.data);\r\n      });\r\n  }, []);\r\n\r\n  const handlePostComment = () => {\r\n    const data = {\r\n      content: content,\r\n      nguoi_dungs_id: userLogin.id,\r\n      san_phams_id: id,\r\n    };\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/AddComment\", data)\r\n      .then((response) => {\r\n        axios\r\n          .get(`http://127.0.0.1:8000/api/getComments/${id}`)\r\n          .then((response) => {\r\n            setComment(response.data);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        if (err.response.data.message != undefined) {\r\n          enqueueSnackbar(err.response.data.message, {\r\n            variant: \"error\",\r\n            autoHideDuration: 3000,\r\n            preventDuplicate: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const LinkImage = \"http://127.0.0.1:8000/images/\";\r\n  var elements = [];\r\n\r\n  Product.forEach((element) => {\r\n    if (element.CauHinh === \"\" || element.CauHinh === undefined) {\r\n      elements.push(\r\n        <span style={{ color: \"red\", fontSize: \"20px\", marginTop: \"20px\" }}>\r\n          Sản phẩm này chưa có thông tin cấu hình\r\n        </span>\r\n      );\r\n    } else {\r\n      const configs = element.CauHinh;\r\n\r\n      const ch = JSON.parse(configs);\r\n\r\n      for (const [key, value] of Object.entries(ch)) {\r\n        // console.log(`${value.config_name}: ${value.content}`);\r\n        elements.push(\r\n          <tr className=\"row-info\" style={{ height: \"35px\" }} key={key}>\r\n            <td className=\"name-Product\">\r\n              <span style={{ color: \"black\" }}>{`${value.config_name}`}</span>\r\n            </td>\r\n            <td className=\"info-Product\">{`${value.content}`}</td>\r\n          </tr>\r\n        );\r\n      }\r\n    }\r\n  });\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div id=\"breadcrumb\">\r\n          <div className=\"main\">\r\n            <div className=\"breadcrumbs container\">\r\n              <span className=\"showHere\">Bạn đang ở:</span>\r\n              <Link to=\"/\" className=\"path\">\r\n                Trang Chủ\r\n              </Link>\r\n              <i className=\"fa fa-caret-right\"></i>\r\n              <span>\r\n                <a href=\"#\">Laptop</a>\r\n              </span>\r\n              <i className=\"fa fa-caret-right\"></i>\r\n              <span className=\"path\">{}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"mainframe\">\r\n          <div className=\"container\">\r\n            <div id=\"maincontent\">\r\n              <div id=\"system-message-container\">\r\n                <div id=\"system-message\"></div>\r\n              </div>\r\n              <div className=\"page_content\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-6 col-xs-12 product_thumbnail\">\r\n                    <Swiper\r\n                      style={{\r\n                        \"--swiper-navigation-color\": \"#fff\",\r\n                        \"--swiper-pagination-color\": \"#fff\",\r\n                      }}\r\n                      spaceBetween={5}\r\n                      navigation={true}\r\n                      thumbs={{ swiper: thumbsSwiper }}\r\n                      className=\"mySwiper2\"\r\n                    >\r\n                      {selectedImage.map((image, index) => (\r\n                        <SwiperSlide key={index}>\r\n                          <img\r\n                            src={LinkImage + image.AnhSanPham}\r\n                            alt={image.AnhSanPham}\r\n                          />\r\n                        </SwiperSlide>\r\n                      ))}\r\n                    </Swiper>\r\n                    <Swiper\r\n                      onSwiper={setThumbsSwiper}\r\n                      spaceBetween={5}\r\n                      slidesPerView={4}\r\n                      freeMode={true}\r\n                      watchSlidesVisibility={true}\r\n                      watchSlidesProgress={true}\r\n                      className=\"mySwiper\"\r\n                    >\r\n                      {selectedImage.map((image, index) => (\r\n                        <SwiperSlide key={index}>\r\n                          <img\r\n                            src={LinkImage + image.AnhSanPham}\r\n                            alt={image.AnhSanPham}\r\n                          />\r\n                        </SwiperSlide>\r\n                      ))}\r\n                    </Swiper>\r\n                   \r\n                  </div>\r\n                  {Product.map((item, index) => (\r\n                    <div\r\n                      className=\"col-sm-6 col-xs-12 product_parameters\"\r\n                      key={index}\r\n                    >\r\n                      <h1 className=\"product_name\">{item.TenSanPham}</h1>\r\n                      {/* <div className=\"ins-preview-wrapper ins-preview-wrapper-145\">\r\n                        <div className=\"img-nb\">\r\n                          <img\r\n                            src=\"https://image.useinsider.com/gearvn/defaultImageLibrary/81721246_549814752275222_5174665937835524096_n-LPC3yvsFp2VYuVOl7AQz1578559780.png\"\r\n                            alt=\"gvn\"\r\n                          />\r\n                        </div>\r\n                        <span className=\"follower\">25</span>\r\n                        <span className=\"follower\">\r\n                          người đang quan tâm sản phẩm\r\n                        </span>\r\n                      </div> */}\r\n                      <p className=\"Brand-product\">\r\n                        <span>Hãng sản xuất : {item.HangSanXuat}</span>\r\n                      </p>\r\n                      <p className=\"Product-warranty\">\r\n                        <span>Bảo hành : 12 tháng</span>\r\n                      </p>\r\n                      <p>\r\n                        <span style={{ fontSize: \"15pt\", color: \"#ff0000\" }}>\r\n                          <strong>Quà Tặng</strong>\r\n                          <strong>:</strong>\r\n                        </span>\r\n                      </p>\r\n                      <p>\r\n                        <span style={{ fontSize: \"15pt\" }}>\r\n                          <strong>\r\n                            <span style={{ color: \"#ff0000\" }}>★</span>\r\n                            <span>&nbsp;</span>\r\n                            <span style={{ color: \"#0000ff\" }}>\r\n                              Tặng balo khi mua sản phẩm này\r\n                            </span>\r\n                          </strong>\r\n                        </span>\r\n                      </p>\r\n                     \r\n                      <form id=\"add-item-form-2\" name=\"shoppingCart\">\r\n                        <div className=\"product_nav_btn\">\r\n                          <div className=\"product_sales_off pull-left\">\r\n                            <span className=\"price-text\">Giá cũ :</span>\r\n                            <span className=\"product_price\">\r\n                              <NumberFormat\r\n                                value={item.GiaCu}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <del {...props}>{value}</del>\r\n                                )}\r\n                              />\r\n                            </span>\r\n                            <br />\r\n                            <span className=\"price-text\">Giá KM:</span>\r\n                            <span className=\"product_sale_price\">\r\n                              <NumberFormat\r\n                                value={item.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <span {...props}>{value}</span>\r\n                                )}\r\n                              />\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"clearfix\"></div>\r\n                        <div className=\"form-group\">\r\n                          {item.SoLuong == 0 ? (\r\n                            <p style={{ color: \"red\", fontSize: \"24px\" }}>\r\n                              Sản phẩm tạm hết hàng\r\n                            </p>\r\n                          ) : (\r\n                            <Link to=\"/cart\">\r\n                              <Button\r\n                                className=\"product_buy_btn btn-success theme_button addtocar\"\r\n                                type=\"button\"\r\n                                onClick={() => onAdd(item)}\r\n                              >\r\n                                Mua hàng\r\n                              </Button>\r\n                            </Link>\r\n                          )}\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                {/* <div className=\"ins-preview-wrapper ins-preview-wrapper-2587\" style={{display:\"block\",visibility:\"visible\"}}>\r\n                      <div className=\"ins-content-wrapper ins-content-wrapper-2587\">\r\n\r\n                      </div>\r\n                </div> */}\r\n                {/**Sản phẩm thường được xem cùng */}\r\n                <div id=\"featured-product\">\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <h2 className=\"new-product-title\">\r\n                      Sản Phẩm thường được xem cùng\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"loop-pro\">\r\n                    <div className=\"module-products row\">\r\n                      {suggestProduct.map((item, index) => (\r\n                        <div\r\n                          className=\"col-sm-4 col-xs-12 padding-none col-fix20\"\r\n                          key={index}\r\n                        >\r\n                          <div className=\"product-row\">\r\n                            <div className=\"product-row-img\">\r\n                              <Link to={`/ProductDetail/${item.id}`}>\r\n                                <img\r\n                                  src={LinkImage + item.AnhDaiDien}\r\n                                  className=\"product-row-thumbnail\"\r\n                                  alt={item.AnhDaiDien}\r\n                                />\r\n                              </Link>\r\n                              <div className=\"product-row-price-hover\">\r\n                                <div className=\"product-row-note pull-left\">\r\n                                  Xem chi tiết\r\n                                </div>\r\n                                <Link\r\n                                  to={`/ProductDetail/${item.id}`}\r\n                                  className=\"product-row-btnbuy pull-right\"\r\n                                >\r\n                                  đặt hàng\r\n                                </Link>\r\n                              </div>\r\n                            </div>\r\n                            <h2 className=\"product-row-name\">\r\n                              {item.TenSanPham}\r\n                            </h2>\r\n                            <div className=\"product-row-info\">\r\n                              <div className=\"product-row-price pull-left\">\r\n                                <NumberFormat\r\n                                  value={item.GiaCu}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  suffix={\" VNĐ\"}\r\n                                  renderText={(value, props) => (\r\n                                    <span {...props}>{value}</span>\r\n                                  )}\r\n                                />\r\n                                <br />\r\n\r\n                                <NumberFormat\r\n                                  value={item.GiaKM}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  suffix={\" VNĐ\"}\r\n                                  renderText={(value, props) => (\r\n                                    <span\r\n                                      className=\"product-row-sale\"\r\n                                      {...props}\r\n                                    >\r\n                                      {value}\r\n                                    </span>\r\n                                  )}\r\n                                />\r\n                              </div>\r\n                              <div className=\"new-product-percent\">-10%</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div id=\"product_content_detail\" className=\"row\">\r\n                  <Tabs>\r\n                    <TabList>\r\n                      <Tab>Thông tin sản phẩm</Tab>\r\n                      <Tab>Tiêu Biểu</Tab>\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                      <h5 style={{ color: \"red\", textDecoration: \"underline\" }}>\r\n                        <strong>Thông tin sản phẩm</strong>\r\n                      </h5>\r\n                      <div className=\"scroll-table\">\r\n                        <table className=\"table table-bordered mce-item-table\">\r\n                          <tbody>{elements.map((item) => item)}</tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      {/*phần đánh giá chi tiết */}\r\n                      {Product.map((item, index) => (\r\n                        <div\r\n                          key={index}\r\n                          dangerouslySetInnerHTML={{ __html: item.ThongTin }}\r\n                          className=\"vote-product\"\r\n                        ></div>\r\n                      ))}\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                      {/* <h2>Cẩm Nhung xinh đẹp </h2> */}\r\n                      <div style={{ padding: 14 }} className=\"comment-list\">\r\n                        <h2> {comment.length} Comments cho sản phẩm này</h2>\r\n                       <Comment comment={comment} />\r\n                        <Paper style={{ height: \"230px\", marginTop: \"30px\" }}>\r\n                        \r\n                          <div className=\"bg-light p-2 comment\">\r\n                            <div className=\"d-flex flex-row align-items-start\">\r\n                              <img\r\n                                className=\"rounded-circle\"\r\n                                src={userLogin.Anh}\r\n                                width={40}\r\n                                alt=\"avatar\"\r\n                              />\r\n                              <textarea\r\n                                className=\"form-control ml-1 shadow-none textarea comment-box \"\r\n                                defaultValue={\"\"}\r\n                                placeholder=\"Nhập đánh giá của bạn ở đây\"\r\n                                onChange={(e) =>setContent(e.target.value)}\r\n                              />\r\n                            </div>\r\n                            <div className=\"mt-2 text-right\">\r\n                              <button\r\n                              type=\"submit\"\r\n                              onClick={handlePostComment}\r\n                                className=\"btn btn-primary btn-sm shadow-none\"\r\n                                \r\n                              >\r\n                                Post comment\r\n                              </button>\r\n                              <button\r\n                                className=\"btn btn-outline-primary btn-sm ml-1 shadow-none\"\r\n                                type=\"button\"\r\n                              >\r\n                                Cancel\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </Paper>\r\n                      </div>\r\n                      \r\n                    </TabPanel>\r\n                  </Tabs>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div id=\"binhluan\">\r\n            <div className=\"title-bl\">\r\n                <h2>Bình Luận</h2>\r\n            </div>\r\n        </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Register\\Register.js",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React, { useEffect, useRef } from \"react\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nimport Header from \"../../Component/Header/Header\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"./Register.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction Register() {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [nameUser, setNameUser] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState([]);\r\n  const [district, setDistrict] = useState([]);\r\n  const [sex, setSex] = useState(1);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [errorEmail, setErrorEmail] = useState([]);\r\n  const [errorUsername, setErrorUsername] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [images, setImages] = React.useState([]);\r\n  const [imageUser, setImageUser] = useState();\r\n  const [values, setValues] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false,\r\n  });\r\n  const {register, handleSubmit,  formState: { errors }, watch } = useForm({});\r\n  const Password = useRef({});\r\n  Password.current=watch(\"password\", \"\");\r\n  const maxNumber = 69;\r\n  const onChange = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n    console.log(imageList);\r\n    setImages(imageList);\r\n\r\n    if (imageList[0] !== undefined) {\r\n      setImageUser(imageList[0].data_url);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n  \r\n  const onSubmit = (data) => {\r\n    const data_user = {\r\n      Email: data.Email,\r\n      username: data.username,\r\n      password: data.password,\r\n      TenNguoidung: data.name,\r\n      SDT: phone,\r\n      DiaChi: data.address,\r\n      GioiTinh: data.gender,\r\n      Anh: imageUser,\r\n    };\r\n    console.log(\"data user:\",data_user)\r\n    setOpen(true);\r\n\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/Register\", data_user)\r\n      .then(() => {\r\n        setTimeout(() => {\r\n          enqueueSnackbar(\"Chúc mừng bạn đăng ký thành công !\", {\r\n            variant: \"success\",\r\n            autoHideDuration: 3000,\r\n          });\r\n          setRedirect(true);\r\n        }, 4000);\r\n      })\r\n      .catch((e) => {\r\n        setOpen(false);\r\n        console.log(e.response);\r\n        setErrorEmail(e.response.data.Email);\r\n        setErrorUsername(e.response.data.username);\r\n        if (e.response.data.Email != undefined) {\r\n          enqueueSnackbar(e.response.data.Email, {\r\n            variant: \"error\",\r\n            autoHideDuration: 3000,\r\n            preventDuplicate: true,\r\n          });\r\n        }\r\n        if (e.response.data.username != undefined) {\r\n          enqueueSnackbar(e.response.data.username, {\r\n            variant: \"error\",\r\n            autoHideDuration: 3000,\r\n            preventDuplicate: true,\r\n          });\r\n        }\r\n\r\n        \r\n      });\r\n  };\r\n   \r\n  \r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleClickShowRePassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  if (redirect) {\r\n    return <Redirect to=\"/Login\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div id=\"layout-page-register\" className=\"container\">\r\n          <span className=\"header-contact header-page clearfix\">\r\n            <h5 className=\"title-register\">Tạo tài khoản</h5>\r\n          </span>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"userbox col-lg-12\" style={{ marginLeft: \"27%\" }}>\r\n            <div className=\"input-group username\">\r\n              <TextField\r\n                id=\"outlined-basic-1\"\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                label=\"Tên tài khoản\"\r\n                name=\"username\"\r\n                {...register(\"username\", { required: true,  maxLength: 20, pattern: /^\\S*$/\r\n                })}\r\n                />\r\n              {errors?.username?.type ===\"required\" && <p>Tài khoản không được bỏ trống</p>}\r\n              {errors?.username?.type === \"maxLength\" && (\r\n                <p>Tên tài khoản không được quá 20 ký tự</p>)}\r\n              {errors?.username?.type === \"pattern\" && (\r\n                <p>Tài khoản chỉ chứa ký tự </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"userbox col-lg-12\" style={{ marginLeft: \"27%\" }}>\r\n            <div className=\"input-group name\">\r\n              <TextField\r\n                id=\"outlined-basic-2\"\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                label=\"Họ tên\"\r\n                name=\"name\"\r\n                {...register(\"name\", { required: true, pattern: /^[a-zA-Z].*[\\s\\.]*$/g\r\n                })}\r\n              />\r\n              {errors?.name?.type ===\"required\" && <p>Tên không được bỏ trống</p>}\r\n              {errors?.name?.type === \"pattern\" && (\r\n                <p>Tên  chỉ chứa ký tự </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"userbox col-lg-12\" style={{ marginLeft: \"27%\" }}>\r\n            <div className=\"input-group email\">\r\n              <TextField\r\n                id=\"outlined-basic-3\"\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                label=\"Email\"\r\n                {...register(\"Email\", { required: true, pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n                })}\r\n              />  \r\n              {errors?.Email?.type === \"pattern\" && (\r\n                <p>Email sai định dạng </p>\r\n              )}\r\n                {errors?.Email?.type === \"required\" && (\r\n                <p>Email không được bỏ trống</p>\r\n              )}\r\n\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"userbox col-lg-12\" style={{ marginLeft: \"27%\" }}>\r\n            <div className=\"input-group password\">\r\n              <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Mật khẩu\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  name=\"password\"\r\n                  id=\"outlined-adornment-password\"\r\n                  type={values.showPassword ? \"text\" : \"password\"}\r\n                  // onChange={handleChange(\"password\")}\r\n                  {...register(\"password\", { required: true, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/})}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {values.showPassword ? (\r\n                          <VisibilityOff />\r\n                        ) : (\r\n                          <Visibility />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  label=\"Mật khẩu\"\r\n                />\r\n                {errors?.password?.type === \"required\" && (\r\n                  <p>Mật khẩu không được bỏ trống</p>)}\r\n                {errors?.password?.type === \"pattern\" && (\r\n                  <p>Mật khẩu có 8 ký tự và 1 ký tự hoa</p>)}\r\n              </FormControl>\r\n\r\n              <FormControl\r\n                sx={{ m: 1, width: \"25ch\" }}\r\n                variant=\"outlined\"\r\n                style={{ marginLeft: \"10px\" }}\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Nhập lại mật khẩu\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                 name=\"re_password\"\r\n                  id=\"outlined-adornment-re_password\"\r\n                  type={values.showPassword ? \"text\" : \"password\"}\r\n                  {...register(\"re_password\", { validate: value => value === Password.current || \"Mật khẩu không khớp\"\r\n                  })}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowRePassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {values.showPassword ? (\r\n                          <VisibilityOff />\r\n                        ) : (\r\n                          <Visibility />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  label=\"Nhập lại mật khẩu\"\r\n                />\r\n                  {errors.re_password && <p>{errors.re_password .message}</p>}\r\n              </FormControl>\r\n            </div>\r\n          </div>\r\n          <div className=\"userbox col-lg-12\" style={{ marginLeft: \"27%\" }}>\r\n            <PhoneInput country={\"vn\"} placeholder=\"+84\" value={phone} onChange={setPhone} />\r\n          </div>\r\n          <div className=\"userbox col-lg-12\" style={{ marginLeft: \"27%\" }}>\r\n            <div className=\"input-group sex\">\r\n              <FormControl sx={{ m: 1, width: \"25ch\" }}>\r\n                <InputLabel id=\"demo-simple-select-label\">Giới tính</InputLabel>\r\n                <Select\r\n                  variant=\"outlined\"\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select-1\"\r\n                  label=\"Giới tính\"\r\n                  name=\"gender\"\r\n                  {...register(\"gender\", { required: true})}\r\n                >\r\n                  <MenuItem value={1}>Nam</MenuItem>\r\n                  <MenuItem value={0}>Nữ</MenuItem>\r\n                  <MenuItem value={-1}>Khác</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {errors?.gender?.type === \"required\" && (\r\n                  <p>Hãy chọn giới tính</p>)}\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"userbox col-lg-12\" style={{ marginLeft: \"27%\" }}>\r\n            <div className=\"input-group city\">\r\n              <FormControl sx={{ m: 1, width: \"25ch\" }}>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Chọn tỉnh/thành phố\r\n                </InputLabel>\r\n                  <Select\r\n                    variant=\"outlined\"\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select-city\"\r\n                    label=\"Tỉnh/thành phố\"\r\n                  >\r\n                  {city?.map((city,index)=>(\r\n\r\n                    <MenuItem value={city.id} key={index}>{city.name}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n              </FormControl>\r\n\r\n              <FormControl\r\n                sx={{ m: 1, width: \"25ch\" }}\r\n                style={{ marginLeft: \"10px\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Chọn quận/huyện\r\n                </InputLabel>\r\n                <Select\r\n                  variant=\"outlined\"\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select-district\"\r\n                  label=\"Quận/huyện\"\r\n                >\r\n                  {district.map((district,index)=>(\r\n                   <MenuItem value={district.id} key={index}>{district.name}</MenuItem>\r\n\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n          </div> */}\r\n\r\n          <div className=\"userbox col-lg-12\" style={{ marginLeft: \"27%\" }}>\r\n            <div className=\"input-group ward\">\r\n              {/* <FormControl sx={{ m: 1, width: \"25ch\" }}>\r\n                <InputLabel id=\"demo-simple-select-label\">Xã/phường</InputLabel>\r\n                <Select\r\n                  variant=\"outlined\"\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select-ward\"\r\n                  label=\"Xã/phường\"\r\n                >\r\n                  <MenuItem value={1}>Nam</MenuItem>\r\n                  <MenuItem value={0}>Nữ</MenuItem>\r\n                </Select>\r\n              </FormControl> */}\r\n              <TextField\r\n                id=\"outlined-basic-5\"\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                label=\"Địa chủ cụ thể\"\r\n                {...register(\"address\", { required: true})}\r\n              />\r\n              {errors?.address?.type === \"required\" && (\r\n                  <p>Hãy nhập địa chỉ cụ thể</p>)}\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"upload\" className=\"userbox col-lg-12\" style={{ marginLeft: \"27%\" }}>\r\n            <ImageUploading\r\n              value={images}\r\n              onChange={onChange}\r\n              maxNumber={maxNumber}\r\n              dataURLKey=\"data_url\"\r\n            >\r\n              {({\r\n                imageList,\r\n                onImageUpload,\r\n                onImageUpdate,\r\n                onImageRemove,\r\n                isDragging,\r\n                dragProps,\r\n              }) => (\r\n                // write your building UI\r\n                <div className=\"upload__image-wrapper\">\r\n                  <Button\r\n                    style={isDragging ? { color: \"red\" } : null}\r\n                    onClick={onImageUpload}\r\n                    {...dragProps}\r\n                  >\r\n                    Chọn ảnh avatar\r\n                  </Button>\r\n                  &nbsp;\r\n                  {imageList.map((image, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"image-item\"\r\n                      style={{ position: \"relative\" }}\r\n                    >\r\n                      <img src={image.data_url} alt=\"avatar-user\" />\r\n                      <div className=\"image-item__btn-wrapper\">\r\n                        <i\r\n                          className=\"fas fa-edit\"\r\n                          onClick={() => onImageUpdate(index)}\r\n                          title=\"Chỉnh sửa\"\r\n                        ></i>\r\n                        <i\r\n                          className=\"fas fa-backspace btn-close\"\r\n                          onClick={() => onImageRemove(index)}\r\n                          title=\"Xóa\"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </ImageUploading>\r\n          </div>\r\n\r\n          <div className=\"userbox col-lg-12\" style={{ marginLeft: \"27%\" }}>\r\n            <div className=\"input-group register\">\r\n            <Button\r\n                  variant=\"primary\"\r\n                  className=\"btnRegister\"\r\n                  type=\"submit\"\r\n                  // onClick={onSubmit}\r\n                >\r\n                  Đăng ký\r\n                </Button>\r\n                <Backdrop\r\n                  open={open}\r\n                  className=\"backdrop-mui\"\r\n                  onClick={handleClose}\r\n                >\r\n                  <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\TypeProduct\\TypeProduct.js",["227","228","229","230"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../Component/Header/Header\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport \"./TypeProduct.css\";\r\nimport axios from \"axios\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Paginate from \"../../Component/Pagination/Paginate\";\r\n\r\nexport default function TypeProduct() {\r\n  let { id } = useParams();\r\n  const [name, setName] = useState(\"\");\r\n  const [product, setProduct] = useState([]);\r\n  const [sort, setSort] = useState(\"\");\r\n  const [page,setPage] = useState(1);\r\n  const [total, setTotal] = useState(\"\");\r\n  const handleChangePage= (page)=>{\r\n    \r\n    console.log(page);\r\n    setPage(page);\r\n  }\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getTypeProductById/${id}`)\r\n      .then((response) => {\r\n        setName(response.data.TenLoai);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getAccessoriesByTypeProductId/${id}?page=${page}`)\r\n      .then((res) => {\r\n        setProduct(res.data.data);\r\n        setTotal(res.data.last_page);\r\n      });\r\n  }, [page]);\r\n  const handleSort = () => {\r\n    if (sort == 1) {\r\n      const sortIncrease = [...product].sort((a, b) => {\r\n        return a.GiaKM - b.GiaKM;\r\n      });\r\n      setProduct(sortIncrease);\r\n    } else if (sort == 2) {\r\n      const sortDecrease = [...product].sort((a, b) => {\r\n        return b.GiaKM - a.GiaKM;\r\n      });\r\n      setProduct(sortDecrease);\r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n  };\r\n  const LinkImage = \"http://127.0.0.1:8000/images/\";\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <section className=\"light_section\">\r\n          <div id=\"collection\" className=\"container\">\r\n            <div className=\"col-sm-12\">\r\n              <h1 className=\"title-box-collection\" style={{ fontSize: \"36px\" }}>\r\n                {name}\r\n              </h1>\r\n              <div className=\"row\">\r\n                <div className=\"main-content\">\r\n                  <div id=\"breadcrumb\">\r\n                    <div className=\"main\">\r\n                      <div className=\"breadcrumbs container\">\r\n                        <span className=\"showHere\">Bạn đang ở</span>\r\n                        <Link to=\"/\" className=\"pathway\">\r\n                          Trang chủ\r\n                        </Link>\r\n                        <span>\r\n                          <i className=\"fa fa-caret-right\"></i>\r\n                          {name}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-12 wrap-sort-by\">\r\n                        <div className=\"browse-tags pull-right\">\r\n                          <Form>\r\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                              <Form.Label>Tùy chọn</Form.Label>\r\n                              <Form.Control\r\n                                as=\"select\"\r\n                                onChange={(e) => setSort(e.target.value)}\r\n                                onClick={handleSort}\r\n                              >\r\n                                <option value=\"\">Tùy chọn</option>\r\n                                <option value=\"1\">Giá từ thấp đến cao</option>\r\n                                <option value=\"2\">Giá từ cao đến thấp</option>\r\n                              </Form.Control>\r\n                            </Form.Group>\r\n                          </Form>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12 product-list\">\r\n                    <div className=\"row content-product-list\">\r\n                      {product.map((item, index) => (\r\n                        <div\r\n                          className=\"col-sm-4 col-xs-12 padding-none col-fix20\"\r\n                          key={index}\r\n                        >\r\n                          <div className=\"product-row\">\r\n                            <div className=\"product-row-img\">\r\n                              <Link to={`/ProductDetail/${item.id}`}>\r\n                                <img\r\n                                  src={LinkImage + item.AnhDaiDien}\r\n                                  alt={item.AnhDaiDien}\r\n                                  className=\"product-row-thumbnail\"\r\n                                />\r\n                              </Link>\r\n                              <div className=\"product-row-price-hover\">\r\n                                <Link to={`/ProductDetail/${item.id}`}>\r\n                                  <div className=\"product-row-note pull-left\">\r\n                                    Xem chi tiết\r\n                                  </div>\r\n                                </Link>\r\n                                <Link\r\n                                  to={`/ProductDetail/${item.id}`}\r\n                                  className=\"product-row-btnbuy pull-right\"\r\n                                >\r\n                                  đặt hàng\r\n                                </Link>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <h2 className=\"product-row-name\">\r\n                              {item.TenSanPham}\r\n                            </h2>\r\n                            <div className=\"product-row-info\">\r\n                              <div className=\"product-row-price pull-left\">\r\n                                <NumberFormat\r\n                                value={item.GiaCu}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <del {...props}>{value}</del>\r\n                                )}\r\n                              />\r\n                                <br />\r\n                                \r\n                                 <NumberFormat\r\n                                value={item.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <span className=\"product-row-sale\" {...props}>{value}</span>\r\n                                )}\r\n                              />\r\n                              </div>\r\n                              <div className=\"new-product-percent\">{item.SoLuong ==0 ? \"Hết hàng\" :\"Còn hàng\"}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                         \r\n                    </div>\r\n                      {product.length >=10  ? <Paginate handleChangePage={handleChangePage} total={total}/>:\"\"}              \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Login\\Login.js",["231","232","233","234","235","236","237","238","239","240","241","242","243"],"import Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nimport Header from \"../../Component/Header/Header\";\r\nimport \"./Login.css\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  FormControl,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\nfunction Login() {\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [process, setProcess] = useState(false);\r\n  const [google, setGoogle] = useState({});\r\n  const [values, setValues] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false,\r\n  });\r\n  let history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm({});\r\n\r\n  const onLoginSusscess = (res) => {\r\n    console.log(\"login success:\", res.profileObj);\r\n    const dataGoogle = {\r\n      Email: res.profileObj.email,\r\n      TenNguoidung: res.profileObj.name,\r\n      Anh: res.profileObj.imageUrl,\r\n    };\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/checkLoginGoogle\", dataGoogle)\r\n      .then((res) => {\r\n        if (res.data.User) {\r\n          localStorage.setItem(\"userLogin\", JSON.stringify(res.data.User));\r\n          setRedirect(true);\r\n          history.push(\"/\");\r\n        } else {\r\n          localStorage.setItem(\"userLogin\", JSON.stringify(res.data.Message));\r\n          setRedirect(true);\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n  };\r\n  const onLoginFail = (res) => {\r\n    console.log(\"login fails:\", res);\r\n  };\r\n  const onSubmit = (e) => {\r\n    const data = {\r\n      username: e.username,\r\n      password: e.password,\r\n    };\r\n    console.log(data)\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/Login\", data)\r\n      .then((response) => {\r\n        console.log(response.data.data.user.active);\r\n        if (response.data.data.user.active === 1) {\r\n          localStorage.setItem(\r\n            \"userLogin\",\r\n            JSON.stringify(response.data.data.user)\r\n          );\r\n          localStorage.setItem(\"accessToken\", response.data.data.access_token);\r\n          setProcess(true);\r\n          setTimeout(() => {\r\n            setRedirect(true);\r\n            window.location.reload();\r\n          }, 3000);\r\n        } else {\r\n          const message =\r\n            \"Tài khoản chưa được xác thực vui lòng kiểm tra lại mail \";\r\n          enqueueSnackbar(message, {\r\n            variant: \"warning\",\r\n            autoHideDuration: 3000,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        if (e.response && e.response.data) {\r\n          console.log(e.response.data.message); // some reason error message\r\n          // setError(e.response.data.message);\r\n          enqueueSnackbar(e.response.data.message, {\r\n            variant: \"error\",\r\n            autoHideDuration: 3000,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  // if(active)\r\n  // {\r\n  //   return <Redirect to=\"/account/activeUser\"/>\r\n  // }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div id=\"layout-page-login\" className=\"container\">\r\n          <div id=\"customer-login\">\r\n            <span className=\"header-contact header-page clearfix\">\r\n              <h5 id=\"title-login\">Chào mừng bạn đến TVSTORE</h5>\r\n            </span>\r\n            <div id=\"login\" className=\"userbox\">\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"input-group username_login\">\r\n                  <TextField\r\n                    id=\"outlined-basic-1\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    label=\"Tên tài khoản\"\r\n                    name=\"username\"\r\n                    {...register(\"username\", {\r\n                      required: true,\r\n                    })}\r\n                  />\r\n                  {errors?.username?.type === \"required\" && (\r\n                    <p>Tài khoản không được bỏ trống</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"input-group password_login\">\r\n                  <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                      Mật khẩu\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                      name=\"password\"\r\n                      id=\"outlined-adornment-password\"\r\n                      type={values.showPassword ? \"text\" : \"password\"}\r\n                      {...register(\"password\", { required: true })}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {values.showPassword ? (\r\n                              <VisibilityOff />\r\n                            ) : (\r\n                              <Visibility />\r\n                            )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                      label=\"Mật khẩu\"\r\n                    />\r\n                    {errors?.password?.type === \"required\" && (\r\n                      <p>Mật khẩu không được bỏ trống</p>\r\n                    )}\r\n                  </FormControl>\r\n                </div>\r\n\r\n                <GoogleLogin\r\n                  className=\"buttonGoogle\"\r\n                  clientId=\"1044195774340-85bluj7hjcahgqia4miacjnh6ivkv6gf.apps.googleusercontent.com\"\r\n                  buttonText=\"Đăng nhập với google\"\r\n                  onSuccess={onLoginSusscess}\r\n                  onFailure={onLoginFail}\r\n                  cookiePolicy={\"single_host_origin\"}\r\n                />\r\n                <div className=\"action_bottom\">\r\n                  <Button variant=\"primary\" className=\"btnLogin\" type=\"submit\">\r\n                    Đăng nhập\r\n                  </Button>\r\n                </div>\r\n                {process ? <LinearProgress /> : \"\"}\r\n                <div className=\"req_pass\">\r\n                  <Link to=\"/acount/resetPassword\">Quên mật khẩu? </Link>\r\n                  hoặc\r\n                  <Link className=\"linkRegister\" to=\"/Register\">\r\n                    Đăng ký\r\n                  </Link>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Cart\\Cart.js",["244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Header from \"../../Component/Header/Header\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./Cart.css\";\r\nimport axios from \"axios\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport Paypal from \"../../Component/Paypal/Paypal\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nfunction Cart(props) {\r\n  const userLogin = JSON.parse(localStorage.getItem(\"userLogin\") || \"[]\");\r\n\r\n  const { cartItems, onRemove, onAdd, onRemoveAll } = props;\r\n  const itemsPrice = cartItems.reduce((a, c) => a + c.qty * c.GiaKM, 0);\r\n  const totalPrice = itemsPrice;\r\n  const LinkImage = \"http://127.0.0.1:8000/images/\";\r\n  const [city, setCity] = useState([]);\r\n  const [optionPayment, setOptionPayment] = useState();\r\n  const [optionShipping, setOptionShipping] = useState(1);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [errorQty, setError] = useState(\"\");\r\n  const [errorPayment, setErrorPayment] = useState([]);\r\n  const [errorShipping, setErrorShipping] = useState([]);\r\n  const [errorLogin, setErrorLogin] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [payURL, setPayURL] = useState();\r\n  const [paypal, setPayPal] = useState(false);\r\n  const [openBackDrop, setOpenBackDrop] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [name, setName] = useState(userLogin.TenNguoidung);\r\n  const [address, setAddress] = useState(userLogin.DiaChi);\r\n  const [phone, setPhone] = useState(userLogin.SDT);\r\n  const {register, handleSubmit,  formState: { errors }, watch } = useForm({});\r\n  const newArr = cartItems.map((item) => {\r\n    return { san_phams_id: item.id, DonGia: item.GiaKM, SoLuong: item.qty };\r\n  });\r\n  const handleCloseBackdrop = () => {\r\n    setOpenBackDrop(false);\r\n  };\r\n  useEffect(() => {\r\n    axios.get(\"http://127.0.0.1:8000/api/getCity\").then((response) => {\r\n      console.log(response.data);\r\n      setCity(response.data.LtsItem);\r\n    });\r\n  }, []);\r\n  const handleOrder = async (e) => {\r\n    e.preventDefault();\r\n    const dataUser = {\r\n      name: name,\r\n      DiaChi: address,\r\n      SDT: phone,\r\n    };\r\n    const data = {\r\n      nguoi_dungs_id: userLogin.id,\r\n      hinh_thuc_thanh_toans_id: optionPayment,\r\n      hinh_thuc_giao_hangs_id: optionShipping,\r\n      trang_thai_don_hangs_id: 1,\r\n      line_items: newArr,\r\n    };\r\n\r\n    if (!optionPayment || !optionShipping || userLogin.id == null) {\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/api/order\", data)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setOpen(true);\r\n          setTimeout(() => {\r\n            setRedirect(true);\r\n          }, 2000);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data.error);\r\n          setError(err.response.data.error);\r\n          setErrorPayment(err.response.data.hinh_thuc_thanh_toans_id);\r\n          setErrorShipping(err.response.data.hinh_thuc_giao_hangs_id);\r\n          setErrorLogin(err.response.data.nguoi_dungs_id);\r\n\r\n          if (err.response.data.hinh_thuc_giao_hangs_id != undefined) {\r\n            enqueueSnackbar(err.response.data.hinh_thuc_giao_hangs_id, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n\r\n          if (err.response.data.nguoi_dungs_id != undefined) {\r\n            enqueueSnackbar(err.response.data.nguoi_dungs_id, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n\r\n          if (err.response.data.hinh_thuc_thanh_toans_id != undefined) {\r\n            enqueueSnackbar(err.response.data.hinh_thuc_thanh_toans_id, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n        });\r\n    } else if (optionPayment == 1) {\r\n      axios\r\n        .post(`http://127.0.0.1:8000/api/updateUser/${userLogin.id}`, dataUser)\r\n        .then(() => {\r\n          setOpenBackDrop(true);\r\n          axios\r\n            .post(\"http://127.0.0.1:8000/api/orderAPI\", data)\r\n            .then((response) => {\r\n              console.log(response.data);\r\n              enqueueSnackbar(\"Chúc mừng bạn đã đặt hàng thành công\", {\r\n                variant: \"success\",\r\n                autoHideDuration: 3000,\r\n                preventDuplicate: true,\r\n              });\r\n                setRedirect(true);\r\n                localStorage.setItem(\r\n                  \"Order\",\r\n                  JSON.stringify(response.data.order)\r\n                );\r\n                localStorage.removeItem(\"cartItems\");\r\n                window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n              setOpenBackDrop(false);\r\n\r\n              console.log(err.response.data.error);\r\n              setError(err.response.data.error);\r\n              setErrorPayment(err.response.data.hinh_thuc_thanh_toans_id);\r\n              setErrorShipping(err.response.data.hinh_thuc_giao_hangs_id);\r\n              setErrorLogin(err.response.data.nguoi_dungs_id);\r\n              if (err.response.data.error != undefined) {\r\n                enqueueSnackbar(err.response.data.error, {\r\n                  variant: \"error\",\r\n                  autoHideDuration: 3000,\r\n                  preventDuplicate: true,\r\n                });\r\n              }\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.data.DiaChi != undefined) {\r\n            enqueueSnackbar(err.response.data.DiaChi, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n          if (err.response.data.SDT != undefined) {\r\n            enqueueSnackbar(err.response.data.SDT, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n        });\r\n       \r\n    } else if (optionPayment == 2) {\r\n      var dataMoMo = {\r\n        accessKey: accessKey,\r\n        partnerCode: partnerCode,\r\n        requestType: requestType,\r\n        notifyUrl: notifyUrl,\r\n        returnUrl: returnUrl,\r\n        orderId: orderId,\r\n        amount: amount,\r\n        orderInfo: orderInfo,\r\n        requestId: requestId,\r\n        extraData: extraData,\r\n        signature: signature,\r\n      };\r\n      axios\r\n        .post(`http://127.0.0.1:8000/api/updateUser/${userLogin.id}`, dataUser)\r\n        .then(() => {\r\n          axios.post(apiEndPoint, dataMoMo).then((response) => {\r\n            if (response.data.errorCode == 0) {\r\n              setPayURL(response.data.payUrl);\r\n              axios\r\n                .post(\"http://127.0.0.1:8000/api/order\", data)\r\n                .then((response) => {\r\n                  console.log(response.data.order);\r\n                  localStorage.setItem(\r\n                    \"Order\",\r\n                    JSON.stringify(response.data.order)\r\n                  );\r\n                  localStorage.removeItem(\"cartItems\");\r\n\r\n                  setRedirect(true);\r\n                })\r\n                .catch((err) => {\r\n                  setRedirect(false);\r\n                  if (err.response.data.error !== undefined) {\r\n                    enqueueSnackbar(err.response.data.error, {\r\n                      variant: \"error\",\r\n                      autoHideDuration: 3000,\r\n                      preventDuplicate: true,\r\n                    });\r\n                  }\r\n                });\r\n            } else {\r\n              setRedirect(false);\r\n              enqueueSnackbar(response.data.localMessage, {\r\n                variant: \"error\",\r\n                autoHideDuration: 3000,\r\n                preventDuplicate: true,\r\n              });\r\n            }\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.data.DiaChi != undefined) {\r\n            enqueueSnackbar(err.response.data.DiaChi, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n          if (err.response.data.SDT != undefined) {\r\n            enqueueSnackbar(err.response.data.SDT, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n        });\r\n    } else if (optionPayment == 3) {\r\n      axios\r\n        .post(`http://127.0.0.1:8000/api/updateUser/${userLogin.id}`, dataUser)\r\n        .then(() => {\r\n          axios\r\n            .post(\"http://127.0.0.1:8000/api/order\", data)\r\n            .then((response) => {\r\n              console.log(response.data.order);\r\n              localStorage.setItem(\r\n                \"Order\",\r\n                JSON.stringify(response.data.order)\r\n              );\r\n              localStorage.removeItem(\"cartItems\");\r\n              setPayPal(true);\r\n            })\r\n            .catch((err) => {\r\n              setPayPal(false);\r\n              if (err.response.data.error != undefined) {\r\n                enqueueSnackbar(err.response.data.error, {\r\n                  variant: \"error\",\r\n                  autoHideDuration: 3000,\r\n                  preventDuplicate: true,\r\n                });\r\n              }\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.data.DiaChi != undefined) {\r\n            enqueueSnackbar(err.response.data.DiaChi, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n          if (err.response.data.SDT != undefined) {\r\n            enqueueSnackbar(err.response.data.SDT, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n        });\r\n    } else if (optionPayment == 4) {\r\n      axios\r\n        .post(`http://127.0.0.1:8000/api/updateUser/${userLogin.id}`, dataUser)\r\n        .then(() => {\r\n          axios\r\n            .post(\"http://127.0.0.1:8000/api/paymentVNPAY\", data)\r\n            .then((response) => {\r\n              setPayURL(response.data.pay_url.data);\r\n              localStorage.setItem(\r\n                \"Order\",\r\n                JSON.stringify(response.data.Order)\r\n              );\r\n              localStorage.removeItem(\"cartItems\");\r\n              setRedirect(true);\r\n            })\r\n            .catch((err) => {\r\n              if (err.response.data.error != undefined) {\r\n                enqueueSnackbar(err.response.data.error, {\r\n                  variant: \"error\",\r\n                  autoHideDuration: 3000,\r\n                  preventDuplicate: true,\r\n                });\r\n              }\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.data.DiaChi != undefined) {\r\n            enqueueSnackbar(err.response.data.DiaChi, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n          if (err.response.data.SDT != undefined) {\r\n            enqueueSnackbar(err.response.data.SDT, {\r\n              variant: \"error\",\r\n              autoHideDuration: 3000,\r\n              preventDuplicate: true,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  //Thanh toán tiền mặc\r\n  if (redirect && optionPayment == 2) {\r\n    // return window.location.assign(payURL);\r\n    return window.location.replace(payURL);\r\n    //  return window.location.href = payURL;\r\n  } else if (redirect && optionPayment == 1) {\r\n    return <Redirect to=\"/resultOrder/?message=3\" />;\r\n  } else if (redirect && optionPayment == 4) {\r\n    return window.location.replace(payURL);\r\n  }\r\n\r\n  // Thanh toán MOMO\r\n\r\n  const randomId = () => {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  };\r\n\r\n  const GenerateID = () => {\r\n    return (\r\n      randomId() +\r\n      randomId() +\r\n      \"-\" +\r\n      randomId() +\r\n      \"-\" +\r\n      randomId() +\r\n      \"-\" +\r\n      randomId() +\r\n      \"-\" +\r\n      randomId()\r\n    );\r\n  };\r\n  const Moneyconversion = (totalPrice) => {\r\n    var dola = totalPrice / 23000;\r\n    return dola.toFixed(2).toString();\r\n  };\r\n  const apiEndPoint = \"/transactionProcessor\";\r\n  var partnerCode = \"MOMO6KRQ20210610\";\r\n  var accessKey = \"MYc8b7Wo8858OGUg\";\r\n  var secretKey = \"zG3fTEcy3voCjcyLAWr81b4mBcmYG8DD\";\r\n  var requestType = \"captureMoMoWallet\";\r\n  var orderInfo = \"Payment MOMO\";\r\n  var amount = totalPrice.toString();\r\n  var orderId = \"HD\" + GenerateID();\r\n  var returnUrl = \"http://localhost:3000/resultOrder/\";\r\n  var notifyUrl = \"http://localhost:3000/resultOrder/\";\r\n  var requestId = orderId;\r\n  var extraData = \"email=tienxmin0123@gmail.com\";\r\n  var raw_signature =\r\n    \"partnerCode=\" +\r\n    partnerCode +\r\n    \"&accessKey=\" +\r\n    accessKey +\r\n    \"&requestId=\" +\r\n    requestId +\r\n    \"&amount=\" +\r\n    amount +\r\n    \"&orderId=\" +\r\n    orderId +\r\n    \"&orderInfo=\" +\r\n    orderInfo +\r\n    \"&returnUrl=\" +\r\n    returnUrl +\r\n    \"&notifyUrl=\" +\r\n    notifyUrl +\r\n    \"&extraData=\" +\r\n    extraData;\r\n\r\n  var signature = CryptoJS.HmacSHA256(raw_signature, secretKey).toString(\r\n    CryptoJS.enc.Hex\r\n  );\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div id=\"mainframe\">\r\n          <div className=\"container\">\r\n            {cartItems.length === 0 ? (\r\n              <div className=\"site-content-inner\">\r\n                <div className=\"woocommerce\">\r\n                  <div className=\"woocommerce-notices-wrapper\">\r\n                    <div className=\"gearvn-cart-empty\">\r\n                      <img\r\n                        className=\"lazy loaded\"\r\n                        src=\"https://beta.gearvn.com/wp-content/themes/gearvn-electro-child-v1/assets/images/empty-cart.png\"\r\n                        alt=\"cart_empty\"\r\n                      />\r\n                      <p className=\"text-center\">\r\n                        Chưa có sản phẩm nào trong giỏ hàng của bạn.\r\n                      </p>\r\n                    </div>\r\n                    <p className=\"return-to-shop\">\r\n                      <Link className=\"button wc-backward\" to=\"/\">\r\n                        Quay lại trang chủ\r\n                      </Link>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div id=\"wrap-cart\" className=\"container\">\r\n                <div className=\"row\">\r\n                  <div id=\"layout-page-card\" className=\"container\">\r\n                    <span className=\"header-page clearfix\">\r\n                      <h1 className=\"title-card\"> Giỏ hàng</h1>\r\n                    </span>\r\n                    <form onSubmit={handleSubmit(handleOrder)}>\r\n                    <div id=\"cartformpage\">\r\n                      <table width=\"100%\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th className=\"image\">Sản phẩm</th>\r\n                            <th className=\"item\">Tên sản phẩm</th>\r\n                            <th className=\"qty\">Số lượng</th>\r\n                            <th className=\"price\">Giá tiền</th>\r\n                            <th className=\"remove\">Xóa</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {cartItems.map((item) => (\r\n                            <tr>\r\n                              <th className=\"image\">\r\n                                <div className=\"product_image\">\r\n                                  <Link to=\"#\">\r\n                                    <img\r\n                                      src={LinkImage + item.AnhDaiDien}\r\n                                      style={{ width: \"100px\" }}\r\n                                      alt={item.AnhDaiDien}\r\n                                    />\r\n                                  </Link>\r\n                                </div>\r\n                              </th>\r\n                              <th className=\"item\">\r\n                                <Link to={`/ProductDetail/${item.id}`}>\r\n                                  <strong>{item.TenSanPham}</strong>\r\n                                </Link>\r\n                              </th>\r\n                              <th\r\n                                className=\"qty\"\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  marginTop: \"30px\",\r\n                                  justifyContent: \"space-evenly\",\r\n                                }}\r\n                              >\r\n                                <button\r\n                                  onClick={() => onRemove(item)}\r\n                                  className=\"remove\"\r\n                                >\r\n                                  -\r\n                                </button>\r\n                                <span className=\"cart-qty\">{item.qty}</span>\r\n\r\n                                <button\r\n                                  onClick={() => onAdd(item)}\r\n                                  className=\"add\"\r\n                                >\r\n                                  +\r\n                                </button>\r\n                              </th>\r\n                              <th className=\"price\">\r\n                                <NumberFormat\r\n                                  value={item.GiaKM}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  suffix={\" VNĐ\"}\r\n                                  renderText={(value, props) => (\r\n                                    <div {...props}>{value} </div>\r\n                                  )}\r\n                                />\r\n                              </th>\r\n                              <th className=\"remove\">\r\n                                <i\r\n                                  className=\"fas fa-trash-alt\"\r\n                                  onClick={() => onRemoveAll(item)}\r\n                                ></i>\r\n                              </th>\r\n                            </tr>\r\n                          ))}\r\n                          <tr className=\"summary\">\r\n                            <td\r\n                              colSpan=\"4\"\r\n                              style={{ fontWeight: \"bold\", fontSize: \"20px\" }}\r\n                            >\r\n                              Tổng tiền\r\n                            </td>\r\n                            <td className=\"price\">\r\n                              <span className=\"total\">\r\n                                <NumberFormat\r\n                                  value={totalPrice}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  suffix={\" VNĐ\"}\r\n                                  renderText={(value, props) => (\r\n                                    <strong {...props}>{value} </strong>\r\n                                  )}\r\n                                />\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                      <div className=\"cart-container\">\r\n                        <h1 style={{ margin: 0 }}>Đặt hàng</h1>\r\n                        <div className=\"cart_step2\">\r\n                          <div className=\"title_box_cart\">\r\n                            1. Thông tin khách hàng\r\n                          </div>\r\n                          <div className=\"input-group name d-flex\" >\r\n                            <TextField\r\n                              id=\"outlined-basic-1\"\r\n                              variant=\"outlined\"\r\n                              type=\"text\"\r\n                              placeholder=\"Nhập họ tên\"\r\n                              name=\"name\"\r\n                              value={name}\r\n                              onChange={(e)=>setName(e.target.value)}\r\n                            />\r\n                        \r\n                             <TextField\r\n                             style={{ marginLeft: \"10px\" }}\r\n                                id=\"outlined-basic-2\"\r\n                                variant=\"outlined\"\r\n                                type=\"text\"\r\n                                value={userLogin.Email}\r\n                                disabled\r\n                              \r\n                              />  \r\n                            \r\n                          </div>\r\n                          <div className=\"input-group name d-flex\" >\r\n                            <TextField\r\n                              id=\"outlined-basic-3\"\r\n                              variant=\"outlined\"\r\n                              type=\"text\"\r\n                              placeholder=\"Nhập số điện thọai\"\r\n                              name=\"phone\"\r\n                              value={phone}\r\n                              onChange={(e)=>setPhone(e.target.value)}\r\n\r\n                            />\r\n                             <TextField\r\n                             style={{ marginLeft: \"10px\" }}\r\n                                id=\"outlined-basic-4\"\r\n                                variant=\"outlined\"\r\n                                type=\"text\"\r\n                                placeholder=\"Nhập địa chỉ\"\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                              />  \r\n                            \r\n                          </div>\r\n                          <div className=\"box-cart-user-info\">\r\n                            <div className=\"title_box_cart\">\r\n                              2. Hình thức thanh toán\r\n                            </div>\r\n                            <div\r\n                              className=\"left\"\r\n                              style={{ marginRight: \"15px\" }}\r\n                            >\r\n                              <input\r\n                                name=\"Cash\"\r\n                                type=\"radio\"\r\n                                name=\"payment\"\r\n                                value=\"1\"\r\n                                onChange={(e) =>\r\n                                  setOptionPayment(e.target.value)\r\n                                }\r\n                              />\r\n                              <label\r\n                                style={{\r\n                                  display: \"inline-block\",\r\n                                  lineHeight: \"20px\",\r\n                                  marginLeft: \"15px\",\r\n                                }}\r\n                              >\r\n                                Tiền mặt\r\n                              </label>\r\n                            </div>\r\n\r\n                            <div id=\"momo\">\r\n                              <input\r\n                                name=\"payment_momo\"\r\n                                type=\"radio\"\r\n                                name=\"payment\"\r\n                                value=\"2\"\r\n                                onChange={(e) =>\r\n                                  setOptionPayment(e.target.value)\r\n                                }\r\n                              />\r\n                              <label\r\n                                style={{\r\n                                  display: \"inline-block\",\r\n                                  lineHeight: \"20px\",\r\n                                  marginLeft: \"15px\",\r\n                                }}\r\n                              >\r\n                                <i className=\"cps-zalopay\"></i>\r\n                                <span> Cổng thanh toán MOMO</span>\r\n                              </label>\r\n                            </div>\r\n                            <div id=\"paypal\">\r\n                              <input\r\n                                name=\"payment_paypal\"\r\n                                type=\"radio\"\r\n                                name=\"payment\"\r\n                                value=\"3\"\r\n                                onChange={(e) =>\r\n                                  setOptionPayment(e.target.value)\r\n                                }\r\n                              />\r\n                              <label\r\n                                style={{\r\n                                  display: \"inline-block\",\r\n                                  lineHeight: \"20px\",\r\n                                  marginLeft: \"15px\",\r\n                                }}\r\n                              >\r\n                                <i className=\"fab fa-cc-paypal\"></i>\r\n                                <span> Paypal</span>\r\n                              </label>\r\n                            </div>\r\n                            <div id=\"vnpay\">\r\n                              <input\r\n                                name=\"payment_vnpay\"\r\n                                type=\"radio\"\r\n                                name=\"payment\"\r\n                                value=\"4\"\r\n                                onChange={(e) =>\r\n                                  setOptionPayment(e.target.value)\r\n                                }\r\n                              />\r\n                              <label\r\n                                style={{\r\n                                  display: \"inline-block\",\r\n                                  lineHeight: \"20px\",\r\n                                  marginLeft: \"15px\",\r\n                                }}\r\n                              >\r\n                                <i className=\"cs-vnpay\"></i>\r\n                                <span> Cổng thanh toán VNPAY</span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"box-cart-user-info\">\r\n                            <div className=\"title_box_cart\">\r\n                              3. Hình thức giao hàng\r\n                            </div>\r\n                            <div\r\n                              className=\"left\"\r\n                              style={{ marginRight: \"15px\" }}\r\n                            >\r\n                              <input\r\n                                name=\"Shipping\"\r\n                                type=\"radio\"\r\n                                value=\"1\"\r\n                                onChange={(e) =>\r\n                                  setOptionShipping(e.target.value)\r\n                                }\r\n                                checked\r\n                              />\r\n                              <label\r\n                                style={{\r\n                                  display: \"inline-block\",\r\n                                  lineHeight: \"20px\",\r\n                                  marginLeft: \"15px\",\r\n                                }}\r\n                              >\r\n                                COD\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          {paypal ? (\r\n                            <Paypal\r\n                              Moneyconversion={Moneyconversion(totalPrice)}\r\n                            />\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-xl-12 col-md-12 cart-buttons inner-right inner-left\">\r\n                        <div className=\"buttons\">\r\n                          <Button\r\n                            id=\"checkout\"\r\n                            name=\"checkout\"\r\n                            type=\"submit\"\r\n                            onClick={handleOrder}\r\n                          >\r\n                            Thanh toán\r\n                          </Button>\r\n                        </div>\r\n                        <Backdrop\r\n                          open={openBackDrop}\r\n                          className=\"backdrop-mui\"\r\n                          onClick={handleCloseBackdrop}\r\n                        >\r\n                          <CircularProgress color=\"inherit\" />\r\n                        </Backdrop>\r\n                      </div>\r\n                    </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Search\\Search.js",["280"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../Component/Header/Header\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\nexport default function Search() {\r\n  const [result,setResult]=useState([]);\r\n  function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n  var query = useQuery();\r\n  var name = query.get(\"kq\");\r\n  useEffect(() => {\r\n      axios.get(`http://127.0.0.1:8000/api/searchByKeyWord/${name}`)\r\n      .then((response) =>{\r\n        setResult(response.data);\r\n      })\r\n  },[])\r\n  const LinkImage = \"http://127.0.0.1:8000/images/\";\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <section className=\"light_section\">\r\n          <div id=\"collection\" className=\"container\">\r\n            <div className=\"col-sm-12\">\r\n              <h1 className=\"title-box-collection\" style={{ fontSize: \"36px\" }}>\r\n                Tìm kiếm\r\n              </h1>\r\n              <div className=\"row\">\r\n                <div className=\"main-content\">\r\n                  <div id=\"breadcrumb\">\r\n                    <div className=\"main\">\r\n                      <div className=\"breadcrumbs container\">\r\n                        <span className=\"showHere\">Kết quả tìm kiếm: {name}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-12 product-list\">\r\n                    <div className=\"row content-product-list\">\r\n\r\n                      {result.map((v,index)=>(\r\n                        <div className=\"col-sm-4 col-xs-12 padding-none col-fix20\" key={index}>\r\n                        <div className=\"product-row\">\r\n                          <div className=\"product-row-img\">\r\n                            <Link to={`/ProductDetail/${v.id}`}>\r\n                              <img\r\n                                src={LinkImage + v.AnhDaiDien}\r\n                                alt={v.AnhDaiDien}\r\n                                className=\"product-row-thumbnail\"\r\n                              />\r\n                            </Link>\r\n                            <div className=\"product-row-price-hover\">\r\n                              <Link to={`/ProductDetail/${v.id}`}>\r\n                                <div className=\"product-row-note pull-left\">\r\n                                  Xem chi tiết\r\n                                </div>\r\n                              </Link>\r\n                              <Link\r\n                                to={`/ProductDetail/${v.id}`}\r\n                                className=\"product-row-btnbuy pull-right\"\r\n                              > \r\n                                đặt hàng\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <h2 className=\"product-row-name\">\r\n                            {v.TenSanPham}\r\n                          </h2>\r\n                          <div className=\"product-row-info\">\r\n                            <div className=\"product-row-price pull-left\">\r\n                              {/* <del>17,290,000₫</del> */}\r\n                              <NumberFormat\r\n                                value={v.GiaCu}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <del {...props}>{value}</del>\r\n                                )}\r\n                              />\r\n                              <br />\r\n                             \r\n                              <NumberFormat\r\n                                value={v.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <span className=\"product-row-sale\" {...props}>{value}</span>\r\n                                )}\r\n                              />\r\n                            </div>\r\n                            <div className=\"new-product-percent\">-10%</div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\ProductPortfolio\\Product_Portfolio.js",[],"C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Promotion\\Promotion.js",[],"C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\PaymentGuide\\PaymentGuide.js",["281"],"import React from \"react\";\r\nimport \"./PaymentGuide.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../../assets/logo.png\";\r\nimport PaymentMOMO from \"../../assets/paymentMoMo.PNG\";\r\nfunction PaymentGuide() {\r\n  return (\r\n    <>\r\n      <div className=\"ladi-wraper\">\r\n        <div id=\"SECTION1\" className=\"ladi-section\">\r\n          <div className=\"ladi-section-background\"></div>\r\n          <div className=\"ladi-container\">\r\n            <Link to=\"/\" id=\"IMAGE120\" className=\"ladi-element\">\r\n              <img src={Logo} alt=\"logo\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div id=\"SECTION2\" className=\"ladi-section\">\r\n          <div className=\"ladi-section-background\"></div>\r\n          <div className=\"ladi-container\">\r\n            <div id=\"IMAGE128\" className=\"ladi-element\">\r\n              <div className=\"ladi-image\">\r\n                <div className=\"ladi-image-background\"></div>\r\n              </div>\r\n            </div>\r\n            <div id=\"HEADLINE126\" className=\"ladi-element\">\r\n              <h3 className=\"ladi-headline\">HƯỚNG DẪN THANH TOÁN</h3>\r\n            </div>\r\n            <div id=\"HEADLINE127\" className=\"ladi-element\">\r\n              <h3 className=\"ladi-headline\">KHI MUA HÀNG TẠI TVSTORE</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"SECTION130\" className=\"ladi-section\">\r\n          <div className=\"ladi-section-background\"></div>\r\n          <div className=\"ladi-container\">\r\n            <div className=\"ladi-element\" id=\"FRAME350\">\r\n              <div className=\"ladi-frame ladi-transition\">\r\n                <div className=\"ladi-frame-background\">\r\n                  <div id=\"HEADLINE136\" className=\"ladi-element\">\r\n                    <h3 className=\"ladi-headline\">\r\n                      Thanh Toán\r\n                      <br />\r\n                      khi nhận hàng\r\n                    </h3>\r\n                  </div>\r\n                  <div id=\"HEADLINE137\" className=\"ladi-element\">\r\n                    <h3 className=\"ladi-headline\">\r\n                      Quý khách hàng có thể đặt hàng trên website rồi sẽ gửi\r\n                      hàng cho các bạn\r\n                    </h3>\r\n                  </div>\r\n                  <div id=\"IMAGE434\" className=\"ladi-element\">\r\n                    <div className=\"ladi-image\">\r\n                      <div className=\"ladi-image-background\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ladi-element\" id=\"FRAME351\">\r\n              <div className=\"ladi-frame ladi-transition\">\r\n                <div className=\"ladi-frame-background\">\r\n                  <div id=\"HEADLINE136\" className=\"ladi-element\">\r\n                    <h3 className=\"ladi-headline\">\r\n                      Thanh Toán\r\n                      <br />\r\n                      qua MoMo\r\n                    </h3>\r\n                  </div>\r\n                  <div id=\"HEADLINE356\" className=\"ladi-element\">\r\n                    <h3 className=\"ladi-headline\">\r\n                      Hãy mở Ví MoMo của bạn quét mã QR để hoàn tất việc đặt\r\n                      hàng.\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ladi-element\" id=\"FRAME354\">\r\n              <div className=\"ladi-frame ladi-transition\">\r\n                <div className=\"ladi-frame-background\">\r\n                  <div id=\"HEADLINE355\" className=\"ladi-element\">\r\n                    <h3 className=\"ladi-headline\">\r\n                      Thanh Toán\r\n                      <br />\r\n                      Paypal\r\n                    </h3>\r\n                  </div>\r\n                  <div id=\"HEADLINE357\" className=\"ladi-element\">\r\n                    <h3 className=\"ladi-headline\">\r\n                      Quý khách hàng hãy đăng nhập ví Paypal để thanh toán.\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ladi-element\" id=\"FRAME523\">\r\n              <div className=\"ladi-frame ladi-transition\">\r\n                <div className=\"ladi-frame-background\">\r\n                  <div id=\"HEADLINE524\" className=\"ladi-element\">\r\n                    <h3 className=\"ladi-headline\">\r\n                      Thanh Toán\r\n                      <br />\r\n                      VNpay\r\n                    </h3>\r\n                  </div>\r\n                  <div id=\"HEADLINE525\" className=\"ladi-element\">\r\n                    <h3 className=\"ladi-headline\">\r\n                      Quý khách hàng hãy đăng nhập VNpay để thanh toán.\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"SECTION456\" className=\"ladi-section\">\r\n          <div className=\"ladi-section-background\"></div>\r\n          <div className=\"ladi-container\">\r\n            <div id=\"BOX459\" className=\"ladi-element\">\r\n              <div className=\"ladi-box\"></div>\r\n            </div>\r\n            <div id=\"HEADLINE457\" className=\"ladi-element\">\r\n                <h3 className=\"ladi-headline\">\r\n                Sau khi chọn hình thức thanh toán qua Ví MoMo, hệ thống chuyển sang giao diện thanh toán của MoMo.\r\n                </h3>\r\n            </div>\r\n            <div id=\"IMAGE461\" className=\"ladi-element\">\r\n                <div className=\"ladi-image\">\r\n                    <div className=\"ladi-image-background\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"IMAGE487\" className=\"ladi-element\">\r\n                <div className=\"ladi-image\">\r\n                    <div className=\"ladi-image-background\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"HEADLINE488\" className=\"ladi-element\">\r\n                <h3 className=\"ladi-headline\">\r\n                Hãy mở Ví MoMo của bạn quét mã QR trên để hoàn tất việc đặt hàng.\r\n                <br/>\r\n                Vậy là bạn đã hoàn thành một bước mua hàng online tại \r\n                <span style={{color: 'red'}}> TVSTORE </span>\r\n                một cách dể dàng và tiện lợi chưa đến 2 phút.\r\n                </h3>\r\n            </div>\r\n            <div id=\"HEADLINE460\" className=\"ladi-element\">\r\n                <h3 className=\"ladi-headline\">\r\n                THANH TOÁN \r\n                <span style={{color:\"red\"}}> VÍ ĐIỆN TỬ MOMO</span>\r\n                </h3>\r\n            </div> \r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"SECTION489\" className=\"ladi-section\">\r\n          <div className=\"ladi-section-background\"></div>\r\n          <div className=\"ladi-container\">\r\n            <div id=\"BOX490\" className=\"ladi-element\">\r\n              <div className=\"ladi-box\"></div>\r\n            </div>\r\n            <div id=\"HEADLINE492\" className=\"ladi-element\">\r\n                <h3 className=\"ladi-headline\">\r\n                Sau khi chọn hình thức thanh toán qua ứng dụng Paypal, hệ thống chuyển sang giao diện thanh toán của VNPay.\r\n                </h3>\r\n            </div>\r\n            <div id=\"IMAGE493\" className=\"ladi-element\">\r\n                <div className=\"ladi-image\">\r\n                    <div className=\"ladi-image-background\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"IMAGE494\" className=\"ladi-element\">\r\n                <div className=\"ladi-image\">\r\n                    <div className=\"ladi-image-background\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"HEADLINE488\" className=\"ladi-element\">\r\n                <h3 className=\"ladi-headline\">\r\n                Hãy đăng nhập VNpay trên để hoàn tất việc đặt hàng.\r\n                <br/>\r\n                Vậy là bạn đã hoàn thành một bước mua hàng online tại \r\n                <span style={{color: 'red'}}> TvSTORE </span>\r\n                một cách dể dàng và tiện lợi chưa đến 2 phút.\r\n                </h3>\r\n            </div>\r\n            <div id=\"HEADLINE460\" className=\"ladi-element\">\r\n                <h3 className=\"ladi-headline\">\r\n                THANH TOÁN \r\n                <span style={{color:\"red\"}}> VNPAY</span>\r\n                </h3>\r\n            </div> \r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"SECTION489\" className=\"ladi-section\">\r\n          <div className=\"ladi-section-background\"></div>\r\n          <div className=\"ladi-container\">\r\n            <div id=\"BOX490\" className=\"ladi-element\">\r\n              <div className=\"ladi-box\"></div>\r\n            </div>\r\n            <div id=\"HEADLINE492\" className=\"ladi-element\">\r\n                <h3 className=\"ladi-headline\">\r\n                Sau khi chọn hình thức thanh toán qua ứng dụng Paypal, hệ thống chuyển sang giao diện thanh toán của Paypal.\r\n                </h3>\r\n            </div>\r\n            <div id=\"IMAGE493\" className=\"ladi-element\">\r\n                <div className=\"ladi-image\">\r\n                    <div className=\"ladi-image-background\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"IMAGE477\" className=\"ladi-element\" >\r\n                <div className=\"ladi-image\">\r\n                    <div className=\"ladi-image-background\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"HEADLINE488\" className=\"ladi-element\">\r\n                <h3 className=\"ladi-headline\">\r\n                Hãy đăng nhập Paypal trên để hoàn tất việc đặt hàng.\r\n                <br/>\r\n                Vậy là bạn đã hoàn thành một bước mua hàng online tại \r\n                <span style={{color: 'red'}}> TVSTORE </span>\r\n                một cách dể dàng và tiện lợi chưa đến 2 phút.\r\n                </h3>\r\n            </div>\r\n            <div id=\"HEADLINE460\" className=\"ladi-element\">\r\n                <h3 className=\"ladi-headline\">\r\n                THANH TOÁN \r\n                <span style={{color:\"red\"}}> Paypal</span>\r\n                </h3>\r\n            </div> \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentGuide;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Home\\Home.js",["282","283"],"import {React ,useState,useEffect} from \"react\";\r\nimport Header from \"../../Component/Header/Header\";\r\nimport Banner from \"../../Component/Banner/Banner\";\r\nimport Body from \"../../Component/Body/Body\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nimport ModalNews from \"../../Component/ModalNews/ModalNews\";\r\n\r\nimport \"./Home.css\";\r\nfunction Home(props) {\r\n  const {products,loading}=props;\r\n  \r\n  return (\r\n    <>\r\n      <ModalNews />\r\n      <Header/>\r\n      <Banner />\r\n      <Body products={products} loading={loading}/>\r\n      \r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\PaymentMoMo\\PaymentResult.js",["284","285","286","287","288","289","290"],"import React, { useEffect, useState,useMemo } from \"react\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nimport Header from \"../../Component/Header/Header\";\r\nimport \"./PaymentResult.css\";\r\nimport { BrowserRouter as Router, Link, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\nconst orderInfo = JSON.parse(localStorage.getItem(\"Order\") || \"[]\");\r\n\r\nfunction PaymentResult(){\r\n  const [order, setOder] = useState([]);\r\n  const [statusOrder,setStatusOrder]=useState(\"\");\r\n\r\n  function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n\r\n  //localMessage\r\n  //Thành công\r\n  //Đơn hàng đã bị huỷ bỏ\r\n  const data = {\r\n    status: 2,\r\n  };\r\n \r\n  var query = useQuery();\r\n  var name = query.get(\"localMessage\");\r\n  var message = query.get(\"message\");\r\n  var response_code=query.get(\"vnp_ResponseCode\");\r\n  useMemo(() => {\r\n    if (name == \"Thành công\") {\r\n      axios\r\n        .put(`http://127.0.0.1:8000/api/updateOrder/${orderInfo.id}`, data)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n        });\r\n        setStatusOrder(\"Đơn hàng thành công\");\r\n\r\n    } else if (message == 1) {\r\n      axios\r\n        .put(`http://127.0.0.1:8000/api/updateOrder/${orderInfo.id}`, data)\r\n        .then((res) => {\r\n          // localStorage.removeItem(\"Order\");\r\n          console.log(res.data);\r\n        });\r\n      name = \"Đơn hàng thành công\";\r\n      setStatusOrder(\"Đơn hàng thành công\");\r\n    }\r\n    else if(response_code ==\"00\")\r\n    {\r\n      axios\r\n      .put(`http://127.0.0.1:8000/api/updateOrder/${orderInfo.id}`, data)\r\n      .then((res) => {\r\n        // localStorage.removeItem(\"Order\");\r\n        console.log(res.data);\r\n      });\r\n    setStatusOrder(\"Đơn hàng thành công\");\r\n    }\r\n     else if (message == 2) {\r\n      axios\r\n      .put(`http://127.0.0.1:8000/api/updateOrderCanceled/${orderInfo.id}` )\r\n      .then((res) => {\r\n        // localStorage.removeItem(\"Order\");\r\n        console.log(res.data);\r\n      });\r\n      name = \"Đơn hàng bị hủy\";\r\n      console.log(\"paypal\");\r\n      setStatusOrder(\"Đơn hàng bị hủy\");\r\n\r\n    } \r\n    else if(message == 3){\r\n      const data_1 ={\r\n        status: 1,\r\n      }\r\n      axios\r\n      .put(`http://127.0.0.1:8000/api/updateOrder/${orderInfo.id}`,data_1 )\r\n      .then((res) => {\r\n        // localStorage.removeItem(\"Order\");\r\n        console.log(res.data);\r\n      });\r\n      name = \"Đơn hàng thành công\";\r\n      setStatusOrder(\"Đơn hàng thành công\");\r\n    }\r\n    else {\r\n      axios\r\n      .put(`http://127.0.0.1:8000/api/updateOrderCanceled/${orderInfo.id}`)\r\n      .then((res) => {\r\n        // localStorage.removeItem(\"Order\");\r\n        console.log(res.data);\r\n        console.log(\"momo\");\r\n      });\r\n      name = \"Đơn hàng bị hủy\";\r\n      setStatusOrder(\"Đơn hàng bị hủy\");\r\n\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getInformationOrderById/${orderInfo.id}`)\r\n      .then((res) => {\r\n        setOder(res.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        {order.map((item, index) => (\r\n          <div className=\"container\" key={index}>\r\n            <div className=\"order-Detail\">\r\n              <div className=\"Heading\">\r\n                <span>Chi tiết đơn hàng #HD{item.id} </span>\r\n                <span className=\"split\">-</span>\r\n                <span className=\"status\">\r\n                  <i className=\"fal fa-check-circle\"></i>\r\n                  {statusOrder}\r\n                </span>\r\n              </div>\r\n              {/* <div className=\"totalPrice\">Tổng giá: {item.Tongtien} VNĐ</div> */}\r\n              <NumberFormat\r\n                      value={item.Tongtien}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\" VNĐ\"}\r\n                      renderText={(value, props) => (\r\n                        <div className=\"totalPrice\" {...props}>\r\n                         Tổng tiền: {value}\r\n                        </div>\r\n                      )}\r\n                    />\r\n              <div className=\"created-date\">\r\n                Ngày đặt hàng: {item.ThoiGianMua}\r\n              </div>\r\n\r\n              <div className=\"information-User\">\r\n                <div className=\"address-User\">\r\n                  <div className=\"title\">Địa chỉ người nhận</div>\r\n                  <div className=\"content\">\r\n                    <p className=\"name\">{item.TenNguoidung}</p>\r\n                    <p className=\"address\">\r\n                      <span>Địa chỉ:</span>\r\n                      {item.DiaChi}\r\n                    </p>\r\n                    <p className=\"phone\">\r\n                      <span>Số điện thoại: </span>\r\n                      {item.SDT}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"address-User\">\r\n                  <div className=\"title\">Hình thức vận chuyển</div>\r\n                  <div className=\"content\">\r\n                    <p className=\"name\">{item.TenHinhThuc}</p>\r\n\r\n                    <p className=\"phone\">\r\n                      <span>Phí vận chuyển: 0đ</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"address-User\">\r\n                  <div className=\"title\">Hình thức thanh toán</div>\r\n                  <div className=\"content\">\r\n                    <p className=\"name\">{item.TenThanhToan}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Link to=\"/account-order\" className=\"view-list-order\">\r\n                <i className=\"far fa-arrow-left\"></i>\r\n                <span className=\"backOrder\">Quay lại đơn hàng của tôi</span>\r\n              </Link>\r\n              <Link\r\n                to={`/account/order/${orderInfo.id}`}\r\n                className=\"view-tracking-detail\"\r\n              >\r\n                Xem đơn hàng\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentResult;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\BuildConfig\\BuildConfig.js",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316"],"import React, { useEffect, useState, useRef, useMemo } from \"react\";\r\nimport Header from \"../../Component/Header/Header\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nimport \"./BuildConfig.css\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { InputGroup } from \"react-bootstrap\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nconst buildConfig = JSON.parse(localStorage.getItem(\"BuildConfig\") || \"[]\");\r\nfunction BuildConfig() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [accessories, setAccessories] = useState([]); // list accessories\r\n  const [idConfig, setIdConfig] = useState(\"\");\r\n  const [typecpu, setTypeCPU] = useState([]); //set type product is cpu\r\n  const [typeram, setTypeRAM] = useState([]); //set type product is ram\r\n  const [typemain, setTypeMain] = useState([]); //set type product is mainboard\r\n  const [typemonitor, setTypeMonitor] = useState([]); //set type product is monitor\r\n  const [typestorage, setTypeStorage] = useState([]); //set type product is storage\r\n  const [typepower, setTypePower] = useState([]); //set type product is Power\r\n  const [typevga, setTypeVGA] = useState([]); //set type product is VGA\r\n  const [typecooler, setTypeCooler] = useState([]); //set type product is Cooler\r\n\r\n  const [qtyCPU, setQtyCPU] = useState(1); // quantity cpu\r\n  const [qtyRAM, setQtyRam] = useState(1); // quantity ram\r\n  const [qtyMain, setQtyMain] = useState(1); // quantity ram\r\n  const [qtyMonitor, setQtyMonitor] = useState(1); // quantity monitor\r\n  const [qtyStorage, setQtyStorage] = useState(1); // quantity Storage\r\n  const [qtyPower, setQtyPower] = useState(1); // quantity Power\r\n  const [qtyVGA, setQtyVGA] = useState(1); // quantity VGA\r\n  const [qtyCooler, setQtyCooler] = useState(1); // quantity Cooler\r\n  const [keyword, setKeyword] = useState(\"\"); // keyword\r\n  const [page,setPage] = useState(1);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  let today = new Date().toLocaleDateString();\r\n  const componentRef = useRef();\r\n  const [config, setConfig] = useState({\r\n    cpu: buildConfig.cpu,\r\n    ram: buildConfig.ram,\r\n    main: buildConfig.main,\r\n    monitor: buildConfig.monitor,\r\n    storage: buildConfig.storage,\r\n    power: buildConfig.power,\r\n    vga: buildConfig.vga,\r\n    cooler: buildConfig.cooler,\r\n  });\r\n\r\n  const priceCPU = config.cpu === undefined ? 0 : qtyCPU * config.cpu.GiaKM;\r\n  const priceRAM = config.ram === undefined ? 0 : qtyRAM * config.ram.GiaKM;\r\n  const priceMain = config.main === undefined ? 0 : qtyMain * config.main.GiaKM;\r\n  const priceMonitor =\r\n    config.monitor === undefined ? 0 : qtyMonitor * config.monitor.GiaKM;\r\n  const priceStorage =\r\n    config.storage === undefined ? 0 : qtyStorage * config.storage.GiaKM;\r\n  const pricePower =\r\n    config.power === undefined ? 0 : qtyPower * config.power.GiaKM;\r\n  const priceVGA = config.vga === undefined ? 0 : qtyVGA * config.vga.GiaKM;\r\n  const priceCooler =\r\n    config.cooler === undefined ? 0 : qtyCooler * config.cooler.GiaKM;\r\n\r\n  const totalPrice =\r\n    priceCPU +\r\n    priceRAM +\r\n    priceMain +\r\n    priceMonitor +\r\n    priceStorage +\r\n    pricePower +\r\n    priceVGA +\r\n    priceCooler;\r\n\r\n  localStorage.setItem(\"BuildConfig\", JSON.stringify(config)); //set localStorage buildConfig\r\n\r\n  const handleShowAccessories = (data) => {\r\n    setIdConfig(data.id);\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getProductByTypeProductId/${data.id}?page=${page}`)\r\n      .then((response) => {\r\n        setAccessories(response.data.data);\r\n        setTotalPage(response.data.last_page);\r\n      });\r\n    setShow(true);\r\n  };\r\nuseEffect(() => {\r\n  axios\r\n      .get(`http://127.0.0.1:8000/api/getProductByTypeProductId/${idConfig}?page=${page}`)\r\n      .then((response) => {\r\n        setAccessories(response.data.data);\r\n        setTotalPage(response.data.last_page);\r\n      });\r\n}, [page])\r\n  useEffect(() => {\r\n    axios.get(\"http://127.0.0.1:8000/api/typeCPU\").then((response) => {\r\n      setTypeCPU(response.data);\r\n      setLoading(false);\r\n    });\r\n\r\n    axios.get(\"http://127.0.0.1:8000/api/typeRAM\").then((response) => {\r\n      setTypeRAM(response.data);\r\n      setLoading(false);\r\n    });\r\n    axios.get(\"http://127.0.0.1:8000/api/typeMainBoard\").then((response) => {\r\n      setTypeMain(response.data);\r\n      setLoading(false);\r\n    });\r\n    axios.get(\"http://127.0.0.1:8000/api/typeMonitor\").then((response) => {\r\n      setTypeMonitor(response.data);\r\n      setLoading(false);\r\n    });\r\n    axios.get(\"http://127.0.0.1:8000/api/typeStorage\").then((response) => {\r\n      setTypeStorage(response.data);\r\n      setLoading(false);\r\n    });\r\n    axios.get(\"http://127.0.0.1:8000/api/typePower\").then((response) => {\r\n      setTypePower(response.data);\r\n      setLoading(false);\r\n    });\r\n    axios.get(\"http://127.0.0.1:8000/api/typeVGA\").then((response) => {\r\n      setTypeVGA(response.data);\r\n      setLoading(false);\r\n    });\r\n    axios.get(\"http://127.0.0.1:8000/api/typeCooler\").then((response) => {\r\n      setTypeCooler(response.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n  const handleAddAccessories = (data) => {\r\n    if (data.loai_san_phams_id == 6) {\r\n      config.cpu = { ...config.cpu, ...data, qty: 1 };\r\n    } else if (data.loai_san_phams_id == 7) {\r\n      config.ram = { ...config.ram, ...data, qty: 1 };\r\n    } else if (data.loai_san_phams_id == 8) {\r\n      config.main = { ...config.main, ...data, qty: 1 };\r\n    } else if (data.loai_san_phams_id == 9) {\r\n      config.monitor = { ...config.monitor, ...data, qty: 1 };\r\n    } else if (data.loai_san_phams_id == 10) {\r\n      config.storage = { ...config.storage, ...data, qty: 1 };\r\n    } else if (data.loai_san_phams_id == 11) {\r\n      config.power = { ...config.power, ...data, qty: 1 };\r\n    } else if (data.loai_san_phams_id == 12) {\r\n      config.vga = { ...config.vga, ...data, qty: 1 };\r\n    } else if (data.loai_san_phams_id == 13) {\r\n      config.cooler = { ...config.cooler, ...data, qty: 1 };\r\n    }\r\n    setShow(false);\r\n  };\r\n  const handleRebuilld = () => {\r\n    setConfig({});\r\n  };\r\n\r\n  const handleRemove = (data) => {\r\n    if (data.TenLoai == \"CPU\") {\r\n      setConfig({\r\n        cpu: undefined,\r\n        ram: config.ram,\r\n        main: config.main,\r\n        monitor: config.monitor,\r\n        storage: config.storage,\r\n        power: config.power,\r\n        vga: config.vga,\r\n        cooler: config.cooler,\r\n      });\r\n    } else if (data.TenLoai == \"RAM\") {\r\n      setConfig({\r\n        cpu: config.cpu,\r\n        ram: undefined,\r\n        main: config.main,\r\n        monitor: config.monitor,\r\n        storage: config.storage,\r\n        power: config.power,\r\n        vga: config.vga,\r\n        cooler: config.cooler,\r\n      });\r\n    } else if (data.TenLoai == \"MainBoard\") {\r\n      setConfig({\r\n        cpu: config.cpu,\r\n        ram: config.ram,\r\n        main: undefined,\r\n        monitor: config.monitor,\r\n        storage: config.storage,\r\n        power: config.power,\r\n        vga: config.vga,\r\n        cooler: config.cooler,\r\n      });\r\n    } else if (data.TenLoai == \"Monitor\") {\r\n      setConfig({\r\n        cpu: config.cpu,\r\n        ram: config.ram,\r\n        main: config.main,\r\n        monitor: undefined,\r\n        storage: config.storage,\r\n        power: config.power,\r\n        vga: config.vga,\r\n        cooler: config.cooler,\r\n      });\r\n    } else if (data.TenLoai == \"Storage\") {\r\n      setConfig({\r\n        cpu: config.cpu,\r\n        ram: config.ram,\r\n        main: config.main,\r\n        monitor: config.monitor,\r\n        storage: undefined,\r\n        power: config.power,\r\n        vga: config.vga,\r\n        cooler: config.cooler,\r\n      });\r\n    } else if (data.TenLoai == \"Power\") {\r\n      setConfig({\r\n        cpu: config.cpu,\r\n        ram: config.ram,\r\n        main: config.main,\r\n        monitor: config.monitor,\r\n        storage: config.storage,\r\n        power: undefined,\r\n        vga: config.vga,\r\n        cooler: config.cooler,\r\n      });\r\n    } else if (data.TenLoai == \"VGA\") {\r\n      setConfig({\r\n        cpu: config.cpu,\r\n        ram: config.ram,\r\n        main: config.main,\r\n        monitor: config.monitor,\r\n        storage: config.storage,\r\n        power: config.power,\r\n        vga: undefined,\r\n        cooler: config.cooler,\r\n      });\r\n    } else if (data.TenLoai == \"Cooler\") {\r\n      setConfig({\r\n        cpu: config.cpu,\r\n        ram: config.ram,\r\n        main: config.main,\r\n        monitor: config.monitor,\r\n        storage: config.storage,\r\n        power: config.power,\r\n        vga: config.vga,\r\n        cooler: undefined,\r\n      });\r\n    }\r\n  };\r\n  const handleNextPage =(page) =>{\r\n      var nextPage = page +1;\r\n  }\r\n  const LinkImage = \"http://127.0.0.1:8000/images/\";\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div className=\"container\" style={{ background: \"white\" }}>\r\n          <div className=\"buildpc-banner-container mb-4\">\r\n            <Carousel indicators={false} autoPlay={true}>\r\n              <Carousel.Item>\r\n                <img\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://anphat.com.vn/media/banner/03_Jun4d2a3f9e05a69b5026211044312f2f32.jpg\"\r\n                  alt=\"First slide\"\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://anphat.com.vn/media/banner/03_Jun4d2a3f9e05a69b5026211044312f2f32.jpg\"\r\n                  alt=\"Second slide\"\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://anphat.com.vn/media/banner/03_Jun4d2a3f9e05a69b5026211044312f2f32.jpg\"\r\n                  alt=\"Third slide\"\r\n                />\r\n              </Carousel.Item>\r\n            </Carousel>\r\n            <div id=\"build-pc-function\" ref={componentRef}>\r\n              <div className=\"build-pc-header\">\r\n                <div className=\"left-content\">\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"re-build\"\r\n                    onClick={() => handleRebuilld()}\r\n                  >\r\n                    <i className=\"fas fa-sync\"></i>\r\n                    Xây dựng lại\r\n                  </Button>\r\n                </div>\r\n                <div className=\"right-content\">\r\n                  <span>\r\n                    Chi phí dự tính :\r\n                    <NumberFormat\r\n                      value={totalPrice}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\" VNĐ\"}\r\n                      renderText={(value, props) => (\r\n                        <strong className=\"price\" {...props}>\r\n                          {value}\r\n                        </strong>\r\n                      )}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              {loading ? (\r\n                <Skeleton count={12} />\r\n              ) : (\r\n                <div className=\"build-pc-body\">\r\n                  {/* CPU */}\r\n                  {typecpu.map((item, index) => {\r\n                    return (\r\n                      <div className=\"product-type-item\" key={index}>\r\n                        <div className=\"left-content\">1. {item.TenLoai}</div>\r\n                        {config.cpu === undefined ? (\r\n                          <div className=\"right-content\">\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              className=\"choose-product\"\r\n                              onClick={() => handleShowAccessories(item)}\r\n                            >\r\n                              <i className=\"fas fa-plus\"></i>\r\n                              {item.TenLoai}\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"right-content\">\r\n                            <div className=\"choose-product-item-detail\">\r\n                              <div className=\"image\">\r\n                                <img\r\n                                  src={LinkImage + config.cpu.AnhDaiDien}\r\n                                  alt={config.cpu.AnhDaiDien}\r\n                                />\r\n                              </div>\r\n                              <div className=\"content\">\r\n                                <p className=\"name\">{config.cpu.TenSanPham}</p>\r\n\r\n                                <NumberFormat\r\n                                  value={config.cpu.GiaKM}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  suffix={\" VNĐ\"}\r\n                                  renderText={(value, props) => (\r\n                                    <p className=\"price\" {...props}>\r\n                                      Giá: {value}\r\n                                    </p>\r\n                                  )}\r\n                                />\r\n                                <p className=\"productid\">\r\n                                  Mã sản phẩm: {`SP${config.cpu.id}`}\r\n                                </p>\r\n                                <div\r\n                                  className=\"action\"\r\n                                  style={{\r\n                                    display: \"flex\",\r\n                                    marginTop: \"5px\",\r\n                                  }}\r\n                                >\r\n                                  <span>Số lượng: </span>\r\n                                  <TextField\r\n                                    id=\"outlined-number\"\r\n                                    className=\"qty\"\r\n                                    type=\"number\"\r\n                                    defaultValue=\"1\"\r\n                                    value={qtyCPU}\r\n                                    variant=\"outlined\"\r\n                                    onChange={(e) =>\r\n                                      setQtyCPU(\r\n                                        parseInt(e.target.value) >=\r\n                                          parseInt(config.cpu.SoLuong) ||\r\n                                          e.target.value < 1\r\n                                          ? config.cpu.SoLuong\r\n                                          : e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n\r\n                                  <span>\r\n                                    =\r\n                                    <NumberFormat\r\n                                      value={priceCPU}\r\n                                      displayType={\"text\"}\r\n                                      thousandSeparator={true}\r\n                                      suffix={\" VNĐ\"}\r\n                                      renderText={(value, props) => (\r\n                                        <strong className=\"price\" {...props}>\r\n                                          {value}\r\n                                        </strong>\r\n                                      )}\r\n                                    />\r\n                                  </span>\r\n                                  <span className=\"delete\">\r\n                                    <i\r\n                                      className=\"fas fa-trash-alt\"\r\n                                      onClick={() => handleRemove(item)}\r\n                                    ></i>\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n\r\n                  {/* ram */}\r\n                  {typeram.map((item, index) => (\r\n                    <div className=\"product-type-item\" key={index}>\r\n                      <div className=\"left-content\">2. {item.TenLoai}</div>\r\n                      {config.ram == null ? (\r\n                        <div className=\"right-content\">\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            className=\"choose-product\"\r\n                            onClick={() => handleShowAccessories(item)}\r\n                          >\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            {item.TenLoai}\r\n                          </Button>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"right-content\">\r\n                          <div className=\"choose-product-item-detail\">\r\n                            <div className=\"image\">\r\n                              <img\r\n                                src={LinkImage + config.ram.AnhDaiDien}\r\n                                alt={config.ram.AnhDaiDien}\r\n                              />\r\n                            </div>\r\n                            <div className=\"content\">\r\n                              <p className=\"name\">{config.ram.TenSanPham}</p>\r\n                              {/* <p className=\"price\">Giá: {config.cpu.GiaKM} VNĐ</p> */}\r\n                              <NumberFormat\r\n                                value={config.ram.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <p className=\"price\" {...props}>\r\n                                    Giá: {value}\r\n                                  </p>\r\n                                )}\r\n                              />\r\n                              <p className=\"productid\">\r\n                                Mã sản phẩm: {`SP${config.ram.id}`}\r\n                              </p>\r\n                              <div\r\n                                className=\"action\"\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  marginTop: \"5px\",\r\n                                }}\r\n                              >\r\n                                <span>Số lượng: </span>\r\n                                <TextField\r\n                                  id=\"outlined-number\"\r\n                                  className=\"qty\"\r\n                                  type=\"number\"\r\n                                  defaultValue=\"1\"\r\n                                  variant=\"outlined\"\r\n                                  value={qtyRAM}\r\n                                  onChange={(e) =>\r\n                                    setQtyRam(\r\n                                      parseInt(e.target.value) >=\r\n                                        parseInt(config.ram.SoLuong) ||\r\n                                        e.target.value < 1\r\n                                        ? config.ram.SoLuong\r\n                                        : e.target.value\r\n                                    )\r\n                                  }\r\n                                />\r\n                                <span>\r\n                                  =\r\n                                  <NumberFormat\r\n                                    value={priceRAM}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    suffix={\" VNĐ\"}\r\n                                    renderText={(value, props) => (\r\n                                      <strong className=\"price\" {...props}>\r\n                                        {value}\r\n                                      </strong>\r\n                                    )}\r\n                                  />\r\n                                </span>\r\n                                <span className=\"delete\">\r\n                                  <i\r\n                                    className=\"fas fa-trash-alt\"\r\n                                    onClick={() => handleRemove(item)}\r\n                                  ></i>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* mainboard */}\r\n                  {typemain.map((item, index) => (\r\n                    <div className=\"product-type-item\" key={index}>\r\n                      <div className=\"left-content\">3. {item.TenLoai}</div>\r\n                      {config.main == null ? (\r\n                        <div className=\"right-content\">\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            className=\"choose-product\"\r\n                            onClick={() => handleShowAccessories(item)}\r\n                          >\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            {item.TenLoai}\r\n                          </Button>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"right-content\">\r\n                          <div className=\"choose-product-item-detail\">\r\n                            <div className=\"image\">\r\n                              <img\r\n                                src={LinkImage + config.main.AnhDaiDien}\r\n                                alt={config.main.AnhDaiDien}\r\n                              />\r\n                            </div>\r\n                            <div className=\"content\">\r\n                              <p className=\"name\">{config.main.TenSanPham}</p>\r\n\r\n                              <NumberFormat\r\n                                value={config.main.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <p className=\"price\" {...props}>\r\n                                    Giá: {value}\r\n                                  </p>\r\n                                )}\r\n                              />\r\n                              <p className=\"productid\">\r\n                                Mã sản phẩm: {`SP${config.main.id}`}\r\n                              </p>\r\n                              <div\r\n                                className=\"action\"\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  marginTop: \"5px\",\r\n                                }}\r\n                              >\r\n                                <span>Số lượng: </span>\r\n                                <TextField\r\n                                  id=\"outlined-number\"\r\n                                  className=\"qty\"\r\n                                  type=\"number\"\r\n                                  defaultValue=\"1\"\r\n                                  variant=\"outlined\"\r\n                                  value={qtyMain}\r\n                                  // value={parseInt(qtyMain)> parseInt(config.main.SoLuong) ||parseInt(qtyMain)<1?parseInt(config.main.SoLuong) :qtyMain}\r\n                                  onChange={(e) =>\r\n                                    setQtyMain(\r\n                                      parseInt(e.target.value) >=\r\n                                        parseInt(config.main.SoLuong) ||\r\n                                        e.target.value < 1\r\n                                        ? config.main.SoLuong\r\n                                        : e.target.value\r\n                                    )\r\n                                  }\r\n                                  // onChange={(e) => setQtyMain(e.target.value)}\r\n                                />\r\n                                <span>\r\n                                  =\r\n                                  <NumberFormat\r\n                                    value={priceMain}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    suffix={\" VNĐ\"}\r\n                                    renderText={(value, props) => (\r\n                                      <strong className=\"price\" {...props}>\r\n                                        {value}\r\n                                      </strong>\r\n                                    )}\r\n                                  />\r\n                                </span>\r\n                                <span className=\"delete\">\r\n                                  <i\r\n                                    className=\"fas fa-trash-alt\"\r\n                                    onClick={() => handleRemove(item)}\r\n                                  ></i>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* Monitor */}\r\n                  {typemonitor.map((item, index) => (\r\n                    <div className=\"product-type-item\" key={index}>\r\n                      <div className=\"left-content\">4. {item.TenLoai}</div>\r\n                      {config.monitor == null ? (\r\n                        <div className=\"right-content\">\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            className=\"choose-product\"\r\n                            onClick={() => handleShowAccessories(item)}\r\n                          >\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            {item.TenLoai}\r\n                          </Button>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"right-content\">\r\n                          <div className=\"choose-product-item-detail\">\r\n                            <div className=\"image\">\r\n                              <img\r\n                                src={LinkImage + config.monitor.AnhDaiDien}\r\n                                alt={config.monitor.AnhDaiDien}\r\n                              />\r\n                            </div>\r\n                            <div className=\"content\">\r\n                              <p className=\"name\">\r\n                                {config.monitor.TenSanPham}\r\n                              </p>\r\n\r\n                              <NumberFormat\r\n                                value={config.monitor.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <p className=\"price\" {...props}>\r\n                                    Giá: {value}\r\n                                  </p>\r\n                                )}\r\n                              />\r\n                              <p className=\"productid\">\r\n                                Mã sản phẩm: {`SP${config.monitor.id}`}\r\n                              </p>\r\n                              <div\r\n                                className=\"action\"\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  marginTop: \"5px\",\r\n                                }}\r\n                              >\r\n                                <span>Số lượng: </span>\r\n                                <TextField\r\n                                  id=\"outlined-number\"\r\n                                  className=\"qty\"\r\n                                  type=\"number\"\r\n                                  defaultValue=\"1\"\r\n                                  variant=\"outlined\"\r\n                                  value={qtyMonitor}\r\n                                  // onChange={(e) => setQtyMonitor(e.target.value)}\r\n                                  onChange={(e) =>\r\n                                    setQtyMonitor(\r\n                                      parseInt(e.target.value) >=\r\n                                        parseInt(config.monitor.SoLuong) ||\r\n                                        e.target.value < 1\r\n                                        ? config.monitor.SoLuong\r\n                                        : e.target.value\r\n                                    )\r\n                                  }\r\n                                />\r\n                                <span>\r\n                                  =\r\n                                  <NumberFormat\r\n                                    value={priceMonitor}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    suffix={\" VNĐ\"}\r\n                                    renderText={(value, props) => (\r\n                                      <strong className=\"price\" {...props}>\r\n                                        {value}\r\n                                      </strong>\r\n                                    )}\r\n                                  />\r\n                                </span>\r\n                                <span className=\"delete\">\r\n                                  <i\r\n                                    className=\"fas fa-trash-alt\"\r\n                                    onClick={() => handleRemove(item)}\r\n                                  ></i>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  {/* storage */}\r\n                  {typestorage.map((item, index) => (\r\n                    <div className=\"product-type-item\" key={index}>\r\n                      <div className=\"left-content\">5. {item.TenLoai}</div>\r\n                      {config.storage == null ? (\r\n                        <div className=\"right-content\">\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            className=\"choose-product\"\r\n                            onClick={() => handleShowAccessories(item)}\r\n                          >\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            {item.TenLoai}\r\n                          </Button>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"right-content\">\r\n                          <div className=\"choose-product-item-detail\">\r\n                            <div className=\"image\">\r\n                              <img\r\n                                src={LinkImage + config.storage.AnhDaiDien}\r\n                                alt={config.storage.AnhDaiDien}\r\n                              />\r\n                            </div>\r\n                            <div className=\"content\">\r\n                              <p className=\"name\">\r\n                                {config.storage.TenSanPham}\r\n                              </p>\r\n\r\n                              <NumberFormat\r\n                                value={config.storage.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <p className=\"price\" {...props}>\r\n                                    Giá: {value}\r\n                                  </p>\r\n                                )}\r\n                              />\r\n                              <p className=\"productid\">\r\n                                Mã sản phẩm: {`SP${config.storage.id}`}\r\n                              </p>\r\n                              <div\r\n                                className=\"action\"\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  marginTop: \"5px\",\r\n                                }}\r\n                              >\r\n                                <span>Số lượng: </span>\r\n                                <TextField\r\n                                  id=\"outlined-number\"\r\n                                  className=\"qty\"\r\n                                  type=\"number\"\r\n                                  defaultValue=\"1\"\r\n                                  variant=\"outlined\"\r\n                                  value={qtyStorage}\r\n                                  onChange={(e) =>\r\n                                    setQtyStorage(\r\n                                      parseInt(e.target.value) >=\r\n                                        parseInt(config.storage.SoLuong) ||\r\n                                        e.target.value < 1\r\n                                        ? config.storage.SoLuong\r\n                                        : e.target.value\r\n                                    )\r\n                                  }\r\n                                />\r\n                                <span>\r\n                                  =\r\n                                  <NumberFormat\r\n                                    value={priceStorage}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    suffix={\" VNĐ\"}\r\n                                    renderText={(value, props) => (\r\n                                      <strong className=\"price\" {...props}>\r\n                                        {value}\r\n                                      </strong>\r\n                                    )}\r\n                                  />\r\n                                </span>\r\n                                <span className=\"delete\">\r\n                                  <i\r\n                                    className=\"fas fa-trash-alt\"\r\n                                    onClick={() => handleRemove(item)}\r\n                                  ></i>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  {/* power */}\r\n                  {typepower.map((item, index) => (\r\n                    <div className=\"product-type-item\" key={index}>\r\n                      <div className=\"left-content\">6. {item.TenLoai}</div>\r\n                      {config.power == null ? (\r\n                        <div className=\"right-content\">\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            className=\"choose-product\"\r\n                            onClick={() => handleShowAccessories(item)}\r\n                          >\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            {item.TenLoai}\r\n                          </Button>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"right-content\">\r\n                          <div className=\"choose-product-item-detail\">\r\n                            <div className=\"image\">\r\n                              <img\r\n                                src={LinkImage + config.power.AnhDaiDien}\r\n                                alt={config.power.AnhDaiDien}\r\n                              />\r\n                            </div>\r\n                            <div className=\"content\">\r\n                              <p className=\"name\">{config.power.TenSanPham}</p>\r\n\r\n                              <NumberFormat\r\n                                value={config.power.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <p className=\"price\" {...props}>\r\n                                    Giá: {value}\r\n                                  </p>\r\n                                )}\r\n                              />\r\n                              <p className=\"productid\">\r\n                                Mã sản phẩm: {`SP${config.power.id}`}\r\n                              </p>\r\n                              <div\r\n                                className=\"action\"\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  marginTop: \"5px\",\r\n                                }}\r\n                              >\r\n                                <span>Số lượng: </span>\r\n                                <TextField\r\n                                  id=\"outlined-number\"\r\n                                  className=\"qty\"\r\n                                  type=\"number\"\r\n                                  defaultValue=\"1\"\r\n                                  variant=\"outlined\"\r\n                                  value={qtyPower}\r\n                                  onChange={(e) =>\r\n                                    setQtyPower(\r\n                                      parseInt(e.target.value) >=\r\n                                        parseInt(config.power.SoLuong) ||\r\n                                        e.target.value < 1\r\n                                        ? config.power.SoLuong\r\n                                        : e.target.value\r\n                                    )\r\n                                  }\r\n                                />\r\n                                <span>\r\n                                  =\r\n                                  <NumberFormat\r\n                                    value={pricePower}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    suffix={\" VNĐ\"}\r\n                                    renderText={(value, props) => (\r\n                                      <strong className=\"price\" {...props}>\r\n                                        {value}\r\n                                      </strong>\r\n                                    )}\r\n                                  />\r\n                                </span>\r\n                                <span className=\"delete\">\r\n                                  <i\r\n                                    className=\"fas fa-trash-alt\"\r\n                                    onClick={() => handleRemove(item)}\r\n                                  ></i>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  {/* vga */}\r\n                  {typevga.map((item, index) => (\r\n                    <div className=\"product-type-item\" key={index}>\r\n                      <div className=\"left-content\">7. {item.TenLoai}</div>\r\n                      {config.vga == null ? (\r\n                        <div className=\"right-content\">\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            className=\"choose-product\"\r\n                            onClick={() => handleShowAccessories(item)}\r\n                          >\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            {item.TenLoai}\r\n                          </Button>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"right-content\">\r\n                          <div className=\"choose-product-item-detail\">\r\n                            <div className=\"image\">\r\n                              <img\r\n                                src={LinkImage + config.vga.AnhDaiDien}\r\n                                alt={config.vga.AnhDaiDien}\r\n                              />\r\n                            </div>\r\n                            <div className=\"content\">\r\n                              <p className=\"name\">{config.vga.TenSanPham}</p>\r\n\r\n                              <NumberFormat\r\n                                value={config.vga.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <p className=\"price\" {...props}>\r\n                                    Giá: {value}\r\n                                  </p>\r\n                                )}\r\n                              />\r\n                              <p className=\"productid\">\r\n                                Mã sản phẩm: {`SP${config.vga.id}`}\r\n                              </p>\r\n                              <div\r\n                                className=\"action\"\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  marginTop: \"5px\",\r\n                                }}\r\n                              >\r\n                                <span>Số lượng: </span>\r\n                                <TextField\r\n                                  id=\"outlined-number\"\r\n                                  className=\"qty\"\r\n                                  type=\"number\"\r\n                                  defaultValue=\"1\"\r\n                                  variant=\"outlined\"\r\n                                  value={qtyVGA}\r\n                                  onChange={(e) =>\r\n                                    setQtyVGA(\r\n                                      parseInt(e.target.value) >=\r\n                                        parseInt(config.vga.SoLuong) ||\r\n                                        e.target.value < 1\r\n                                        ? config.vga.SoLuong\r\n                                        : e.target.value\r\n                                    )\r\n                                  }\r\n                                />\r\n                                <span>\r\n                                  =\r\n                                  <NumberFormat\r\n                                    value={priceVGA}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    suffix={\" VNĐ\"}\r\n                                    renderText={(value, props) => (\r\n                                      <strong className=\"price\" {...props}>\r\n                                        {value}\r\n                                      </strong>\r\n                                    )}\r\n                                  />\r\n                                </span>\r\n                                <span className=\"delete\">\r\n                                  <i\r\n                                    className=\"fas fa-trash-alt\"\r\n                                    onClick={() => handleRemove(item)}\r\n                                  ></i>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  {/* tản nhiệt */}\r\n                  {typecooler.map((item, index) => (\r\n                    <div className=\"product-type-item\" key={index}>\r\n                      <div className=\"left-content\">8. {item.TenLoai}</div>\r\n                      {config.cooler == null ? (\r\n                        <div className=\"right-content\">\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            className=\"choose-product\"\r\n                            onClick={() => handleShowAccessories(item)}\r\n                          >\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            {item.TenLoai}\r\n                          </Button>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"right-content\">\r\n                          <div className=\"choose-product-item-detail\">\r\n                            <div className=\"image\">\r\n                              <img\r\n                                src={LinkImage + config.cooler.AnhDaiDien}\r\n                                alt={config.cooler.AnhDaiDien}\r\n                              />\r\n                            </div>\r\n                            <div className=\"content\">\r\n                              <p className=\"name\">{config.cooler.TenSanPham}</p>\r\n\r\n                              <NumberFormat\r\n                                value={config.cooler.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <p className=\"price\" {...props}>\r\n                                    Giá: {value}\r\n                                  </p>\r\n                                )}\r\n                              />\r\n                              <p className=\"productid\">\r\n                                Mã sản phẩm: {`SP${config.cooler.id}`}\r\n                              </p>\r\n                              <div\r\n                                className=\"action\"\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  marginTop: \"5px\",\r\n                                }}\r\n                              >\r\n                                <span>Số lượng: </span>\r\n                                <TextField\r\n                                  id=\"outlined-number\"\r\n                                  className=\"qty\"\r\n                                  type=\"number\"\r\n                                  defaultValue=\"1\"\r\n                                  variant=\"outlined\"\r\n                                  value={qtyCooler}\r\n                                  onChange={(e) =>\r\n                                    setQtyCooler(\r\n                                      parseInt(e.target.value) >=\r\n                                        parseInt(config.cooler.SoLuong) ||\r\n                                        e.target.value < 1\r\n                                        ? config.cooler.SoLuong\r\n                                        : e.target.value\r\n                                    )\r\n                                  }\r\n                                />\r\n                                <span>\r\n                                  =\r\n                                  <NumberFormat\r\n                                    value={priceCooler}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    suffix={\" VNĐ\"}\r\n                                    renderText={(value, props) => (\r\n                                      <strong className=\"price\" {...props}>\r\n                                        {value}\r\n                                      </strong>\r\n                                    )}\r\n                                  />\r\n                                </span>\r\n                                <span className=\"delete\">\r\n                                  <i\r\n                                    className=\"fas fa-trash-alt\"\r\n                                    onClick={() => handleRemove(item)}\r\n                                  ></i>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"build-pc-footer\">\r\n              <div className=\"btn-item\">\r\n                <ReactToPrint\r\n                  trigger={() => (\r\n                    <Button className=\"btn btnSaving\">\r\n                      <i className=\"fas fa-images\"></i>\r\n                      Tải file cấu hình\r\n                    </Button>\r\n                  )}\r\n                  content={() => componentRef.current}\r\n                  documentTitle={`BuildPC` + today}\r\n                />\r\n              </div>\r\n              {/* <div className=\"btn-item\">\r\n                <Button\r\n                  className=\"btn btnShare\"\r\n                  onClick={() => exportComponentAsPNG(componentRef)}\r\n                >\r\n                  <i className=\"fab fa-facebook-f\"></i>\r\n                  Tải ảnh cấu hình\r\n                </Button>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        id={`CH${idConfig}`}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title as=\"h2\" className=\"header-title\">\r\n            Chọn linh kiện\r\n          </Modal.Title>\r\n          <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n              placeholder=\"Tìm kiếm sản phẩm\"\r\n              aria-label=\"Tìm kiếm sản phẩm\"\r\n              aria-describedby=\"basic-addon2\"\r\n              onChange={(e) => setKeyword(e.target.value)}\r\n            />\r\n          </InputGroup>\r\n          <i className=\"fas fa-times\" onClick={handleClose}></i>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"list-product-modal\">\r\n            <div className=\"list-product-header\">\r\n              <span>\r\n                Trang\r\n                <strong>{page}</strong>/<strong>{totalPage}</strong>\r\n              </span>\r\n              <Button className=\"btn-prev\">\r\n                <i className=\"fas fa-backward\" onClick={()=> setPage(page == 0 || page ==1 ? 1 : page - 1)}></i>\r\n              </Button>\r\n              <input\r\n                className=\"input-paging\"\r\n                type=\"number\"\r\n                disabled\r\n                value={page}\r\n              />\r\n              <Button className=\"btn-next\">\r\n                <i className=\"fas fa-forward\" onClick={()=>setPage(page >= totalPage ? totalPage : page+1)}></i>\r\n              </Button>\r\n            </div>\r\n            <div className=\"list-product-data\">\r\n              {/* {accessories.map((item, index) => { */}\r\n              {accessories\r\n                .filter(({ TenSanPham }) =>\r\n                  TenSanPham.toLowerCase().includes(keyword.toLowerCase())\r\n                )\r\n                .map((item, index) => (\r\n                  <div className=\"modal-product-detail\" key={index}>\r\n                    <div className=\"image\">\r\n                      <img src={LinkImage + item.AnhDaiDien} alt=\"AnhDaiDien\" />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <Link to={`/ProductDetail/${item.id}`} target=\"_blank\">\r\n                        <p className=\"name\">{item.TenSanPham}</p>\r\n                        <p className=\"productid\">Mã sản phẩm: SP{item.id}</p>\r\n                        <NumberFormat\r\n                          value={item.GiaKM}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          suffix={\" VNĐ\"}\r\n                          renderText={(value, props) => (\r\n                            <p className=\"price\" {...props}>\r\n                              {value}\r\n                            </p>\r\n                          )}\r\n                        />\r\n                      </Link>\r\n                      <Button\r\n                        className=\"add-to-build\"\r\n                        onClick={() => handleAddAccessories(item)}\r\n                      >\r\n                        Chọn\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BuildConfig;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\User_Infomartion\\User_infomartion.js",["317","318","319","320","321","322","323","324","325","326"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../Component/Header/Header\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nimport Paypal from \"../../Component/Paypal/Paypal\";\r\n\r\nfunction User_infomartion() {\r\n  const userLogin = JSON.parse(localStorage.getItem(\"userLogin\") || \"[]\");\r\n  const [city, setCity] = useState([]);\r\n  const [optionPayment, setOptionPayment] = useState();\r\n  const [optionShipping, setOptionShipping] = useState(1);\r\n  const [paypal, setPayPal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div id=\"mainframe\">\r\n          <div className=\"container\">\r\n            <div className=\"cart-container\">\r\n              <h1 style={{ margin: 0 }}>Đặt hàng</h1>\r\n              <div className=\"cart_step2\">\r\n                <div className=\"title_box_cart\">1. Thông tin khách hàng</div>\r\n                <div className=\"box-cart-user-info\">\r\n                  <input\r\n                    name=\"name\"\r\n                    placeholder=\"Họ tên\"\r\n                    value={userLogin.TenNguoidung}\r\n                  />\r\n                  <input\r\n                    name=\"name\"\r\n                    placeholder=\"Email\"\r\n                    value={userLogin.Email}\r\n                  />\r\n                  <input\r\n                    name=\"name\"\r\n                    placeholder=\"Số điện thoại\"\r\n                    value={userLogin.SDT}\r\n                  />\r\n                  <input\r\n                    name=\"name\"\r\n                    placeholder=\"Địa chỉ\"\r\n                    value={userLogin.DiaChi}\r\n                  />\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User_infomartion;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\NoMatch\\NoMatch.js",[],"C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\Ordered\\Ordered.js",["327","328","329"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Css/Account.css\";\r\nimport Header from \"../../../Component/Header/Header\";\r\nimport Footer from \"../../../Component/Footer/Footer\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\nfunction Ordered() {\r\n  const [order, setOder] = useState([]);\r\n  useEffect(() => {\r\n    const userLogin = JSON.parse(localStorage.getItem(\"userLogin\") || \"[]\");\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getOrderPaidByUserID/${userLogin.id}`)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setOder(response.data);\r\n\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div className=\"container\">\r\n          <div className=\"bg-white\" style={{ padding: \"10px\" }}>\r\n            <div id=\"content\">\r\n              <table id=\"tb-account\" style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td id=\"account-left\">\r\n                      <dl>\r\n                        <dt>Đơn hàng đặt mua</dt>\r\n                        <dd>\r\n                          <Link to=\"/account-order\">ĐH chưa thanh toán</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-ordered\">Đơn hàng đã thanh toán</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-completeOrder\">Đơn hàng đã hoàn thành</Link>\r\n                        </dd>\r\n                        <dd>\r\n                        <Link to=\"/account-orderCanceled\"> Đơn hàng đã hủy</Link>\r\n\r\n                        </dd>\r\n                      </dl> \r\n                      <dl>\r\n                        <dt>Thông tin tài khoản</dt>\r\n                        <dd>\r\n                          <Link to=\"/updateUser\">\r\n                            Thông tin cá nhân\r\n                          </Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/updatePassword\">Thay đổi mật khẩu</Link>\r\n                        </dd>\r\n                      </dl>\r\n                    </td>\r\n                    <td valign=\"top\" className=\"tb-order\">\r\n                      <h3>Danh sách tất cả đơn hàng đã thanh toán</h3>\r\n                      <tr>\r\n                        <td>Mã đơn hàng</td>\r\n                        <td>Ngày đặt</td>\r\n\r\n                        <td>Vận chuyển</td>\r\n                        <td>Thanh toán</td>\r\n                        <td>Tổng tiền</td>\r\n                        <td>Trạng thái</td>\r\n                      </tr>\r\n                      {order.length === 0 ? (\r\n                        <p>Bạn chưa có đơn hàng nào !</p>\r\n                      ) : (\r\n                        order.map((item) => (\r\n                          <tr className=\"odd cancelled_order\">\r\n                            <td>\r\n                              <Link to={`/account/order/${item.id}`}>#HD{item.id}</Link>\r\n                            </td>\r\n                            <td>{item.ThoiGianMua}</td>\r\n                            <td>{item.TenHinhThuc}</td>\r\n                            <td>{item.TenThanhToan}</td>\r\n                            {/* <td>{item.Tongtien}</td> */}\r\n                            <NumberFormat\r\n                              value={item.Tongtien}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              suffix={\" VNĐ\"}\r\n                              renderText={(value, props) => (\r\n                                <td {...props}>{value}</td>\r\n                              )}\r\n                            />\r\n                            <td>{item.TenTrangThai}</td>\r\n                          </tr>\r\n                        ))\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Ordered;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\InformationOrder\\InformationOrder.js",["330","331","332","333"],"import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../../Component/Footer/Footer\";\r\nimport Header from \"../../../Component/Header/Header\";\r\nimport \"../Css/Account.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\nfunction InformationOrder() {\r\n  let { id } = useParams();\r\n  const [orderDetails, setOrderDetails] = useState([]);\r\n  const TotalPrice = orderDetails.reduce((a, c) => a + c.SoLuong * c.DonGia, 0);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getOrderDetails/${id}`)\r\n      .then((response) => {\r\n        setOrderDetails(response.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div id=\"layout-page-order\" className=\"container\">\r\n          <div className=\"col-xs-12\">\r\n            <h4>\r\n              <Link\r\n                to=\"/account-order\"\r\n                style={{ marginLeft: \"12px\", fontSize: \"18px\" }}\r\n              >\r\n                Quay lại trang tài khoản\r\n              </Link>\r\n            </h4>\r\n          </div>\r\n          <div className=\"col-md-12 content-page\">\r\n            <table id=\"order_details\">\r\n              <tbody>\r\n                <tr style={{ height: \"40px\" }}>\r\n                  <th style={{ width: \"530px\" }}>Sản phẩm</th>\r\n                  <th style={{ width: \"141px\" }}>Giá</th>\r\n                  <th style={{ width: \"112px\" }}>Số lượng</th>\r\n                  <th style={{ width: \"152px\" }}>Tổng cộng</th>\r\n                </tr>\r\n                {orderDetails.map((item,index) => (\r\n                  <tr style={{ height: \"40px\" }} key={index}>\r\n                    <td style={{ width: \"530px\" }}>\r\n                      <Link to={`/ProductDetail/${item.id}`}>{item.TenSanPham}</Link>\r\n                    </td>\r\n                    <NumberFormat\r\n                      value={item.DonGia}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\" VNĐ\"}\r\n                      renderText={(value, props) => (\r\n                        <td style={{ width: \"141px\" }} {...props}>\r\n                          {value}\r\n                        </td>\r\n                      )}\r\n                    />\r\n                    <td style={{ width: \"112px\" }}>{item.SoLuong}</td>\r\n                    <NumberFormat\r\n                      value={item.Tongtien}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\" VNĐ\"}\r\n                      renderText={(value, props) => (\r\n                        <td style={{ width: \"152px\" }} {...props}>\r\n                          {value}\r\n                        </td>\r\n                      )}\r\n                    />\r\n                  </tr>\r\n                ))}\r\n\r\n                <tr style={{ height: \"40px\" }} className=\"order_summary\">\r\n                  <td colspan=\"3\">\r\n                    <b>Phí giao hàng</b>\r\n                  </td>\r\n                  <td>\r\n                    <b>0 VNĐ</b>\r\n                  </td>\r\n                </tr>\r\n                <tr\r\n                  style={{ height: \"40px\" }}\r\n                  className=\"order_summary order_total\"\r\n                >\r\n                  <td colspan=\"3\">\r\n                    <b>Tổng tiền</b>\r\n                  </td>\r\n                  <td>\r\n                    <NumberFormat\r\n                      value={TotalPrice}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\" VNĐ\"}\r\n                      renderText={(value, props) => (\r\n                        <b  {...props}>\r\n                          {value}\r\n                        </b>\r\n                      )}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InformationOrder;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\allOrder\\Order.js",["334","335","336"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Css/Account.css\";\r\nimport Header from \"../../../Component/Header/Header\";\r\nimport Footer from \"../../../Component/Footer/Footer\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\nfunction Order() {\r\n  const [order, setOder] = useState([]);\r\n  useEffect(() => {\r\n    const userLogin = JSON.parse(localStorage.getItem(\"userLogin\") || \"[]\");\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getOrderUnpaidByUserID/${userLogin.id}`)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setOder(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div className=\"container\">\r\n          <div className=\"bg-white\" style={{ padding: \"10px\" }}>\r\n            <div id=\"content\">\r\n              <table id=\"tb-account\" style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td id=\"account-left\">\r\n                      <dl>\r\n                        <dt>Đơn hàng đặt mua</dt>\r\n                        <dd>\r\n                          <Link to=\"/account-order\">Đơn hàng chưa thanh toán</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-ordered\"> Đơn hàng đã thanh toán</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-completeOrder\"> Đơn hàng đã hoàn thành</Link>\r\n                        </dd>\r\n                        <dd>\r\n                        <Link to=\"/account-orderCanceled\"> Đơn hàng đã hủy</Link>\r\n\r\n                        </dd>\r\n                      </dl>\r\n                      <dl>\r\n                        <dt>Thông tin tài khoản</dt>\r\n                        <dd>\r\n                          <Link to=\"/updateUser\">\r\n                            Thông tin cá nhân\r\n                          </Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/updatePassword\">Thay đổi mật khẩu</Link>\r\n                        </dd>\r\n                      </dl>\r\n                    </td>\r\n                    <td valign=\"top\" className=\"tb-order\">\r\n                      <h3>Tất cả đơn hàng chưa thanh toán</h3>\r\n                      <tr>\r\n                        <td>Mã đơn hàng</td>\r\n                        <td>Ngày đặt</td>\r\n\r\n                        <td>Vận chuyển</td>\r\n                        <td>Thanh toán</td>\r\n                        <td>Tổng tiền</td>\r\n                        <td>Trạng thái</td>\r\n                      </tr>\r\n                      {order.length === 0 ? (\r\n                        <p>Bạn chưa có đơn hàng nào !</p>\r\n                      ) : (\r\n                        order.map((item) => (\r\n                          <tr className=\"odd cancelled_order\">\r\n                            <td>\r\n                              <Link to={`/account/order/${item.id}`}>#HD{item.id}</Link>\r\n                            </td>\r\n                            <td>{item.ThoiGianMua}</td>\r\n                            <td>{item.TenHinhThuc}</td>\r\n                            <td>{item.TenThanhToan}</td>\r\n                            <NumberFormat\r\n                              value={item.Tongtien}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              suffix={\" VNĐ\"}\r\n                              renderText={(value, props) => (\r\n                                <td {...props}>{value}</td>\r\n                              )}\r\n                            />\r\n                            <td>{item.TenTrangThai}</td>\r\n                          </tr>\r\n                        ))\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\SendMailResetPassword\\SendMailResetPassword.js",["337","338","339","340","341","342","343"],"import React, { useState } from \"react\";\r\nimport Footer from \"../../../Component/Footer/Footer\";\r\nimport Header from \"../../../Component/Header/Header\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"../Css/Account.css\";\r\nfunction SendMailResetPassword() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [mail, setMail] = useState(\"\");\r\n  const [process, setProcess] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSendMail = () => {\r\n    var data = {\r\n      Email: mail,\r\n    };\r\n    setOpen(true);\r\n\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/user/forgot-password/\", data)\r\n      .then((response) => {\r\n        setMessage(response.data.message);\r\n        enqueueSnackbar(response.data.message, {\r\n          variant: \"success\",\r\n          autoHideDuration: 3000,\r\n        });\r\n        // setProcess(true);\r\n        setTimeout(() => {\r\n          setRedirect(true);\r\n        }, 3000);\r\n      })\r\n      .catch((e) => {\r\n        setError(e.response.data.message);\r\n        setOpen(false);\r\n        enqueueSnackbar(e.response.data.message, {\r\n          variant: \"error\",\r\n          autoHideDuration: 3000,\r\n        });\r\n      });\r\n  };\r\n  if (redirect) {\r\n    return <Redirect to=\"/Login\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div id=\"layout-page-login\" className=\"container\">\r\n          <div id=\"customer-login\">\r\n            <span className=\"header-contact header-page clearfix\">\r\n              <h4 id=\"title-login\" style={{ marginTop: \"20px\" }}>\r\n                Khôi phục mật khẩu\r\n              </h4>\r\n            </span>\r\n            <div id=\"login\" className=\"userbox\">\r\n              <div className=\"input-group-resetPassword\">\r\n                <TextField\r\n                  id=\"outlined-basic-1\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  label=\"Nhập email\"\r\n                  name=\"email\"\r\n                  onChange={(e)=>setMail(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"action_bottom_resetPassword\">\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"btn_send_mail\"\r\n                  type=\"submit\"\r\n                  onClick={handleSendMail}\r\n                >\r\n                  Gửi mã\r\n                </Button>\r\n                <Backdrop\r\n                  open={open}\r\n                  className=\"backdrop-mui\"\r\n                  onClick={handleClose}\r\n                >\r\n                  <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n              </div>\r\n\r\n              {/* {process ? <LinearProgress /> : \"\"} */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\nexport default SendMailResetPassword;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\ResetPassword\\ResetPassword.js",["344","345","346","347","348","349","350","351","352"],"import React, { useRef, useState } from \"react\";\r\nimport Header from \"../../../Component/Header/Header\";\r\nimport Footer from \"../../../Component/Footer/Footer\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useParams } from \"react-router\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"../Css/Account.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction ResetPassword() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password_confirm, setPassword_confirm] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  let { token } = useParams();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm({});\r\n  const Password = useRef({});\r\n  Password.current = watch(\"password\", \"\");\r\n  const handleResetPassword = (e) => {\r\n    const data = {\r\n      password: e.password,\r\n    };\r\n\r\n    if (password == password_confirm) {\r\n      axios\r\n        .post(\r\n          `http://127.0.0.1:8000/api/user/reset-password-client/${token}`,\r\n          data\r\n        )\r\n        .then((response) => {\r\n          setOpen(true);\r\n          setTimeout(() => {\r\n            setRedirect(true);\r\n          }, 3000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response.data.message);\r\n        });\r\n    } else {\r\n      setError(\"Mật khẩu nhập lại không đúng !\");\r\n    }\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  if (redirect) {\r\n    return <Redirect to=\"/Login\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div id=\"layout-page-login\" className=\"container\">\r\n          <div id=\"customer-login\">\r\n            <span className=\"header-contact header-page clearfix\">\r\n              <h4 id=\"title-login\" style={{ marginTop: \"20px\" }}>\r\n                Khôi phục mật khẩu\r\n              </h4>\r\n            </span>\r\n            <form onSubmit={handleSubmit(handleResetPassword)}>\r\n              <div id=\"login\" className=\"userbox\">\r\n                <div className=\"input-group config_pass\">\r\n                  <TextField\r\n                    id=\"outlined-basic-1\"\r\n                    label=\"Nhập mật khẩu mới\"\r\n                    variant=\"outlined\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    {...register(\"password\", {\r\n                      required: true,\r\n                      pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\r\n                    })}\r\n                  />\r\n                  {errors?.password?.type === \"required\" && (\r\n                    <p>Mật khẩu không được bỏ trống</p>\r\n                  )}\r\n                  {errors?.password?.type === \"pattern\" && (\r\n                    <p>Mật khẩu có 8 ký tự và 1 ký tự hoa</p>\r\n                  )}\r\n                </div>\r\n                <div className=\"input-group config_pass\">\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Nhập lại mật khẩu\"\r\n                    variant=\"outlined\"\r\n                    name=\"password_repeat\"\r\n                    type=\"password\"\r\n                    {...register(\"password_repeat\", {\r\n                      validate: (value) =>\r\n                        value === Password.current || \"Mật khẩu không khớp\",\r\n                    })}\r\n                  />\r\n                  {errors.password_repeat && (\r\n                    <p>{errors.password_repeat.message}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"action_bottom config_pass\">\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"btnResetPass\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Xác nhận\r\n                  </Button>\r\n                </div>\r\n                <Snackbar\r\n                  open={open}\r\n                  autoHideDuration={3000}\r\n                  onClose={handleClose}\r\n                >\r\n                  <Alert onClose={handleClose} severity=\"success\">\r\n                    Chúc mừng bạn đã đổi mật khẩu thành công!\r\n                  </Alert>\r\n                </Snackbar>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\CompleteOrder\\CompleteOrder.js",["353","354","355"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Css/Account.css\";\r\nimport Header from \"../../../Component/Header/Header\";\r\nimport Footer from \"../../../Component/Footer/Footer\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\nfunction CompleteOrder() {\r\n  const [order, setOder] = useState([]);\r\n  useEffect(() => {\r\n    const userLogin = JSON.parse(localStorage.getItem(\"userLogin\") || \"[]\");\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getOrderCompleteByUserId/${userLogin.id}`)\r\n      .then((response) => {\r\n        setOder(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div className=\"container\">\r\n          <div className=\"bg-white\" style={{ padding: \"10px\" }}>\r\n            <div id=\"content\">\r\n              <table id=\"tb-account\" style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td id=\"account-left\">\r\n                      <dl>\r\n                        <dt>Đơn hàng đặt mua</dt>\r\n                        <dd>\r\n                          <Link to=\"/account-order\">ĐH chưa thanh toán</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-ordered\">Đơn hàng đã thanh toán</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-completeOrder\">Đơn hàng đã hoàn thành</Link>\r\n                        </dd>\r\n                        <dd>\r\n                        <Link to=\"/account-orderCanceled\"> Đơn hàng đã hủy</Link>\r\n\r\n                        </dd>\r\n                      </dl> \r\n                      <dl>\r\n                        <dt>Thông tin tài khoản</dt>\r\n                        <dd>\r\n                          <Link to=\"/updateUser\">\r\n                            Thông tin cá nhân\r\n                          </Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-order\">Thay đổi mật khẩu</Link>\r\n                        </dd>\r\n                      </dl>\r\n                    </td>\r\n                    <td valign=\"top\" className=\"tb-order\">\r\n                      <h3>Danh sách tất cả đơn hàng hoàn thành</h3>\r\n                      <tr>\r\n                        <td>Mã đơn hàng</td>\r\n                        <td>Ngày đặt</td>\r\n                        <td>Vận chuyển</td>\r\n                        <td>Thanh toán</td>\r\n                        <td>Tổng tiền</td>\r\n                        <td>Trạng thái</td>\r\n                      </tr>\r\n                      {order.length === 0 ? (\r\n                        <p>Bạn chưa có đơn hàng nào !</p>\r\n                      ) : (\r\n                        order.map((item) => (\r\n                          <tr className=\"odd cancelled_order\">\r\n                            <td>\r\n                              <Link to={`/account/order/${item.id}`}>#HD{item.id}</Link>\r\n                            </td>\r\n                            <td>{item.ThoiGianMua}</td>\r\n                            <td>{item.TenHinhThuc}</td>\r\n                            <td>{item.TenThanhToan}</td>\r\n                            <NumberFormat\r\n                              value={item.Tongtien}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              suffix={\" VNĐ\"}\r\n                              renderText={(value, props) => (\r\n                                <td {...props}>{value}</td>\r\n                              )}\r\n                            />\r\n                            <td>{item.TenTrangThai}</td>\r\n                          </tr>\r\n                        ))\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompleteOrder;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\OrderCanceled\\OrderCanceled.js",["356","357","358"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Css/Account.css\";\r\nimport Header from \"../../../Component/Header/Header\";\r\nimport Footer from \"../../../Component/Footer/Footer\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\nfunction OrderCancel() {\r\n  const [order, setOder] = useState([]);\r\n  useEffect(() => {\r\n    const userLogin = JSON.parse(localStorage.getItem(\"userLogin\") || \"[]\");\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getOrderCanceled/${userLogin.id}`)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setOder(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div className=\"container\">\r\n          <div className=\"bg-white\" style={{ padding: \"10px\" }}>\r\n            <div id=\"content\">\r\n              <table id=\"tb-account\" style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td id=\"account-left\">\r\n                      <dl>\r\n                        <dt>Đơn hàng đặt mua</dt>\r\n                        <dd>\r\n                          <Link to=\"/account-order\">ĐH chưa thanh toán</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-ordered\"> Đơn hàng đã thanh toán</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-completeOrder\"> Đơn hàng đã hoàn thành</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-orderCanceled\"> Đơn hàng đã hủy</Link>\r\n                        </dd>\r\n                      </dl>\r\n                      <dl>\r\n                        <dt>Thông tin tài khoản</dt>\r\n                        <dd>\r\n                          <Link to=\"/updateUser\">\r\n                            Thông tin cá nhân\r\n                          </Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/updatePassword\">Thay đổi mật khẩu</Link>\r\n                        </dd>\r\n                      </dl>\r\n                    </td>\r\n                    <td valign=\"top\" className=\"tb-order\">\r\n                      <h3>Tất cả đơn hàng đã hủy</h3>\r\n                      <tr>\r\n                        <td>Mã đơn hàng</td>\r\n                        <td>Ngày đặt</td>\r\n\r\n                        <td>Vận chuyển</td>\r\n                        <td>Thanh toán</td>\r\n                        <td>Tổng tiền</td>\r\n                        <td>Trạng thái</td>\r\n                      </tr>\r\n                      {order.length === 0 ? (\r\n                        <p>Bạn chưa có đơn hàng nào !</p>\r\n                      ) : (\r\n                        order.map((item) => (\r\n                          <tr className=\"odd cancelled_order\">\r\n                            <td>\r\n                              <Link to={`/account/order/${item.id}`}>#HD{item.id}</Link>\r\n                            </td>\r\n                            <td>{item.ThoiGianMua}</td>\r\n                            <td>{item.TenHinhThuc}</td>\r\n                            <td>{item.TenThanhToan}</td>\r\n                            <NumberFormat\r\n                              value={item.Tongtien}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              suffix={\" VNĐ\"}\r\n                              renderText={(value, props) => (\r\n                                <td {...props}>{value}</td>\r\n                              )}\r\n                            />\r\n                            <td>{item.TenTrangThai}</td>\r\n                          </tr>\r\n                        ))\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderCancel;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\UpdatePassword\\UpdatePassword.js",["359","360","361","362","363","364","365","366","367","368","369","370"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../Css/Account.css\";\r\nimport Header from \"../../../Component/Header/Header\";\r\nimport Footer from \"../../../Component/Footer/Footer\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst userLogin = JSON.parse(localStorage.getItem(\"userLogin\") || \"[]\");\r\nfunction UpdatePassword() {\r\n  const [passwordOld, setPasswordOld] = useState(\"\");\r\n  const [rePassword, setRepassword] = useState(\"\");\r\n  const [newPassword, setNewpassword] = useState(\"\");\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm({});\r\n  const Password = useRef({});\r\n  Password.current = watch(\"newPassword\", \"\");\r\n  const handleUpdatePassword = (e) => {\r\n    const data = {\r\n      oldPassword: e.old_password,\r\n      password: e.newPassword,\r\n    };\r\n    axios\r\n      .post(`http://127.0.0.1:8000/api/updatePassword/${userLogin.id}`, data)\r\n      .then((response) => {\r\n        setNotification(response.data.message);\r\n        console.log(response.data);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.response.data.message);\r\n        console.log(err.response.data.message);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div className=\"container\">\r\n          <div className=\"bg-white\" style={{ padding: \"10px\" }}>\r\n            <div id=\"content\">\r\n              <table id=\"tb-account\" style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td id=\"account-left\">\r\n                      <dl>\r\n                        <dt>Đơn hàng đặt mua</dt>\r\n                        <dd>\r\n                          <Link to=\"/account-order\">ĐH chưa thanh toán</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-ordered\">\r\n                            Đơn hàng đã thanh toán\r\n                          </Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-completeOrder\">\r\n                            Đơn hàng đã hoàn thành\r\n                          </Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-orderCanceled\">\r\n                            {\" \"}\r\n                            Đơn hàng đã hủy\r\n                          </Link>\r\n                        </dd>\r\n                      </dl>\r\n                      <dl>\r\n                        <dt>Thông tin tài khoản</dt>\r\n                        <dd>\r\n                          <Link to=\"/updateUser\">Thông tin cá nhân</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/updatePassword\">Thay đổi mật khẩu</Link>\r\n                        </dd>\r\n                      </dl>\r\n                    </td>\r\n                    <td valign=\"top\" className=\"tb-order\">\r\n                      <h3>Thay đổi mật khẩu</h3>\r\n                      <p style={{ color: \"#1f4cb1\" }}>\r\n                        {notification ? <b>Thông báo: {notification}</b> : \"\"}\r\n                      </p>\r\n                      <p style={{ color: \"red\" }}>\r\n                        {error ? <b>Thông báo: {error}</b> : \"\"}\r\n                      </p>\r\n                      <div className=\"input-group-updatePassword\">\r\n                        <TextField\r\n                          id=\"outlined-basic-1\"\r\n                          variant=\"outlined\"\r\n                          name=\"old_password\"\r\n                          type=\"password\"\r\n                          label=\"Nhập mật khẩu cũ\"\r\n                          {...register(\"old_password\", { required: true})}\r\n                        />\r\n                          {errors?.old_password?.type === \"required\" && (\r\n                          <p>Mật khẩu không được bỏ trống</p>)}\r\n                      </div>\r\n                      <div className=\"input-group-updatePassword\">\r\n                        <TextField\r\n                          id=\"outlined-basic-2\"\r\n                          variant=\"outlined\"\r\n                          name=\"newPassword\"\r\n                          type=\"password\"\r\n                          label=\"Nhập mật khẩu mới\"\r\n                          {...register(\"newPassword\", { required: true, pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/})}\r\n                        />\r\n                         {errors?.newPassword?.type === \"required\" && (\r\n                           <p>Mật khẩu không được bỏ trống</p>)}\r\n                           {errors?.newPassword?.type === \"pattern\" && (\r\n                           <p>Mật khẩu có 8 ký tự và 1 ký tự hoa</p>)}\r\n                      </div>\r\n                      <div className=\"input-group-updatePassword\">\r\n                        <TextField\r\n                          id=\"outlined-basic-3\"\r\n                          variant=\"outlined\"\r\n                          name=\"re_password\"\r\n                          type=\"password\"\r\n                          label=\"Nhập lại mật khẩu mới\"\r\n                          {...register(\"re_password\", { validate: value => value === Password.current || \"Mật khẩu không khớp\"\r\n                        })}\r\n                        />\r\n                        {errors.re_password && <p>{errors.re_password .message}</p>}\r\n\r\n                      </div>\r\n\r\n                      <div>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          className=\"btn-updateUser\"\r\n                          type=\"submit\"\r\n                          onClick={handleSubmit(handleUpdatePassword)}\r\n                        >\r\n                          Thay đổi\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdatePassword;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\UpdateUser\\UpdateUser.js",["371","372","373","374","375"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Css/Account.css\";\r\nimport Header from \"../../../Component/Header/Header\";\r\nimport Footer from \"../../../Component/Footer/Footer\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nconst userLogin = JSON.parse(localStorage.getItem(\"userLogin\") || \"[]\");\r\nfunction UpdateUser() {\r\n  const [name, setName] = useState(userLogin.TenNguoidung);\r\n  const [address, setAddress] = useState(userLogin.DiaChi);\r\n  const [phone, setPhone] = useState(userLogin.SDT);\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [error_Phone, setErrPhone] = useState(false);\r\n  const [error_Address, setErrAddress] = useState(false);\r\n\r\n  const handUpdate = () => {\r\n    const data = {\r\n      name: name,\r\n      DiaChi: address,\r\n      SDT: phone,\r\n    };\r\n    axios\r\n      .post(`http://127.0.0.1:8000/api/updateUser/${userLogin.id}`, data)\r\n      .then((response) => {\r\n        // setErrPhone(false);\r\n        // setAddress(false);     \r\n        setNotification(response.data.message);\r\n        localStorage.setItem(\"userLogin\", JSON.stringify(response.data.user));\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 1500);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        if(err.response.data.SDT !== undefined) {\r\n          setErrPhone(true);\r\n        }\r\n        if(err.response.data.DiaChi != undefined)\r\n        {\r\n          setErrAddress(true);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        <div className=\"container\">\r\n          <div className=\"bg-white\" style={{ padding: \"10px\" }}>\r\n            <div id=\"content\">\r\n              <table id=\"tb-account\" style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td id=\"account-left\">\r\n                      <dl>\r\n                        <dt>Đơn hàng đặt mua</dt>\r\n                        <dd>\r\n                          <Link to=\"/account-order\">ĐH chưa thanh toán</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-ordered\">\r\n                            Đơn hàng đã thanh toán\r\n                          </Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-completeOrder\">\r\n                            Đơn hàng đã hoàn thành\r\n                          </Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/account-orderCanceled\">\r\n                            {\" \"}\r\n                            Đơn hàng đã hủy\r\n                          </Link>\r\n                        </dd>\r\n                      </dl>\r\n                      <dl>\r\n                        <dt>Thông tin tài khoản</dt>\r\n                        <dd>\r\n                          <Link to=\"/updateUser\">Thông tin cá nhân</Link>\r\n                        </dd>\r\n                        <dd>\r\n                          <Link to=\"/updatePassword\">Thay đổi mật khẩu</Link>\r\n                        </dd>\r\n                      </dl>\r\n                    </td>\r\n                    <td valign=\"top\" className=\"tb-order\">\r\n                      <h3>Thông tin tài khoản</h3>\r\n                      <p style={{ color: \"#1f4cb1\" }}>\r\n                        {notification ? <b>Thông báo: {notification}</b> : \"\"}\r\n                      </p>\r\n                      <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                          <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n\r\n                        <TextField\r\n                          id=\"outlined-basic-1\"\r\n                          variant=\"outlined\"\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          disabled\r\n                          value={userLogin.Email}\r\n                        />\r\n                      </div>\r\n                      <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                          <i className=\"fas fa-user-edit\"></i>\r\n                        </span>\r\n\r\n                        <TextField\r\n                          required\r\n                          id=\"outlined-basic-2\"\r\n                          variant=\"outlined\"\r\n                          name=\"name\"\r\n                          type=\"text\"\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                          <i className=\"fas fa-map-marker-alt\"></i>\r\n                        </span>\r\n                        {error_Address ? (\r\n                          <TextField\r\n                            error\r\n                            label=\"Vui lòng nhập địa chỉ cụ thể\"\r\n                            id=\"outlined-basic-3\"\r\n                            variant=\"outlined\"\r\n                            name=\"address\"\r\n                            type=\"text\"\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                          />\r\n                        ) : (\r\n                          <TextField\r\n                            id=\"outlined-basic-3\"\r\n                            variant=\"outlined\"\r\n                            name=\"address\"\r\n                            type=\"text\"\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\">\r\n                          <i className=\"fas fa-phone\"></i>\r\n                        </span>\r\n                        {error_Phone ? <TextField\r\n                          error\r\n                          label=\"Vui lòng nhập số điện thoại cụ thể\"\r\n                          id=\"outlined-basic-4\"\r\n                          variant=\"outlined\"\r\n                          name=\"phone\"\r\n                          type=\"text\"\r\n                          value={phone}\r\n                          onChange={(e) => setPhone(e.target.value)}\r\n                        /> :\r\n                        <TextField\r\n                          id=\"outlined-basic-4\"\r\n                          variant=\"outlined\"\r\n                          name=\"phone\"\r\n                          type=\"text\"\r\n                          value={phone}\r\n                          onChange={(e) => setPhone(e.target.value)}\r\n                        />\r\n                        }\r\n                        \r\n                      </div>\r\n                      <div>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          className=\"btn-updateUser\"\r\n                          onClick={handUpdate}\r\n                        >\r\n                          Thay đổi\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateUser;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Pages\\Account\\ActiveUser\\ActiveUser.js",["376","377","378","379","380","381","382"],"import React, { useState } from \"react\";\r\nimport Header from \"../../../Component/Header/Header\";\r\nimport Footer from \"../../../Component/Footer/Footer\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\nimport {useSnackbar} from 'notistack';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\nfunction ActiveUser() {\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleResetPassword = () => {\r\n    const data = {\r\n    Email:Email,\r\n    };\r\n\r\n      axios\r\n        .post(\r\n          `http://127.0.0.1:8000/reActiveUser`,\r\n          data\r\n        )\r\n        .then((response) => {\r\n          setOpen(true);\r\n          setTimeout(() => {\r\n             setRedirect(true);\r\n          },3000)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n   \r\n  };\r\n  \r\n  if(redirect)\r\n  {\r\n    return <Redirect to=\"/Login\" />\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"noindex\">\r\n        {error ? (\r\n          <Alert severity=\"error\" style={{ textAlign: \"center\" }}>\r\n            {error}\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div id=\"layout-page-login\" className=\"container\">\r\n          <div id=\"customer-login\">\r\n            <span className=\"header-contact header-page clearfix\">\r\n              <h2 id=\"title-login\" style={{ marginTop: \"20px\" }}>\r\n                Kích hoạt tài khoản\r\n              </h2>\r\n            </span>\r\n            <div id=\"login\" className=\"userbox\">\r\n              <div className=\"input-group\">\r\n                <span className=\"input-group-addon\">\r\n                  <i className=\"fas fa-key\"></i>\r\n                </span>\r\n\r\n                <TextField\r\n                  id=\"outlined-basic-1\"\r\n                  label=\"Nhập Email bản của bạn\"\r\n                  variant=\"outlined\"\r\n                  name=\"password\"\r\n                  type=\"text\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n             \r\n              <div className=\"action_bottom\">\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"btnLogin\"\r\n                  type=\"submit\"\r\n                  onClick={handleResetPassword}\r\n                >\r\n                  Xác nhận\r\n                </Button>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ActiveUser;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Footer\\Footer.js",[],"C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Pagination\\Paginate.js",["383"],"import React, { useState } from 'react';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nfunction Paginate(props) {\r\n    const {handleChangePage,total}=props;\r\n    return (\r\n        <>\r\n            <Pagination count={total} \r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                hideNextButton={true}\r\n                hidePrevButton={true}\r\n                defaultPage={1}\r\n                onChange={(event,value)=>handleChangePage(value)}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Paginate;","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Header\\Header.js",["384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411"],"import React, { useState, useEffect } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport logo from \"../../assets/logo-homepage.png\";\r\nimport { Link,Redirect,useLocation } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst cartFromLocalStorage = JSON.parse(\r\n  localStorage.getItem(\"cartItems\") || \"[]\"\r\n);\r\n\r\nfunction Header() {\r\n  const [display, setDisplay] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [redirect, setRedirect]=useState(false);\r\n  const [userLoged,setUserLoged]=useState({});\r\n  useEffect(() => {\r\n    const userLogin = JSON.parse(localStorage.getItem(\"userLogin\") || \"[]\");\r\n      setUserLoged(userLogin);\r\n  },[]);\r\n  const handleLogout = () => {\r\n    window.location.reload();\r\n    localStorage.removeItem(\"userLogin\");\r\n    localStorage.removeItem(\"accessToken\");\r\n  };\r\n \r\n  const handleSearch = (e) =>{\r\n    e.preventDefault();\r\n      setRedirect(true);\r\n  } \r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://127.0.0.1:8000/api/getAllProduct\").then((response) => {\r\n      setOptions(response.data);\r\n    });\r\n  }, []);\r\n  const LinkImage = \"http://127.0.0.1:8000/images/\";\r\n  if(redirect)\r\n  {\r\n    return <Redirect to={`/search?kq=${search}`} />\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"fix-xxx\">\r\n        <div className=\"gearvn-top-banner-block\">\r\n          <Link to=\"/\">\r\n            <div className=\"gearvn-top-banner oktr\"></div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"headerxxx\">\r\n          <div className=\"container gearvn-content-section\">\r\n            <div className=\"row\">\r\n              <div className=\"left_header\" style={{ zIndex: 997 }}>\r\n                <Link to=\"/\">\r\n                  <img src={logo} title=\"Logo\" alt=\"Vu Tien Store\" />\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"right_header\">\r\n                <div className=\" pd5 fl1 \">\r\n                  <div id=\"search\">\r\n                    <div className=\"search\">\r\n                      <form \r\n                        id=\"searchbox\"\r\n                        className=\"popup-content ultimate-search\"\r\n                        role=\"search\"\r\n                        onSubmit={handleSearch}\r\n                      >\r\n                        <input\r\n                          value={search}\r\n                          name=\"q\"\r\n                          type=\"text\"\r\n                          placeholder=\"Nhập mã hoặc tên sản phẩm.....\"\r\n                          className=\"inputbox search-query\"\r\n                          onChange={(e) =>setSearch(e.target.value)}\r\n                          onClick={()=>setDisplay(true)}\r\n                          autoComplete=\"off\"\r\n                        />\r\n\r\n                        <button\r\n                          className=\"btn-search btn btn-link\"\r\n                          type=\"submit\"\r\n                          // onClick={handleSearch}\r\n                        >\r\n                          <span\r\n                            className=\"fa fa-search\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        </button> \r\n                        {display && search &&\r\n                        <div className=\"smart-search-wrapper search-wrapper\">\r\n                          {options.filter(({ TenSanPham }) => TenSanPham.toLowerCase().includes(search.toLowerCase()))\r\n                          .map((v, i) => (\r\n                            <div className=\"search-results\" key={i}>\r\n                              <Link to={`/ProductDetail/${v.id}`} className=\"thumbs\" onClick={() =>setDisplay(false)}>\r\n                                <img src={LinkImage + v.AnhDaiDien}  alt={v.TenSanPham}/>\r\n                              </Link>\r\n                              <Link to={`/ProductDetail/${v.id}`} onClick={() =>setDisplay(false)}>\r\n                               {v.TenSanPham}\r\n                                <NumberFormat\r\n                                value={v.GiaKM}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" VNĐ\"}\r\n                                renderText={(value, props) => (\r\n                                  <span className=\"price-search\" {...props}>{value}</span>\r\n                                )}\r\n                              />\r\n                              </Link>\r\n                            </div>\r\n                          ))}\r\n                        </div>}\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\" pdl0 fl1 \">\r\n                  <div className=\"gearvn-right-top-block\">\r\n                    {userLoged.TenNguoidung !==undefined ? (\r\n                      <div>\r\n                        <Link\r\n                          to=\"/account-order\"\r\n                          className=\"gearvn-header-top-item\"\r\n                        >\r\n                          <img src={userLoged.Anh != null? userLoged.Anh: \"//theme.hstatic.net/1000026716/1000440777/14/ak3.png?v=19349\"} alt=\"avt-user\" className=\"avt__user\" />\r\n                          <div className=\"header-right-description\">\r\n                            <div className=\"gearvn-text\">\r\n                              {userLoged.TenNguoidung}\r\n                            </div>\r\n                          </div>\r\n                        </Link>\r\n                        <Link to=\"/\"\r\n                          className=\"gearvn-header-top-item\"\r\n                          onClick={handleLogout}\r\n                        >\r\n                          <img src=\"//theme.hstatic.net/1000026716/1000440777/14/ak2.png?v=19762\" />\r\n                          <div className=\"header-right-description\">\r\n                            <div className=\"gearvn-text\">Đăng xuất</div>\r\n                          </div>\r\n                        </Link>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <Link to=\"/Register\" className=\"gearvn-header-top-item\">\r\n                          <img src=\"//theme.hstatic.net/1000026716/1000440777/14/ak1.png?v=19349\" />\r\n                          <div className=\"header-right-description\">\r\n                            <div className=\"gearvn-text\">Đăng ký</div>\r\n                          </div>\r\n                        </Link>\r\n\r\n                        <Link to=\"/Login\" className=\"gearvn-header-top-item\">\r\n                          <img src=\"//theme.hstatic.net/1000026716/1000440777/14/ak3.png?v=19349\" />\r\n                          <div className=\"header-right-description\">\r\n                            <div className=\"gearvn-text\">Đăng nhập</div>\r\n                          </div>\r\n                        </Link>\r\n                      </div>\r\n                    )}\r\n                    <div>\r\n                      <Link className=\"gearvn-header-top-item\" to=\"/Promotion-information\">\r\n                        <img src=\"//theme.hstatic.net/1000026716/1000440777/14/ak4.png?v=19349\" />\r\n                        <div className=\"header-right-description\">\r\n                          <div className=\"gearvn-text\">Khuyến mãi</div>\r\n                        </div>\r\n                        </Link>\r\n                      <Link to=\"/cart\" className=\"gearvn-header-top-item rela\">\r\n                        <div>\r\n                          <Badge variant=\"danger\">\r\n                            {cartFromLocalStorage.length}\r\n                          </Badge>\r\n                        </div>\r\n                        <img src=\"//theme.hstatic.net/1000026716/1000440777/14/ak5.png?v=19349\" />\r\n                        <div className=\"header-right-description\">\r\n                          <div className=\"gearvn-text\">Giỏ hàng</div>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"gearvn-info-top\">\r\n                  <ul>\r\n                    <li>\r\n                      <span>\r\n                        <a href=\"#\" style={{ color: \"#ea1c00\" }}>\r\n                          Hệ thống Showroom tại TP. Hà Nội - Thanh Hóa\r\n                        </a>\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      <img src=\"//theme.hstatic.net/1000026716/1000440777/14/hotcall.svg?v=19349\" />\r\n                      <span>\r\n                        <a href=\"#\" style={{ color: \"#ea1c00\" }}>\r\n                          Tổng đài\r\n                        </a>\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      <img src=\"//theme.hstatic.net/1000026716/1000440777/14/youtube.png?v=19349\" />\r\n                      <span>\r\n                        <a href=\"#\" style={{ color: \"#ea1c00\" }}>\r\n                          Video\r\n                        </a>\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      <img src=\"//theme.hstatic.net/1000026716/1000440777/14/gNewsFavIco.png?v=19349\" />\r\n                      <span>\r\n                        <Link to=\"/buildPC\" style={{ color: \"#ea1c00\" }}>\r\n                          Xây dựng cấu hình\r\n                        </Link>\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      <img src=\"//theme.hstatic.net/1000026716/1000440777/14/logo_hr.png?v=19349\" />\r\n                      <span>\r\n                        <a href=\"#\" style={{ color: \"#ea1c00\" }}>\r\n                          Liên hệ\r\n                        </a>\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"gearvn-content-section padding-10-0 hidden-xs hidden-sm container\">\r\n          <div className=\"content-flex top-header-bar\">\r\n          <Link to=\"/Product-Portffolio\">\r\n              <span className=\"style-nav-fix hidden\">\r\n                <i className=\"fa fa-bars\"></i>\r\n                Danh mục sản phẩm\r\n              </span>\r\n            </Link>\r\n            <div className=\"gearvn-header-navigation-right content-flex\">\r\n              <a className=\"gearvn-header-navigation-item recently-product-item header-navigation-recently-products \">\r\n                <div className=\"xxxkt\">\r\n                  <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xk1s.png?v=19349\" />\r\n\r\n                  <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xk1s.png?v=19349\" />\r\n                </div>\r\n                Tổng hợp Khuyến mãi\r\n              </a>\r\n              \r\n              <Link to=\"/PaymentGuide\" className=\"gearvn-header-navigation-item recently-product-item header-navigation-recently-products \">\r\n                <div className=\"xxxkt\">\r\n                    <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xk2.png?v=19349\" />\r\n\r\n                    <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xk2.png?v=19349\" />\r\n                  </div>\r\n                Hướng dẫn thanh toán\r\n              </Link>\r\n              <a className=\"gearvn-header-navigation-item recently-product-item header-navigation-recently-products \">\r\n                <div className=\"xxxkt\">\r\n                  <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xk2.png?v=19349\" />\r\n\r\n                  <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xk2.png?v=19349\" />\r\n                </div>\r\n                Hướng dẫn trả góp\r\n              </a>\r\n              <a className=\"gearvn-header-navigation-item recently-product-item header-navigation-recently-products \">\r\n                <div className=\"xxxkt\">\r\n                  <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xk4.png?v=19349\" />\r\n\r\n                  <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xk4.png?v=19349\" />\r\n                </div>\r\n                Chính sách bảo hành\r\n              </a>\r\n              <a className=\"gearvn-header-navigation-item recently-product-item header-navigation-recently-products \">\r\n                <div className=\"xxxkt\">\r\n                  <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xk5.png?v=19349\" />\r\n\r\n                  <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xk5.png?v=19349\" />\r\n                </div>\r\n                Chính Sách Vận Chuyển\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(Header) ;","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Comment\\Comment.js",["412","413","414","415","416","417","418"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Avatar,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nfunction Comment(props) {\r\n  const { comment } = props;\r\n  console.log(comment.user);\r\n  const imgLink =\r\n    \"https://images.pexels.com/photos/1681010/pexels-photo-1681010.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\";\r\n  return (\r\n    <>\r\n      {comment.map((item, index) => (\r\n        <Paper style={{ padding: \"40px 20px\", margin: \"30px 0\" }} key={index}>\r\n          <Grid container wrap=\"nowrap\" spacing={2}>\r\n            <Grid item>\r\n              <Avatar alt=\"Remy Sharp\" src={item.user.Anh} />\r\n            </Grid>\r\n            <Grid justifyContent=\"left\" item xs zeroMinWidth>\r\n             \r\n              <h4 style={{ margin: 0, textAlign: \"left\" }}>{item.user.TenNguoidung}</h4>\r\n              <p style={{ textAlign: \"left\" }}>{item.content}</p>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      ))}\r\n\r\n      {/* <Divider variant=\"fullWidth\" style={{ margin: \"30px 0\" }} /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Paypal\\Paypal.js",["419"],"import React, { useEffect, useRef } from 'react';\r\n\r\nfunction Paypal(props) { \r\n    const paypal=useRef();\r\n    const {Moneyconversion}= props;\r\n    const money=Moneyconversion;\r\n    useEffect(() => {\r\n        window.paypal.Buttons({\r\n                createOrder:(data,actions,err)=>{\r\n                    return actions.order.create({\r\n                        intent:\"CAPTURE\",\r\n                        purchase_units:[\r\n                            {\r\n                                description: \"Payment Paypal\",\r\n                                amount :{\r\n                                    currency_code:\"USD\",\r\n                                    value:money,\r\n                                }\r\n                            }\r\n                        ]\r\n                    })\r\n                },\r\n                onApprove: async (data,actions) =>{\r\n                        const order=await actions.order.capture();\r\n                        console.log(\"Successful order:\",order);\r\n                        window.location.replace('http://localhost:3000/resultOrder?message=1');\r\n                },\r\n                onError:(err)=>{\r\n                    console.log(err);\r\n                },\r\n                onCancel : (data)=>{\r\n                    window.location.replace('http://localhost:3000/resultOrder?message=2');\r\n                    console.log(\"Cancel order!\");\r\n                }\r\n        }).render(paypal.current)\r\n    },[])\r\n    return (\r\n        <div>\r\n            <div ref={paypal}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paypal;","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Body\\Body.js",[],"C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\ModalNews\\ModalNews.js",["420"],"import { React, useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"./ModalNews.css\";\r\nfunction ModalNews() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setShow(true);\r\n    }, 2000);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose} className=\"modal-news\">\r\n        <p className=\"close-modal\" onClick={handleClose}>\r\n          [x]\r\n        </p>\r\n        <img\r\n          src=\"https://www.anphatpc.com.vn/media/banner/popup_back2skul-popup-2-min.png\"\r\n          alt=\"modal__image\"\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalNews;\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Banner\\Banner.js",["421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438"],"import React, { useState } from \"react\";\r\nimport \"./Banner.css\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n function Banner() {\r\n  const [typeProduct, setTypeProduct] = useState([]);\r\n  const [slides,setSlides]= useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/tree-categories\")\r\n      .then((response) => {\r\n        setTypeProduct(response.data);\r\n      });\r\n      axios\r\n      .get(\"http://127.0.0.1:8000/api/get-image-slides\")\r\n      .then((response) => {\r\n        setSlides(response.data.images);\r\n      });\r\n  }, []);\r\n  const linkImage = \"http://127.0.0.1:8000/slides/\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gearvn-header-navigation \">\r\n        <div className=\"row gearvn-content-section gearvn-header-navigation-content padding-10-0 container\">\r\n          <div className=\"gearvn-header-menu\">\r\n            <div className=\"cat-menu gearvn-cat-menu\">\r\n              <nav id=\"megamenu-nav\" className=\"megamenu-nav\">\r\n                <ol className=\"megamenu-nav-main\">\r\n                 {typeProduct.map((item, index)=>(\r\n                       <li className=\"cat-menu-item \" key={index}>\r\n                       <Link className=\"gearvn-cat-menu-item\" to={`/collections/${item.id}`}>\r\n                         <div className=\"gearvn-cat-menu-icon\" dangerouslySetInnerHTML={{__html:item.icon}}>\r\n                         </div>\r\n                         <span className=\"gearvn-cat-menu-name\">{item.TenLoai}</span>\r\n                       </Link>\r\n                       {/* <div className=\"megamenu absolute-center level0 xlab_grid_container\" style={{display:\"block\"}}>\r\n                          <div className=\"column xlab_column_5_5\">\r\n                              <div className=\"sub-cat-item\">\r\n                                  {item.childs.map((sub_item,index)=>(\r\n                                  <a className=\"sub-cat-item-name\">{sub_item.TenLoai}</a>\r\n                                  ))}\r\n                                  <a className=\"sub-cat-item-filter\">Asus</a>\r\n\r\n                              </div>\r\n                          </div>\r\n                       </div> */}\r\n                     </li>\r\n                 ))}\r\n                </ol>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n          <div className=\"gearvn-header-navigation-block\">\r\n            <div className=\"gearvn-header-banner\">\r\n              <div className=\"left\">\r\n                <div className=\"slider-wrap\">\r\n                  <Carousel>\r\n                    {slides.map((slide, index) =>(\r\n                      <Carousel.Item key={index}>\r\n                        <img\r\n                          className=\"d-block w-100\"\r\n                          src={linkImage+slide.image_name}\r\n                          alt={slide.image_name}\r\n                        />\r\n                    </Carousel.Item>\r\n                    ))}\r\n                  </Carousel>\r\n                </div>\r\n                <div className=\"sub-banner-wrap i100\">\r\n                  <a className=\"sub-item\" href=\"#\">\r\n                    <img src=\"//theme.hstatic.net/1000026716/1000440777/14/solid4.jpg?v=19359\" />\r\n                  </a>\r\n                  <a className=\"sub-item\" href=\"#\">\r\n                    <img src=\"//theme.hstatic.net/1000026716/1000440777/14/solid5.jpg?v=19359\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"right i100\">\r\n                <div className=\"sub-item-right\">\r\n                  <a className=\"sub-item\" href=\"#\">\r\n                    <img src=\"//theme.hstatic.net/1000026716/1000440777/14/solid1.jpg?v=19359\" />\r\n                  </a>\r\n                  <a className=\"sub-item\" href=\"#\">\r\n                    <img src=\"//theme.hstatic.net/1000026716/1000440777/14/solid2.jpg?v=19359\" />\r\n                  </a>\r\n                  <a className=\"sub-item\" href=\"#\">\r\n                    <img src=\"//theme.hstatic.net/1000026716/1000440777/14/solid3.jpg?v=19359\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\" gearvn-content-section i100 mb-10\" id=\"xxx-banner\">\r\n        <div className=\"row row-margin-small\">\r\n          <div className=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-3 mb-10 col-padding-small\">\r\n            <div className=\"border-rus\">\r\n              <a href=\"#\">\r\n                <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xxxbanner1.jpg?v=19359\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-3 mb-10 col-padding-small\">\r\n            <div className=\"border-rus\">\r\n              <a href=\"#\">\r\n                <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xxxbanner2.jpg?v=19359\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-3 mb-10 col-padding-small\">\r\n            <div className=\"border-rus\">\r\n              <a href=\"#\">\r\n                <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xxxbanner3.jpg?v=19359\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-3 mb-10 col-padding-small\">\r\n            <div className=\"border-rus\">\r\n              <a href=\"#\">\r\n                <img src=\"//theme.hstatic.net/1000026716/1000440777/14/xxxbanner4.jpg?v=19359\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(Banner) ;","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Product\\ProductsAccordingToCriteria\\ProductsAccordingToCriteria.js",["439","440","441","442","443","444"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"../../Body/Body.css\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ProductsAccordingToCriteria(props) {\r\n  const { title, id } = props;\r\n  const [product, setProduct] = useState([]);\r\n  \r\n\r\n  const linkImage = \"http://127.0.0.1:8000/images/\";\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/getAccessoriesByTypeProductId/${id}`)\r\n      .then((response) => {\r\n        setProduct(response.data.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div id=\"featured-product\">\r\n        <div style={{ position: \"relative\" }}>\r\n          <h2 className=\"new-product-title\">{title}</h2>\r\n          <Link className=\"gearvn-new-products-hot-view-all\" to={`collections/${id}`}>\r\n            Xem tất cả\r\n            <i className=\"fa fa-chevron-right\"></i>\r\n          </Link>\r\n        </div>\r\n        <div className=\"loop-pro\">\r\n          <div className=\"module-products row\">\r\n            {product.map((item, index) => (\r\n              <div\r\n                className=\"col-sm-4 col-xs-12 padding-none col-fix20\"\r\n                key={index}\r\n              >\r\n                <div className=\"product-row\">\r\n                  <div className=\"product-row-img\">\r\n                    <Link to={`/productDetail/${item.id}`}>\r\n                      <img\r\n                        src={linkImage + item.AnhDaiDien}\r\n                        className=\"product-row-thumbnail\"\r\n                      />\r\n                    </Link>\r\n                    <div className=\"product-row-price-hover\">\r\n                      <div className=\"product-row-note pull-left\">\r\n                        Xem chi tiết\r\n                      </div>\r\n\r\n                      <Link\r\n                        to={`/productDetail/${item.id}`}\r\n                        className=\"product-row-btnbuy pull-right\"\r\n                      >\r\n                        Đặt hàng\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <h2 className=\"product-row-name\">{item.TenSanPham}</h2>\r\n                  <div className=\"product-row-info\">\r\n                    <div className=\"product-row-price pull-left\">\r\n                      <NumberFormat\r\n                        value={item.GiaCu}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        suffix={\" VNĐ\"}\r\n                        renderText={(value, props) => (\r\n                          <del {...props}>{value} </del>\r\n                        )}\r\n                      />\r\n                      <br />\r\n                      <span className=\"product-row-sale\">\r\n                        <NumberFormat\r\n                          value={item.GiaKM}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          suffix={\" VNĐ\"}\r\n                          renderText={(value, props) => (\r\n                            <div {...props}>{value}</div>\r\n                          )}\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"new-product-percent\">\r\n                      {item.SoLuong == 0 ? \"Hết hàng\" : \"Còn hàng\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\DoAn\\src\\NBSTORE\\Front-end\\nbstore\\src\\Component\\Product\\ProductBestSellingByBrand\\ProductBestSellingByBrand.js",["445","446","447","448"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"../../Body/Body.css\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nexport default function ProductBestSellingByBrand(props) {\r\n  const { products } = props;\r\n  const linkImage = \"http://127.0.0.1:8000/images/\";\r\n  return (\r\n    <>\r\n    <div id=\"featured-product\">\r\n      <div style={{ position: \"relative\" }}>\r\n        <h2 className=\"new-product-title\">Deal Hot Trong Tháng</h2>\r\n        <Link className=\"gearvn-new-products-hot-view-all\" to=\"#\">\r\n          Xem tất cả\r\n          <i className=\"fa fa-chevron-right\"></i>\r\n        </Link>\r\n      </div>\r\n      \r\n      <div className=\"loop-pro\">\r\n        <div className=\"module-products row\">\r\n          {products.map((item,index) => (\r\n            <div className=\"col-sm-4 col-xs-12 padding-none col-fix20\" key={index}>\r\n              <div className=\"product-row\">\r\n                <div className=\"product-row-img\">\r\n                \r\n                  <Link to={`/ProductDetail/${item.id}`}>\r\n                    <img\r\n                      src={linkImage + item.AnhDaiDien}\r\n                      className=\"product-row-thumbnail\"\r\n                      alt={item.AnhDaiDien}\r\n                    />\r\n                  </Link>\r\n                  <div className=\"product-row-price-hover\">\r\n                      <div className=\"product-row-note pull-left\">\r\n                        Xem chi tiết\r\n                      </div>\r\n                    <Link\r\n                      to={`/ProductDetail/${item.id}`}\r\n                      className=\"product-row-btnbuy pull-right\"\r\n                    >\r\n                      Đặt hàng\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n\r\n                <h2 className=\"product-row-name\">{item.TenSanPham}</h2>\r\n                <div className=\"product-row-info\">\r\n                  <div className=\"product-row-price pull-left\">\r\n                    <NumberFormat\r\n                      value={item.GiaCu}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\" VNĐ\"}\r\n                      renderText={(value, props) => (\r\n                        <del {...props}>{value} </del>\r\n                      )}\r\n                    />\r\n                    <br />\r\n                    <span className=\"product-row-sale\">\r\n                      <NumberFormat\r\n                        value={item.GiaKM}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        suffix={\" VNĐ\"}\r\n                        renderText={(value, props) => (\r\n                          <div {...props}>{value}</div>\r\n                        )}\r\n                      />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"new-product-percent\">{item.SoLuong ==0 ?\"Hết hàng\" :\"Còn hàng\"}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    </>\r\n    \r\n    \r\n  );\r\n}\r\n",{"ruleId":"449","severity":1,"message":"450","line":7,"column":50,"nodeType":"451","messageId":"452","endLine":7,"endColumn":54},{"ruleId":"453","severity":1,"message":"454","line":154,"column":13,"nodeType":"455","endLine":154,"endColumn":34},{"ruleId":"453","severity":1,"message":"456","line":157,"column":13,"nodeType":"455","endLine":157,"endColumn":32},{"ruleId":"449","severity":1,"message":"457","line":5,"column":18,"nodeType":"451","messageId":"452","endLine":5,"endColumn":22},{"ruleId":"449","severity":1,"message":"458","line":11,"column":27,"nodeType":"451","messageId":"452","endLine":11,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":11,"column":35,"nodeType":"451","messageId":"452","endLine":11,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":11,"column":43,"nodeType":"451","messageId":"452","endLine":11,"endColumn":48},{"ruleId":"449","severity":1,"message":"461","line":20,"column":3,"nodeType":"451","messageId":"452","endLine":20,"endColumn":10},{"ruleId":"449","severity":1,"message":"462","line":21,"column":3,"nodeType":"451","messageId":"452","endLine":21,"endColumn":9},{"ruleId":"449","severity":1,"message":"463","line":22,"column":3,"nodeType":"451","messageId":"452","endLine":22,"endColumn":7},{"ruleId":"449","severity":1,"message":"464","line":24,"column":3,"nodeType":"451","messageId":"452","endLine":24,"endColumn":12},{"ruleId":"449","severity":1,"message":"465","line":25,"column":3,"nodeType":"451","messageId":"452","endLine":25,"endColumn":6},{"ruleId":"466","severity":1,"message":"467","line":48,"column":27,"nodeType":"468","messageId":"469","endLine":48,"endColumn":29},{"ruleId":"470","severity":1,"message":"471","line":70,"column":6,"nodeType":"472","endLine":70,"endColumn":8,"suggestions":"473"},{"ruleId":"466","severity":1,"message":"474","line":89,"column":39,"nodeType":"468","messageId":"469","endLine":89,"endColumn":41},{"ruleId":"475","severity":1,"message":"476","line":139,"column":17,"nodeType":"455","endLine":139,"endColumn":29},{"ruleId":"466","severity":1,"message":"467","line":268,"column":41,"nodeType":"468","messageId":"469","endLine":268,"endColumn":43},{"ruleId":"449","severity":1,"message":"477","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":26},{"ruleId":"449","severity":1,"message":"458","line":6,"column":20,"nodeType":"451","messageId":"452","endLine":6,"endColumn":26},{"ruleId":"449","severity":1,"message":"459","line":7,"column":3,"nodeType":"451","messageId":"452","endLine":7,"endColumn":9},{"ruleId":"449","severity":1,"message":"460","line":8,"column":3,"nodeType":"451","messageId":"452","endLine":8,"endColumn":8},{"ruleId":"449","severity":1,"message":"450","line":9,"column":3,"nodeType":"451","messageId":"452","endLine":9,"endColumn":7},{"ruleId":"449","severity":1,"message":"465","line":20,"column":8,"nodeType":"451","messageId":"452","endLine":20,"endColumn":11},{"ruleId":"449","severity":1,"message":"478","line":23,"column":3,"nodeType":"451","messageId":"452","endLine":23,"endColumn":17},{"ruleId":"449","severity":1,"message":"479","line":36,"column":10,"nodeType":"451","messageId":"452","endLine":36,"endColumn":18},{"ruleId":"449","severity":1,"message":"480","line":36,"column":20,"nodeType":"451","messageId":"452","endLine":36,"endColumn":31},{"ruleId":"449","severity":1,"message":"481","line":37,"column":10,"nodeType":"451","messageId":"452","endLine":37,"endColumn":18},{"ruleId":"449","severity":1,"message":"482","line":37,"column":20,"nodeType":"451","messageId":"452","endLine":37,"endColumn":31},{"ruleId":"449","severity":1,"message":"483","line":38,"column":10,"nodeType":"451","messageId":"452","endLine":38,"endColumn":15},{"ruleId":"449","severity":1,"message":"484","line":38,"column":17,"nodeType":"451","messageId":"452","endLine":38,"endColumn":25},{"ruleId":"449","severity":1,"message":"485","line":39,"column":10,"nodeType":"451","messageId":"452","endLine":39,"endColumn":18},{"ruleId":"449","severity":1,"message":"486","line":39,"column":20,"nodeType":"451","messageId":"452","endLine":39,"endColumn":31},{"ruleId":"449","severity":1,"message":"487","line":41,"column":10,"nodeType":"451","messageId":"452","endLine":41,"endColumn":17},{"ruleId":"449","severity":1,"message":"488","line":41,"column":19,"nodeType":"451","messageId":"452","endLine":41,"endColumn":29},{"ruleId":"449","severity":1,"message":"489","line":42,"column":10,"nodeType":"451","messageId":"452","endLine":42,"endColumn":14},{"ruleId":"449","severity":1,"message":"490","line":42,"column":16,"nodeType":"451","messageId":"452","endLine":42,"endColumn":23},{"ruleId":"449","severity":1,"message":"491","line":43,"column":10,"nodeType":"451","messageId":"452","endLine":43,"endColumn":18},{"ruleId":"449","severity":1,"message":"492","line":43,"column":20,"nodeType":"451","messageId":"452","endLine":43,"endColumn":31},{"ruleId":"449","severity":1,"message":"493","line":44,"column":10,"nodeType":"451","messageId":"452","endLine":44,"endColumn":13},{"ruleId":"449","severity":1,"message":"494","line":44,"column":15,"nodeType":"451","messageId":"452","endLine":44,"endColumn":21},{"ruleId":"449","severity":1,"message":"495","line":46,"column":10,"nodeType":"451","messageId":"452","endLine":46,"endColumn":20},{"ruleId":"449","severity":1,"message":"496","line":47,"column":10,"nodeType":"451","messageId":"452","endLine":47,"endColumn":23},{"ruleId":"466","severity":1,"message":"474","line":106,"column":35,"nodeType":"468","messageId":"469","endLine":106,"endColumn":37},{"ruleId":"466","severity":1,"message":"474","line":113,"column":38,"nodeType":"468","messageId":"469","endLine":113,"endColumn":40},{"ruleId":"449","severity":1,"message":"497","line":142,"column":9,"nodeType":"451","messageId":"452","endLine":142,"endColumn":21},{"ruleId":"498","severity":1,"message":"499","line":188,"column":80,"nodeType":"500","messageId":"501","endLine":188,"endColumn":81,"suggestions":"502"},{"ruleId":"503","severity":1,"message":"504","line":287,"column":46,"nodeType":"505","messageId":"506","endLine":287,"endColumn":73,"fix":"507"},{"ruleId":"470","severity":1,"message":"471","line":38,"column":6,"nodeType":"472","endLine":38,"endColumn":12,"suggestions":"508"},{"ruleId":"466","severity":1,"message":"467","line":40,"column":14,"nodeType":"468","messageId":"469","endLine":40,"endColumn":16},{"ruleId":"466","severity":1,"message":"467","line":45,"column":21,"nodeType":"468","messageId":"469","endLine":45,"endColumn":23},{"ruleId":"466","severity":1,"message":"467","line":162,"column":82,"nodeType":"468","messageId":"469","endLine":162,"endColumn":84},{"ruleId":"449","severity":1,"message":"509","line":1,"column":8,"nodeType":"451","messageId":"452","endLine":1,"endColumn":13},{"ruleId":"449","severity":1,"message":"510","line":25,"column":28,"nodeType":"451","messageId":"452","endLine":25,"endColumn":41},{"ruleId":"449","severity":1,"message":"511","line":27,"column":10,"nodeType":"451","messageId":"452","endLine":27,"endColumn":18},{"ruleId":"449","severity":1,"message":"480","line":27,"column":20,"nodeType":"451","messageId":"452","endLine":27,"endColumn":31},{"ruleId":"449","severity":1,"message":"512","line":28,"column":10,"nodeType":"451","messageId":"452","endLine":28,"endColumn":18},{"ruleId":"449","severity":1,"message":"482","line":28,"column":20,"nodeType":"451","messageId":"452","endLine":28,"endColumn":31},{"ruleId":"449","severity":1,"message":"513","line":30,"column":10,"nodeType":"451","messageId":"452","endLine":30,"endColumn":16},{"ruleId":"449","severity":1,"message":"514","line":30,"column":18,"nodeType":"451","messageId":"452","endLine":30,"endColumn":27},{"ruleId":"449","severity":1,"message":"515","line":31,"column":10,"nodeType":"451","messageId":"452","endLine":31,"endColumn":15},{"ruleId":"449","severity":1,"message":"516","line":31,"column":17,"nodeType":"451","messageId":"452","endLine":31,"endColumn":25},{"ruleId":"449","severity":1,"message":"517","line":33,"column":10,"nodeType":"451","messageId":"452","endLine":33,"endColumn":16},{"ruleId":"449","severity":1,"message":"518","line":33,"column":18,"nodeType":"451","messageId":"452","endLine":33,"endColumn":27},{"ruleId":"449","severity":1,"message":"519","line":47,"column":5,"nodeType":"451","messageId":"452","endLine":47,"endColumn":10},{"ruleId":"449","severity":1,"message":"489","line":24,"column":10,"nodeType":"451","messageId":"452","endLine":24,"endColumn":14},{"ruleId":"449","severity":1,"message":"520","line":27,"column":10,"nodeType":"451","messageId":"452","endLine":27,"endColumn":14},{"ruleId":"449","severity":1,"message":"521","line":28,"column":10,"nodeType":"451","messageId":"452","endLine":28,"endColumn":18},{"ruleId":"449","severity":1,"message":"522","line":29,"column":10,"nodeType":"451","messageId":"452","endLine":29,"endColumn":22},{"ruleId":"449","severity":1,"message":"523","line":30,"column":10,"nodeType":"451","messageId":"452","endLine":30,"endColumn":23},{"ruleId":"449","severity":1,"message":"524","line":31,"column":10,"nodeType":"451","messageId":"452","endLine":31,"endColumn":20},{"ruleId":"449","severity":1,"message":"525","line":40,"column":10,"nodeType":"451","messageId":"452","endLine":40,"endColumn":18},{"ruleId":"449","severity":1,"message":"526","line":40,"column":48,"nodeType":"451","messageId":"452","endLine":40,"endColumn":54},{"ruleId":"449","severity":1,"message":"519","line":40,"column":58,"nodeType":"451","messageId":"452","endLine":40,"endColumn":63},{"ruleId":"466","severity":1,"message":"474","line":85,"column":57,"nodeType":"468","messageId":"469","endLine":85,"endColumn":59},{"ruleId":"466","severity":1,"message":"474","line":93,"column":48,"nodeType":"468","messageId":"469","endLine":93,"endColumn":50},{"ruleId":"466","severity":1,"message":"474","line":101,"column":58,"nodeType":"468","messageId":"469","endLine":101,"endColumn":60},{"ruleId":"466","severity":1,"message":"467","line":109,"column":30,"nodeType":"468","messageId":"469","endLine":109,"endColumn":32},{"ruleId":"466","severity":1,"message":"474","line":139,"column":43,"nodeType":"468","messageId":"469","endLine":139,"endColumn":45},{"ruleId":"466","severity":1,"message":"474","line":149,"column":40,"nodeType":"468","messageId":"469","endLine":149,"endColumn":42},{"ruleId":"466","severity":1,"message":"474","line":156,"column":37,"nodeType":"468","messageId":"469","endLine":156,"endColumn":39},{"ruleId":"466","severity":1,"message":"467","line":165,"column":30,"nodeType":"468","messageId":"469","endLine":165,"endColumn":32},{"ruleId":"466","severity":1,"message":"467","line":183,"column":41,"nodeType":"468","messageId":"469","endLine":183,"endColumn":43},{"ruleId":"466","severity":1,"message":"474","line":218,"column":40,"nodeType":"468","messageId":"469","endLine":218,"endColumn":42},{"ruleId":"466","severity":1,"message":"474","line":225,"column":37,"nodeType":"468","messageId":"469","endLine":225,"endColumn":39},{"ruleId":"466","severity":1,"message":"467","line":233,"column":30,"nodeType":"468","messageId":"469","endLine":233,"endColumn":32},{"ruleId":"466","severity":1,"message":"474","line":250,"column":43,"nodeType":"468","messageId":"469","endLine":250,"endColumn":45},{"ruleId":"466","severity":1,"message":"474","line":260,"column":40,"nodeType":"468","messageId":"469","endLine":260,"endColumn":42},{"ruleId":"466","severity":1,"message":"474","line":267,"column":37,"nodeType":"468","messageId":"469","endLine":267,"endColumn":39},{"ruleId":"466","severity":1,"message":"467","line":275,"column":30,"nodeType":"468","messageId":"469","endLine":275,"endColumn":32},{"ruleId":"466","severity":1,"message":"474","line":291,"column":43,"nodeType":"468","messageId":"469","endLine":291,"endColumn":45},{"ruleId":"466","severity":1,"message":"474","line":301,"column":40,"nodeType":"468","messageId":"469","endLine":301,"endColumn":42},{"ruleId":"466","severity":1,"message":"474","line":308,"column":37,"nodeType":"468","messageId":"469","endLine":308,"endColumn":39},{"ruleId":"449","severity":1,"message":"527","line":318,"column":9,"nodeType":"451","messageId":"452","endLine":318,"endColumn":20},{"ruleId":"466","severity":1,"message":"467","line":326,"column":33,"nodeType":"468","messageId":"469","endLine":326,"endColumn":35},{"ruleId":"466","severity":1,"message":"467","line":330,"column":40,"nodeType":"468","messageId":"469","endLine":330,"endColumn":42},{"ruleId":"466","severity":1,"message":"467","line":332,"column":40,"nodeType":"468","messageId":"469","endLine":332,"endColumn":42},{"ruleId":"528","severity":1,"message":"529","line":589,"column":33,"nodeType":"530","endLine":589,"endColumn":47},{"ruleId":"528","severity":1,"message":"529","line":610,"column":33,"nodeType":"530","endLine":610,"endColumn":47},{"ruleId":"528","severity":1,"message":"529","line":631,"column":33,"nodeType":"530","endLine":631,"endColumn":47},{"ruleId":"528","severity":1,"message":"529","line":652,"column":33,"nodeType":"530","endLine":652,"endColumn":47},{"ruleId":"470","severity":1,"message":"531","line":19,"column":5,"nodeType":"472","endLine":19,"endColumn":7,"suggestions":"532"},{"ruleId":"449","severity":1,"message":"533","line":5,"column":8,"nodeType":"451","messageId":"452","endLine":5,"endColumn":19},{"ruleId":"449","severity":1,"message":"534","line":1,"column":16,"nodeType":"451","messageId":"452","endLine":1,"endColumn":24},{"ruleId":"449","severity":1,"message":"477","line":1,"column":25,"nodeType":"451","messageId":"452","endLine":1,"endColumn":34},{"ruleId":"449","severity":1,"message":"458","line":5,"column":27,"nodeType":"451","messageId":"452","endLine":5,"endColumn":33},{"ruleId":"466","severity":1,"message":"467","line":30,"column":14,"nodeType":"468","messageId":"469","endLine":30,"endColumn":16},{"ruleId":"466","severity":1,"message":"467","line":38,"column":24,"nodeType":"468","messageId":"469","endLine":38,"endColumn":26},{"ruleId":"470","severity":1,"message":"535","line":45,"column":14,"nodeType":"500","endLine":45,"endColumn":35},{"ruleId":"466","severity":1,"message":"467","line":48,"column":27,"nodeType":"468","messageId":"469","endLine":48,"endColumn":29},{"ruleId":"466","severity":1,"message":"467","line":58,"column":23,"nodeType":"468","messageId":"469","endLine":58,"endColumn":25},{"ruleId":"466","severity":1,"message":"467","line":70,"column":21,"nodeType":"468","messageId":"469","endLine":70,"endColumn":23},{"ruleId":"449","severity":1,"message":"536","line":1,"column":46,"nodeType":"451","messageId":"452","endLine":1,"endColumn":53},{"ruleId":"449","severity":1,"message":"537","line":14,"column":10,"nodeType":"451","messageId":"452","endLine":14,"endColumn":30},{"ruleId":"449","severity":1,"message":"458","line":15,"column":27,"nodeType":"451","messageId":"452","endLine":15,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":15,"column":35,"nodeType":"451","messageId":"452","endLine":15,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":15,"column":43,"nodeType":"451","messageId":"452","endLine":15,"endColumn":48},{"ruleId":"470","severity":1,"message":"538","line":100,"column":4,"nodeType":"472","endLine":100,"endColumn":10,"suggestions":"539"},{"ruleId":"466","severity":1,"message":"467","line":137,"column":32,"nodeType":"468","messageId":"469","endLine":137,"endColumn":34},{"ruleId":"466","severity":1,"message":"467","line":139,"column":39,"nodeType":"468","messageId":"469","endLine":139,"endColumn":41},{"ruleId":"466","severity":1,"message":"467","line":141,"column":39,"nodeType":"468","messageId":"469","endLine":141,"endColumn":41},{"ruleId":"466","severity":1,"message":"467","line":143,"column":39,"nodeType":"468","messageId":"469","endLine":143,"endColumn":41},{"ruleId":"466","severity":1,"message":"467","line":145,"column":39,"nodeType":"468","messageId":"469","endLine":145,"endColumn":41},{"ruleId":"466","severity":1,"message":"467","line":147,"column":39,"nodeType":"468","messageId":"469","endLine":147,"endColumn":41},{"ruleId":"466","severity":1,"message":"467","line":149,"column":39,"nodeType":"468","messageId":"469","endLine":149,"endColumn":41},{"ruleId":"466","severity":1,"message":"467","line":151,"column":39,"nodeType":"468","messageId":"469","endLine":151,"endColumn":41},{"ruleId":"466","severity":1,"message":"467","line":161,"column":22,"nodeType":"468","messageId":"469","endLine":161,"endColumn":24},{"ruleId":"466","severity":1,"message":"467","line":172,"column":29,"nodeType":"468","messageId":"469","endLine":172,"endColumn":31},{"ruleId":"466","severity":1,"message":"467","line":183,"column":29,"nodeType":"468","messageId":"469","endLine":183,"endColumn":31},{"ruleId":"466","severity":1,"message":"467","line":194,"column":29,"nodeType":"468","messageId":"469","endLine":194,"endColumn":31},{"ruleId":"466","severity":1,"message":"467","line":205,"column":29,"nodeType":"468","messageId":"469","endLine":205,"endColumn":31},{"ruleId":"466","severity":1,"message":"467","line":216,"column":29,"nodeType":"468","messageId":"469","endLine":216,"endColumn":31},{"ruleId":"466","severity":1,"message":"467","line":227,"column":29,"nodeType":"468","messageId":"469","endLine":227,"endColumn":31},{"ruleId":"466","severity":1,"message":"467","line":238,"column":29,"nodeType":"468","messageId":"469","endLine":238,"endColumn":31},{"ruleId":"449","severity":1,"message":"540","line":251,"column":9,"nodeType":"451","messageId":"452","endLine":251,"endColumn":23},{"ruleId":"449","severity":1,"message":"541","line":252,"column":11,"nodeType":"451","messageId":"452","endLine":252,"endColumn":19},{"ruleId":"466","severity":1,"message":"467","line":1133,"column":75,"nodeType":"468","messageId":"469","endLine":1133,"endColumn":77},{"ruleId":"466","severity":1,"message":"467","line":1133,"column":88,"nodeType":"468","messageId":"469","endLine":1133,"endColumn":90},{"ruleId":"449","severity":1,"message":"477","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":26},{"ruleId":"449","severity":1,"message":"542","line":4,"column":8,"nodeType":"451","messageId":"452","endLine":4,"endColumn":14},{"ruleId":"449","severity":1,"message":"489","line":8,"column":10,"nodeType":"451","messageId":"452","endLine":8,"endColumn":14},{"ruleId":"449","severity":1,"message":"490","line":8,"column":16,"nodeType":"451","messageId":"452","endLine":8,"endColumn":23},{"ruleId":"449","severity":1,"message":"543","line":9,"column":10,"nodeType":"451","messageId":"452","endLine":9,"endColumn":23},{"ruleId":"449","severity":1,"message":"544","line":9,"column":25,"nodeType":"451","messageId":"452","endLine":9,"endColumn":41},{"ruleId":"449","severity":1,"message":"545","line":10,"column":10,"nodeType":"451","messageId":"452","endLine":10,"endColumn":24},{"ruleId":"449","severity":1,"message":"546","line":10,"column":26,"nodeType":"451","messageId":"452","endLine":10,"endColumn":43},{"ruleId":"449","severity":1,"message":"547","line":11,"column":10,"nodeType":"451","messageId":"452","endLine":11,"endColumn":16},{"ruleId":"449","severity":1,"message":"548","line":11,"column":18,"nodeType":"451","messageId":"452","endLine":11,"endColumn":27},{"ruleId":"449","severity":1,"message":"458","line":5,"column":27,"nodeType":"451","messageId":"452","endLine":5,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":5,"column":35,"nodeType":"451","messageId":"452","endLine":5,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":5,"column":43,"nodeType":"451","messageId":"452","endLine":5,"endColumn":48},{"ruleId":"449","severity":1,"message":"458","line":5,"column":27,"nodeType":"451","messageId":"452","endLine":5,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":5,"column":35,"nodeType":"451","messageId":"452","endLine":5,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":5,"column":43,"nodeType":"451","messageId":"452","endLine":5,"endColumn":48},{"ruleId":"470","severity":1,"message":"471","line":20,"column":6,"nodeType":"472","endLine":20,"endColumn":8,"suggestions":"549"},{"ruleId":"449","severity":1,"message":"458","line":5,"column":27,"nodeType":"451","messageId":"452","endLine":5,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":5,"column":35,"nodeType":"451","messageId":"452","endLine":5,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":5,"column":43,"nodeType":"451","messageId":"452","endLine":5,"endColumn":48},{"ruleId":"449","severity":1,"message":"509","line":5,"column":8,"nodeType":"451","messageId":"452","endLine":5,"endColumn":13},{"ruleId":"449","severity":1,"message":"450","line":7,"column":10,"nodeType":"451","messageId":"452","endLine":7,"endColumn":14},{"ruleId":"449","severity":1,"message":"550","line":8,"column":8,"nodeType":"451","messageId":"452","endLine":8,"endColumn":22},{"ruleId":"449","severity":1,"message":"551","line":15,"column":10,"nodeType":"451","messageId":"452","endLine":15,"endColumn":17},{"ruleId":"449","severity":1,"message":"515","line":16,"column":10,"nodeType":"451","messageId":"452","endLine":16,"endColumn":15},{"ruleId":"449","severity":1,"message":"552","line":18,"column":10,"nodeType":"451","messageId":"452","endLine":18,"endColumn":17},{"ruleId":"449","severity":1,"message":"553","line":18,"column":19,"nodeType":"451","messageId":"452","endLine":18,"endColumn":29},{"ruleId":"449","severity":1,"message":"509","line":7,"column":8,"nodeType":"451","messageId":"452","endLine":7,"endColumn":13},{"ruleId":"449","severity":1,"message":"458","line":12,"column":20,"nodeType":"451","messageId":"452","endLine":12,"endColumn":26},{"ruleId":"449","severity":1,"message":"459","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":9},{"ruleId":"449","severity":1,"message":"460","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":8},{"ruleId":"449","severity":1,"message":"450","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":7},{"ruleId":"449","severity":1,"message":"482","line":21,"column":20,"nodeType":"451","messageId":"452","endLine":21,"endColumn":31},{"ruleId":"449","severity":1,"message":"554","line":22,"column":28,"nodeType":"451","messageId":"452","endLine":22,"endColumn":47},{"ruleId":"449","severity":1,"message":"515","line":23,"column":10,"nodeType":"451","messageId":"452","endLine":23,"endColumn":15},{"ruleId":"466","severity":1,"message":"467","line":40,"column":18,"nodeType":"468","messageId":"469","endLine":40,"endColumn":20},{"ruleId":"449","severity":1,"message":"458","line":5,"column":27,"nodeType":"451","messageId":"452","endLine":5,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":5,"column":35,"nodeType":"451","messageId":"452","endLine":5,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":5,"column":43,"nodeType":"451","messageId":"452","endLine":5,"endColumn":48},{"ruleId":"449","severity":1,"message":"458","line":5,"column":27,"nodeType":"451","messageId":"452","endLine":5,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":5,"column":35,"nodeType":"451","messageId":"452","endLine":5,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":5,"column":43,"nodeType":"451","messageId":"452","endLine":5,"endColumn":48},{"ruleId":"449","severity":1,"message":"477","line":1,"column":27,"nodeType":"451","messageId":"452","endLine":1,"endColumn":36},{"ruleId":"449","severity":1,"message":"458","line":5,"column":27,"nodeType":"451","messageId":"452","endLine":5,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":5,"column":35,"nodeType":"451","messageId":"452","endLine":5,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":5,"column":43,"nodeType":"451","messageId":"452","endLine":5,"endColumn":48},{"ruleId":"449","severity":1,"message":"555","line":10,"column":10,"nodeType":"451","messageId":"452","endLine":10,"endColumn":21},{"ruleId":"449","severity":1,"message":"556","line":14,"column":10,"nodeType":"451","messageId":"452","endLine":14,"endColumn":21},{"ruleId":"449","severity":1,"message":"557","line":14,"column":23,"nodeType":"451","messageId":"452","endLine":14,"endColumn":37},{"ruleId":"449","severity":1,"message":"558","line":15,"column":10,"nodeType":"451","messageId":"452","endLine":15,"endColumn":20},{"ruleId":"449","severity":1,"message":"559","line":15,"column":22,"nodeType":"451","messageId":"452","endLine":15,"endColumn":35},{"ruleId":"449","severity":1,"message":"560","line":16,"column":10,"nodeType":"451","messageId":"452","endLine":16,"endColumn":21},{"ruleId":"449","severity":1,"message":"561","line":16,"column":23,"nodeType":"451","messageId":"452","endLine":16,"endColumn":37},{"ruleId":"503","severity":1,"message":"504","line":130,"column":52,"nodeType":"505","messageId":"506","endLine":130,"endColumn":79,"fix":"562"},{"ruleId":"449","severity":1,"message":"477","line":1,"column":27,"nodeType":"451","messageId":"452","endLine":1,"endColumn":36},{"ruleId":"449","severity":1,"message":"458","line":5,"column":27,"nodeType":"451","messageId":"452","endLine":5,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":5,"column":35,"nodeType":"451","messageId":"452","endLine":5,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":5,"column":43,"nodeType":"451","messageId":"452","endLine":5,"endColumn":48},{"ruleId":"466","severity":1,"message":"474","line":40,"column":37,"nodeType":"468","messageId":"469","endLine":40,"endColumn":39},{"ruleId":"449","severity":1,"message":"458","line":11,"column":22,"nodeType":"451","messageId":"452","endLine":11,"endColumn":28},{"ruleId":"449","severity":1,"message":"459","line":12,"column":5,"nodeType":"451","messageId":"452","endLine":12,"endColumn":11},{"ruleId":"449","severity":1,"message":"460","line":13,"column":5,"nodeType":"451","messageId":"452","endLine":13,"endColumn":10},{"ruleId":"449","severity":1,"message":"450","line":14,"column":5,"nodeType":"451","messageId":"452","endLine":14,"endColumn":9},{"ruleId":"449","severity":1,"message":"516","line":19,"column":17,"nodeType":"451","messageId":"452","endLine":19,"endColumn":25},{"ruleId":"449","severity":1,"message":"520","line":20,"column":10,"nodeType":"451","messageId":"452","endLine":20,"endColumn":14},{"ruleId":"449","severity":1,"message":"563","line":22,"column":11,"nodeType":"451","messageId":"452","endLine":22,"endColumn":26},{"ruleId":"449","severity":1,"message":"534","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":25},{"ruleId":"449","severity":1,"message":"564","line":4,"column":24,"nodeType":"451","messageId":"452","endLine":4,"endColumn":35},{"ruleId":"565","severity":1,"message":"566","line":138,"column":27,"nodeType":"455","endLine":138,"endColumn":101},{"ruleId":"565","severity":1,"message":"566","line":147,"column":27,"nodeType":"455","endLine":147,"endColumn":101},{"ruleId":"565","severity":1,"message":"566","line":154,"column":27,"nodeType":"455","endLine":154,"endColumn":101},{"ruleId":"565","severity":1,"message":"566","line":163,"column":25,"nodeType":"455","endLine":163,"endColumn":99},{"ruleId":"565","severity":1,"message":"566","line":174,"column":25,"nodeType":"455","endLine":174,"endColumn":99},{"ruleId":"475","severity":1,"message":"476","line":186,"column":25,"nodeType":"455","endLine":186,"endColumn":66},{"ruleId":"565","severity":1,"message":"566","line":192,"column":23,"nodeType":"455","endLine":192,"endColumn":101},{"ruleId":"475","severity":1,"message":"476","line":194,"column":25,"nodeType":"455","endLine":194,"endColumn":66},{"ruleId":"565","severity":1,"message":"566","line":200,"column":23,"nodeType":"455","endLine":200,"endColumn":101},{"ruleId":"475","severity":1,"message":"476","line":202,"column":25,"nodeType":"455","endLine":202,"endColumn":66},{"ruleId":"565","severity":1,"message":"566","line":208,"column":23,"nodeType":"455","endLine":208,"endColumn":105},{"ruleId":"565","severity":1,"message":"566","line":216,"column":23,"nodeType":"455","endLine":216,"endColumn":101},{"ruleId":"475","severity":1,"message":"476","line":218,"column":25,"nodeType":"455","endLine":218,"endColumn":66},{"ruleId":"475","severity":1,"message":"567","line":238,"column":15,"nodeType":"455","endLine":238,"endColumn":119},{"ruleId":"565","severity":1,"message":"566","line":240,"column":19,"nodeType":"455","endLine":240,"endColumn":94},{"ruleId":"565","severity":1,"message":"566","line":242,"column":19,"nodeType":"455","endLine":242,"endColumn":94},{"ruleId":"565","severity":1,"message":"566","line":249,"column":21,"nodeType":"455","endLine":249,"endColumn":95},{"ruleId":"565","severity":1,"message":"566","line":251,"column":21,"nodeType":"455","endLine":251,"endColumn":95},{"ruleId":"475","severity":1,"message":"567","line":255,"column":15,"nodeType":"455","endLine":255,"endColumn":119},{"ruleId":"565","severity":1,"message":"566","line":257,"column":19,"nodeType":"455","endLine":257,"endColumn":93},{"ruleId":"565","severity":1,"message":"566","line":259,"column":19,"nodeType":"455","endLine":259,"endColumn":93},{"ruleId":"475","severity":1,"message":"567","line":263,"column":15,"nodeType":"455","endLine":263,"endColumn":119},{"ruleId":"565","severity":1,"message":"566","line":265,"column":19,"nodeType":"455","endLine":265,"endColumn":93},{"ruleId":"565","severity":1,"message":"566","line":267,"column":19,"nodeType":"455","endLine":267,"endColumn":93},{"ruleId":"475","severity":1,"message":"567","line":271,"column":15,"nodeType":"455","endLine":271,"endColumn":119},{"ruleId":"565","severity":1,"message":"566","line":273,"column":19,"nodeType":"455","endLine":273,"endColumn":93},{"ruleId":"565","severity":1,"message":"566","line":275,"column":19,"nodeType":"455","endLine":275,"endColumn":93},{"ruleId":"449","severity":1,"message":"477","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":26},{"ruleId":"449","severity":1,"message":"534","line":1,"column":28,"nodeType":"451","messageId":"452","endLine":1,"endColumn":36},{"ruleId":"449","severity":1,"message":"461","line":3,"column":3,"nodeType":"451","messageId":"452","endLine":3,"endColumn":10},{"ruleId":"449","severity":1,"message":"464","line":7,"column":3,"nodeType":"451","messageId":"452","endLine":7,"endColumn":12},{"ruleId":"449","severity":1,"message":"465","line":8,"column":3,"nodeType":"451","messageId":"452","endLine":8,"endColumn":6},{"ruleId":"449","severity":1,"message":"568","line":10,"column":8,"nodeType":"451","messageId":"452","endLine":10,"endColumn":18},{"ruleId":"449","severity":1,"message":"569","line":15,"column":9,"nodeType":"451","messageId":"452","endLine":15,"endColumn":16},{"ruleId":"470","severity":1,"message":"570","line":36,"column":7,"nodeType":"472","endLine":36,"endColumn":9,"suggestions":"571"},{"ruleId":"449","severity":1,"message":"572","line":8,"column":9,"nodeType":"451","messageId":"452","endLine":8,"endColumn":19},{"ruleId":"475","severity":1,"message":"476","line":74,"column":19,"nodeType":"455","endLine":74,"endColumn":52},{"ruleId":"565","severity":1,"message":"566","line":75,"column":21,"nodeType":"455","endLine":75,"endColumn":98},{"ruleId":"475","severity":1,"message":"476","line":77,"column":19,"nodeType":"455","endLine":77,"endColumn":52},{"ruleId":"565","severity":1,"message":"566","line":78,"column":21,"nodeType":"455","endLine":78,"endColumn":98},{"ruleId":"475","severity":1,"message":"476","line":84,"column":19,"nodeType":"455","endLine":84,"endColumn":52},{"ruleId":"565","severity":1,"message":"566","line":85,"column":21,"nodeType":"455","endLine":85,"endColumn":98},{"ruleId":"475","severity":1,"message":"476","line":87,"column":19,"nodeType":"455","endLine":87,"endColumn":52},{"ruleId":"565","severity":1,"message":"566","line":88,"column":21,"nodeType":"455","endLine":88,"endColumn":98},{"ruleId":"475","severity":1,"message":"476","line":90,"column":19,"nodeType":"455","endLine":90,"endColumn":52},{"ruleId":"565","severity":1,"message":"566","line":91,"column":21,"nodeType":"455","endLine":91,"endColumn":98},{"ruleId":"475","severity":1,"message":"476","line":103,"column":15,"nodeType":"455","endLine":103,"endColumn":27},{"ruleId":"565","severity":1,"message":"566","line":104,"column":17,"nodeType":"455","endLine":104,"endColumn":98},{"ruleId":"475","severity":1,"message":"476","line":110,"column":15,"nodeType":"455","endLine":110,"endColumn":27},{"ruleId":"565","severity":1,"message":"566","line":111,"column":17,"nodeType":"455","endLine":111,"endColumn":98},{"ruleId":"475","severity":1,"message":"476","line":117,"column":15,"nodeType":"455","endLine":117,"endColumn":27},{"ruleId":"565","severity":1,"message":"566","line":118,"column":17,"nodeType":"455","endLine":118,"endColumn":98},{"ruleId":"475","severity":1,"message":"476","line":124,"column":15,"nodeType":"455","endLine":124,"endColumn":27},{"ruleId":"565","severity":1,"message":"566","line":125,"column":17,"nodeType":"455","endLine":125,"endColumn":98},{"ruleId":"449","severity":1,"message":"458","line":2,"column":27,"nodeType":"451","messageId":"452","endLine":2,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":2,"column":35,"nodeType":"451","messageId":"452","endLine":2,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":2,"column":43,"nodeType":"451","messageId":"452","endLine":2,"endColumn":48},{"ruleId":"470","severity":1,"message":"471","line":19,"column":6,"nodeType":"472","endLine":19,"endColumn":8,"suggestions":"573"},{"ruleId":"565","severity":1,"message":"566","line":40,"column":23,"nodeType":"455","endLine":43,"endColumn":25},{"ruleId":"466","severity":1,"message":"467","line":85,"column":37,"nodeType":"468","messageId":"469","endLine":85,"endColumn":39},{"ruleId":"449","severity":1,"message":"458","line":2,"column":27,"nodeType":"451","messageId":"452","endLine":2,"endColumn":33},{"ruleId":"449","severity":1,"message":"459","line":2,"column":35,"nodeType":"451","messageId":"452","endLine":2,"endColumn":41},{"ruleId":"449","severity":1,"message":"460","line":2,"column":43,"nodeType":"451","messageId":"452","endLine":2,"endColumn":48},{"ruleId":"466","severity":1,"message":"467","line":72,"column":70,"nodeType":"468","messageId":"469","endLine":72,"endColumn":72},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Product_Portfolio must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component User_infomartion must be in PascalCase or SCREAMING_SNAKE_CASE","'Form' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Divider' is defined but never used.","'Avatar' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["574"],"Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'FormHelperText' is defined but never used.","'username' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'Email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'nameUser' is assigned a value but never used.","'setNameUser' is assigned a value but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'district' is assigned a value but never used.","'setDistrict' is assigned a value but never used.","'sex' is assigned a value but never used.","'setSex' is assigned a value but never used.","'errorEmail' is assigned a value but never used.","'errorUsername' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["575","576"],"no-whitespace-before-property","Unexpected whitespace before property message.","MemberExpression","unexpectedWhitespace",{"range":"577","text":"578"},["579"],"'Alert' is defined but never used.","'closeSnackbar' is assigned a value but never used.","'userName' is assigned a value but never used.","'Password' is assigned a value but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'google' is assigned a value but never used.","'setGoogle' is assigned a value but never used.","'watch' is assigned a value but never used.","'open' is assigned a value but never used.","'errorQty' is assigned a value but never used.","'errorPayment' is assigned a value but never used.","'errorShipping' is assigned a value but never used.","'errorLogin' is assigned a value but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'handleClose' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["580"],"'PaymentMOMO' is defined but never used.","'useState' is defined but never used.","Assignments to the 'name' variable from inside React Hook useMemo will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useMemo.","'useMemo' is defined but never used.","'exportComponentAsPNG' is defined but never used.","React Hook useEffect has a missing dependency: 'idConfig'. Either include it or remove the dependency array.",["581"],"'handleNextPage' is assigned a value but never used.","'nextPage' is assigned a value but never used.","'Paypal' is defined but never used.","'optionPayment' is assigned a value but never used.","'setOptionPayment' is assigned a value but never used.","'optionShipping' is assigned a value but never used.","'setOptionShipping' is assigned a value but never used.","'paypal' is assigned a value but never used.","'setPayPal' is assigned a value but never used.",["582"],"'LinearProgress' is defined but never used.","'message' is assigned a value but never used.","'process' is assigned a value but never used.","'setProcess' is assigned a value but never used.","'setPassword_confirm' is assigned a value but never used.","'useSnackbar' is defined but never used.","'passwordOld' is assigned a value but never used.","'setPasswordOld' is assigned a value but never used.","'rePassword' is assigned a value but never used.","'setRepassword' is assigned a value but never used.","'newPassword' is assigned a value but never used.","'setNewpassword' is assigned a value but never used.",{"range":"583","text":"578"},"'enqueueSnackbar' is assigned a value but never used.","'useLocation' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ReactStars' is defined but never used.","'imgLink' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'money'. Either include it or remove the dependency array.",["584"],"'handleShow' is assigned a value but never used.",["585"],{"desc":"586","fix":"587"},{"messageId":"588","fix":"589","desc":"590"},{"messageId":"591","fix":"592","desc":"593"},[10184,10186],".",{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"586","fix":"600"},[5662,5664],{"desc":"601","fix":"602"},{"desc":"586","fix":"603"},"Update the dependencies array to be: [id]",{"range":"604","text":"605"},"removeEscape",{"range":"606","text":"607"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"608","text":"609"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [id, page]",{"range":"610","text":"611"},"Update the dependencies array to be: [name]",{"range":"612","text":"613"},"Update the dependencies array to be: [idConfig, page]",{"range":"614","text":"615"},{"range":"616","text":"605"},"Update the dependencies array to be: [money]",{"range":"617","text":"618"},{"range":"619","text":"605"},[2323,2325],"[id]",[6038,6039],"",[6038,6038],"\\",[1252,1258],"[id, page]",[680,682],"[name]",[4409,4415],"[idConfig, page]",[779,781],[1443,1445],"[money]",[641,643]]